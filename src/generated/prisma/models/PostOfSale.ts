
/* !!! This is code generated by Prisma. Do not edit directly. !!! */
/* eslint-disable */
// @ts-nocheck 
/**
 * This file exports the `PostOfSale` model and its related types.
 *
 * ðŸŸ¢ You can import this file directly.
 */
import * as runtime from "@prisma/client/runtime/library"
import type * as $Enums from "../enums"
import type * as Prisma from "../internal/prismaNamespace"

/**
 * Model PostOfSale
 * 
 */
export type PostOfSaleModel = runtime.Types.Result.DefaultSelection<Prisma.$PostOfSalePayload>

export type AggregatePostOfSale = {
  _count: PostOfSaleCountAggregateOutputType | null
  _avg: PostOfSaleAvgAggregateOutputType | null
  _sum: PostOfSaleSumAggregateOutputType | null
  _min: PostOfSaleMinAggregateOutputType | null
  _max: PostOfSaleMaxAggregateOutputType | null
}

export type PostOfSaleAvgAggregateOutputType = {
  price: number | null
}

export type PostOfSaleSumAggregateOutputType = {
  price: number | null
}

export type PostOfSaleMinAggregateOutputType = {
  id: string | null
  title: string | null
  description: string | null
  price: number | null
  status: $Enums.PostStatus | null
  businessId: string | null
  createdAt: Date | null
  updatedAt: Date | null
}

export type PostOfSaleMaxAggregateOutputType = {
  id: string | null
  title: string | null
  description: string | null
  price: number | null
  status: $Enums.PostStatus | null
  businessId: string | null
  createdAt: Date | null
  updatedAt: Date | null
}

export type PostOfSaleCountAggregateOutputType = {
  id: number
  title: number
  description: number
  price: number
  status: number
  businessId: number
  createdAt: number
  updatedAt: number
  _all: number
}


export type PostOfSaleAvgAggregateInputType = {
  price?: true
}

export type PostOfSaleSumAggregateInputType = {
  price?: true
}

export type PostOfSaleMinAggregateInputType = {
  id?: true
  title?: true
  description?: true
  price?: true
  status?: true
  businessId?: true
  createdAt?: true
  updatedAt?: true
}

export type PostOfSaleMaxAggregateInputType = {
  id?: true
  title?: true
  description?: true
  price?: true
  status?: true
  businessId?: true
  createdAt?: true
  updatedAt?: true
}

export type PostOfSaleCountAggregateInputType = {
  id?: true
  title?: true
  description?: true
  price?: true
  status?: true
  businessId?: true
  createdAt?: true
  updatedAt?: true
  _all?: true
}

export type PostOfSaleAggregateArgs<ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs> = {
  /**
   * Filter which PostOfSale to aggregate.
   */
  where?: Prisma.PostOfSaleWhereInput
  /**
   * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
   * 
   * Determine the order of PostOfSales to fetch.
   */
  orderBy?: Prisma.PostOfSaleOrderByWithRelationInput | Prisma.PostOfSaleOrderByWithRelationInput[]
  /**
   * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
   * 
   * Sets the start position
   */
  cursor?: Prisma.PostOfSaleWhereUniqueInput
  /**
   * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
   * 
   * Take `Â±n` PostOfSales from the position of the cursor.
   */
  take?: number
  /**
   * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
   * 
   * Skip the first `n` PostOfSales.
   */
  skip?: number
  /**
   * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
   * 
   * Count returned PostOfSales
  **/
  _count?: true | PostOfSaleCountAggregateInputType
  /**
   * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
   * 
   * Select which fields to average
  **/
  _avg?: PostOfSaleAvgAggregateInputType
  /**
   * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
   * 
   * Select which fields to sum
  **/
  _sum?: PostOfSaleSumAggregateInputType
  /**
   * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
   * 
   * Select which fields to find the minimum value
  **/
  _min?: PostOfSaleMinAggregateInputType
  /**
   * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
   * 
   * Select which fields to find the maximum value
  **/
  _max?: PostOfSaleMaxAggregateInputType
}

export type GetPostOfSaleAggregateType<T extends PostOfSaleAggregateArgs> = {
      [P in keyof T & keyof AggregatePostOfSale]: P extends '_count' | 'count'
    ? T[P] extends true
      ? number
      : Prisma.GetScalarType<T[P], AggregatePostOfSale[P]>
    : Prisma.GetScalarType<T[P], AggregatePostOfSale[P]>
}




export type PostOfSaleGroupByArgs<ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs> = {
  where?: Prisma.PostOfSaleWhereInput
  orderBy?: Prisma.PostOfSaleOrderByWithAggregationInput | Prisma.PostOfSaleOrderByWithAggregationInput[]
  by: Prisma.PostOfSaleScalarFieldEnum[] | Prisma.PostOfSaleScalarFieldEnum
  having?: Prisma.PostOfSaleScalarWhereWithAggregatesInput
  take?: number
  skip?: number
  _count?: PostOfSaleCountAggregateInputType | true
  _avg?: PostOfSaleAvgAggregateInputType
  _sum?: PostOfSaleSumAggregateInputType
  _min?: PostOfSaleMinAggregateInputType
  _max?: PostOfSaleMaxAggregateInputType
}

export type PostOfSaleGroupByOutputType = {
  id: string
  title: string
  description: string | null
  price: number
  status: $Enums.PostStatus
  businessId: string
  createdAt: Date
  updatedAt: Date
  _count: PostOfSaleCountAggregateOutputType | null
  _avg: PostOfSaleAvgAggregateOutputType | null
  _sum: PostOfSaleSumAggregateOutputType | null
  _min: PostOfSaleMinAggregateOutputType | null
  _max: PostOfSaleMaxAggregateOutputType | null
}

type GetPostOfSaleGroupByPayload<T extends PostOfSaleGroupByArgs> = Prisma.PrismaPromise<
  Array<
    Prisma.PickEnumerable<PostOfSaleGroupByOutputType, T['by']> &
      {
        [P in ((keyof T) & (keyof PostOfSaleGroupByOutputType))]: P extends '_count'
          ? T[P] extends boolean
            ? number
            : Prisma.GetScalarType<T[P], PostOfSaleGroupByOutputType[P]>
          : Prisma.GetScalarType<T[P], PostOfSaleGroupByOutputType[P]>
      }
    >
  > 



export type PostOfSaleWhereInput = {
  AND?: Prisma.PostOfSaleWhereInput | Prisma.PostOfSaleWhereInput[]
  OR?: Prisma.PostOfSaleWhereInput[]
  NOT?: Prisma.PostOfSaleWhereInput | Prisma.PostOfSaleWhereInput[]
  id?: Prisma.StringFilter<"PostOfSale"> | string
  title?: Prisma.StringFilter<"PostOfSale"> | string
  description?: Prisma.StringNullableFilter<"PostOfSale"> | string | null
  price?: Prisma.FloatFilter<"PostOfSale"> | number
  status?: Prisma.EnumPostStatusFilter<"PostOfSale"> | $Enums.PostStatus
  businessId?: Prisma.StringFilter<"PostOfSale"> | string
  createdAt?: Prisma.DateTimeFilter<"PostOfSale"> | Date | string
  updatedAt?: Prisma.DateTimeFilter<"PostOfSale"> | Date | string
  business?: Prisma.XOR<Prisma.BusinessScalarRelationFilter, Prisma.BusinessWhereInput>
  media?: Prisma.MediaListRelationFilter
  transactions?: Prisma.PostTransactionListRelationFilter
}

export type PostOfSaleOrderByWithRelationInput = {
  id?: Prisma.SortOrder
  title?: Prisma.SortOrder
  description?: Prisma.SortOrderInput | Prisma.SortOrder
  price?: Prisma.SortOrder
  status?: Prisma.SortOrder
  businessId?: Prisma.SortOrder
  createdAt?: Prisma.SortOrder
  updatedAt?: Prisma.SortOrder
  business?: Prisma.BusinessOrderByWithRelationInput
  media?: Prisma.MediaOrderByRelationAggregateInput
  transactions?: Prisma.PostTransactionOrderByRelationAggregateInput
}

export type PostOfSaleWhereUniqueInput = Prisma.AtLeast<{
  id?: string
  AND?: Prisma.PostOfSaleWhereInput | Prisma.PostOfSaleWhereInput[]
  OR?: Prisma.PostOfSaleWhereInput[]
  NOT?: Prisma.PostOfSaleWhereInput | Prisma.PostOfSaleWhereInput[]
  title?: Prisma.StringFilter<"PostOfSale"> | string
  description?: Prisma.StringNullableFilter<"PostOfSale"> | string | null
  price?: Prisma.FloatFilter<"PostOfSale"> | number
  status?: Prisma.EnumPostStatusFilter<"PostOfSale"> | $Enums.PostStatus
  businessId?: Prisma.StringFilter<"PostOfSale"> | string
  createdAt?: Prisma.DateTimeFilter<"PostOfSale"> | Date | string
  updatedAt?: Prisma.DateTimeFilter<"PostOfSale"> | Date | string
  business?: Prisma.XOR<Prisma.BusinessScalarRelationFilter, Prisma.BusinessWhereInput>
  media?: Prisma.MediaListRelationFilter
  transactions?: Prisma.PostTransactionListRelationFilter
}, "id">

export type PostOfSaleOrderByWithAggregationInput = {
  id?: Prisma.SortOrder
  title?: Prisma.SortOrder
  description?: Prisma.SortOrderInput | Prisma.SortOrder
  price?: Prisma.SortOrder
  status?: Prisma.SortOrder
  businessId?: Prisma.SortOrder
  createdAt?: Prisma.SortOrder
  updatedAt?: Prisma.SortOrder
  _count?: Prisma.PostOfSaleCountOrderByAggregateInput
  _avg?: Prisma.PostOfSaleAvgOrderByAggregateInput
  _max?: Prisma.PostOfSaleMaxOrderByAggregateInput
  _min?: Prisma.PostOfSaleMinOrderByAggregateInput
  _sum?: Prisma.PostOfSaleSumOrderByAggregateInput
}

export type PostOfSaleScalarWhereWithAggregatesInput = {
  AND?: Prisma.PostOfSaleScalarWhereWithAggregatesInput | Prisma.PostOfSaleScalarWhereWithAggregatesInput[]
  OR?: Prisma.PostOfSaleScalarWhereWithAggregatesInput[]
  NOT?: Prisma.PostOfSaleScalarWhereWithAggregatesInput | Prisma.PostOfSaleScalarWhereWithAggregatesInput[]
  id?: Prisma.StringWithAggregatesFilter<"PostOfSale"> | string
  title?: Prisma.StringWithAggregatesFilter<"PostOfSale"> | string
  description?: Prisma.StringNullableWithAggregatesFilter<"PostOfSale"> | string | null
  price?: Prisma.FloatWithAggregatesFilter<"PostOfSale"> | number
  status?: Prisma.EnumPostStatusWithAggregatesFilter<"PostOfSale"> | $Enums.PostStatus
  businessId?: Prisma.StringWithAggregatesFilter<"PostOfSale"> | string
  createdAt?: Prisma.DateTimeWithAggregatesFilter<"PostOfSale"> | Date | string
  updatedAt?: Prisma.DateTimeWithAggregatesFilter<"PostOfSale"> | Date | string
}

export type PostOfSaleCreateInput = {
  id?: string
  title: string
  description?: string | null
  price: number
  status?: $Enums.PostStatus
  createdAt?: Date | string
  updatedAt?: Date | string
  business: Prisma.BusinessCreateNestedOneWithoutPostOfSalesInput
  media?: Prisma.MediaCreateNestedManyWithoutPostOfSalesInput
  transactions?: Prisma.PostTransactionCreateNestedManyWithoutPostInput
}

export type PostOfSaleUncheckedCreateInput = {
  id?: string
  title: string
  description?: string | null
  price: number
  status?: $Enums.PostStatus
  businessId: string
  createdAt?: Date | string
  updatedAt?: Date | string
  media?: Prisma.MediaUncheckedCreateNestedManyWithoutPostOfSalesInput
  transactions?: Prisma.PostTransactionUncheckedCreateNestedManyWithoutPostInput
}

export type PostOfSaleUpdateInput = {
  id?: Prisma.StringFieldUpdateOperationsInput | string
  title?: Prisma.StringFieldUpdateOperationsInput | string
  description?: Prisma.NullableStringFieldUpdateOperationsInput | string | null
  price?: Prisma.FloatFieldUpdateOperationsInput | number
  status?: Prisma.EnumPostStatusFieldUpdateOperationsInput | $Enums.PostStatus
  createdAt?: Prisma.DateTimeFieldUpdateOperationsInput | Date | string
  updatedAt?: Prisma.DateTimeFieldUpdateOperationsInput | Date | string
  business?: Prisma.BusinessUpdateOneRequiredWithoutPostOfSalesNestedInput
  media?: Prisma.MediaUpdateManyWithoutPostOfSalesNestedInput
  transactions?: Prisma.PostTransactionUpdateManyWithoutPostNestedInput
}

export type PostOfSaleUncheckedUpdateInput = {
  id?: Prisma.StringFieldUpdateOperationsInput | string
  title?: Prisma.StringFieldUpdateOperationsInput | string
  description?: Prisma.NullableStringFieldUpdateOperationsInput | string | null
  price?: Prisma.FloatFieldUpdateOperationsInput | number
  status?: Prisma.EnumPostStatusFieldUpdateOperationsInput | $Enums.PostStatus
  businessId?: Prisma.StringFieldUpdateOperationsInput | string
  createdAt?: Prisma.DateTimeFieldUpdateOperationsInput | Date | string
  updatedAt?: Prisma.DateTimeFieldUpdateOperationsInput | Date | string
  media?: Prisma.MediaUncheckedUpdateManyWithoutPostOfSalesNestedInput
  transactions?: Prisma.PostTransactionUncheckedUpdateManyWithoutPostNestedInput
}

export type PostOfSaleCreateManyInput = {
  id?: string
  title: string
  description?: string | null
  price: number
  status?: $Enums.PostStatus
  businessId: string
  createdAt?: Date | string
  updatedAt?: Date | string
}

export type PostOfSaleUpdateManyMutationInput = {
  id?: Prisma.StringFieldUpdateOperationsInput | string
  title?: Prisma.StringFieldUpdateOperationsInput | string
  description?: Prisma.NullableStringFieldUpdateOperationsInput | string | null
  price?: Prisma.FloatFieldUpdateOperationsInput | number
  status?: Prisma.EnumPostStatusFieldUpdateOperationsInput | $Enums.PostStatus
  createdAt?: Prisma.DateTimeFieldUpdateOperationsInput | Date | string
  updatedAt?: Prisma.DateTimeFieldUpdateOperationsInput | Date | string
}

export type PostOfSaleUncheckedUpdateManyInput = {
  id?: Prisma.StringFieldUpdateOperationsInput | string
  title?: Prisma.StringFieldUpdateOperationsInput | string
  description?: Prisma.NullableStringFieldUpdateOperationsInput | string | null
  price?: Prisma.FloatFieldUpdateOperationsInput | number
  status?: Prisma.EnumPostStatusFieldUpdateOperationsInput | $Enums.PostStatus
  businessId?: Prisma.StringFieldUpdateOperationsInput | string
  createdAt?: Prisma.DateTimeFieldUpdateOperationsInput | Date | string
  updatedAt?: Prisma.DateTimeFieldUpdateOperationsInput | Date | string
}

export type PostOfSaleListRelationFilter = {
  every?: Prisma.PostOfSaleWhereInput
  some?: Prisma.PostOfSaleWhereInput
  none?: Prisma.PostOfSaleWhereInput
}

export type PostOfSaleOrderByRelationAggregateInput = {
  _count?: Prisma.SortOrder
}

export type PostOfSaleCountOrderByAggregateInput = {
  id?: Prisma.SortOrder
  title?: Prisma.SortOrder
  description?: Prisma.SortOrder
  price?: Prisma.SortOrder
  status?: Prisma.SortOrder
  businessId?: Prisma.SortOrder
  createdAt?: Prisma.SortOrder
  updatedAt?: Prisma.SortOrder
}

export type PostOfSaleAvgOrderByAggregateInput = {
  price?: Prisma.SortOrder
}

export type PostOfSaleMaxOrderByAggregateInput = {
  id?: Prisma.SortOrder
  title?: Prisma.SortOrder
  description?: Prisma.SortOrder
  price?: Prisma.SortOrder
  status?: Prisma.SortOrder
  businessId?: Prisma.SortOrder
  createdAt?: Prisma.SortOrder
  updatedAt?: Prisma.SortOrder
}

export type PostOfSaleMinOrderByAggregateInput = {
  id?: Prisma.SortOrder
  title?: Prisma.SortOrder
  description?: Prisma.SortOrder
  price?: Prisma.SortOrder
  status?: Prisma.SortOrder
  businessId?: Prisma.SortOrder
  createdAt?: Prisma.SortOrder
  updatedAt?: Prisma.SortOrder
}

export type PostOfSaleSumOrderByAggregateInput = {
  price?: Prisma.SortOrder
}

export type PostOfSaleScalarRelationFilter = {
  is?: Prisma.PostOfSaleWhereInput
  isNot?: Prisma.PostOfSaleWhereInput
}

export type PostOfSaleCreateNestedManyWithoutBusinessInput = {
  create?: Prisma.XOR<Prisma.PostOfSaleCreateWithoutBusinessInput, Prisma.PostOfSaleUncheckedCreateWithoutBusinessInput> | Prisma.PostOfSaleCreateWithoutBusinessInput[] | Prisma.PostOfSaleUncheckedCreateWithoutBusinessInput[]
  connectOrCreate?: Prisma.PostOfSaleCreateOrConnectWithoutBusinessInput | Prisma.PostOfSaleCreateOrConnectWithoutBusinessInput[]
  createMany?: Prisma.PostOfSaleCreateManyBusinessInputEnvelope
  connect?: Prisma.PostOfSaleWhereUniqueInput | Prisma.PostOfSaleWhereUniqueInput[]
}

export type PostOfSaleUncheckedCreateNestedManyWithoutBusinessInput = {
  create?: Prisma.XOR<Prisma.PostOfSaleCreateWithoutBusinessInput, Prisma.PostOfSaleUncheckedCreateWithoutBusinessInput> | Prisma.PostOfSaleCreateWithoutBusinessInput[] | Prisma.PostOfSaleUncheckedCreateWithoutBusinessInput[]
  connectOrCreate?: Prisma.PostOfSaleCreateOrConnectWithoutBusinessInput | Prisma.PostOfSaleCreateOrConnectWithoutBusinessInput[]
  createMany?: Prisma.PostOfSaleCreateManyBusinessInputEnvelope
  connect?: Prisma.PostOfSaleWhereUniqueInput | Prisma.PostOfSaleWhereUniqueInput[]
}

export type PostOfSaleUpdateManyWithoutBusinessNestedInput = {
  create?: Prisma.XOR<Prisma.PostOfSaleCreateWithoutBusinessInput, Prisma.PostOfSaleUncheckedCreateWithoutBusinessInput> | Prisma.PostOfSaleCreateWithoutBusinessInput[] | Prisma.PostOfSaleUncheckedCreateWithoutBusinessInput[]
  connectOrCreate?: Prisma.PostOfSaleCreateOrConnectWithoutBusinessInput | Prisma.PostOfSaleCreateOrConnectWithoutBusinessInput[]
  upsert?: Prisma.PostOfSaleUpsertWithWhereUniqueWithoutBusinessInput | Prisma.PostOfSaleUpsertWithWhereUniqueWithoutBusinessInput[]
  createMany?: Prisma.PostOfSaleCreateManyBusinessInputEnvelope
  set?: Prisma.PostOfSaleWhereUniqueInput | Prisma.PostOfSaleWhereUniqueInput[]
  disconnect?: Prisma.PostOfSaleWhereUniqueInput | Prisma.PostOfSaleWhereUniqueInput[]
  delete?: Prisma.PostOfSaleWhereUniqueInput | Prisma.PostOfSaleWhereUniqueInput[]
  connect?: Prisma.PostOfSaleWhereUniqueInput | Prisma.PostOfSaleWhereUniqueInput[]
  update?: Prisma.PostOfSaleUpdateWithWhereUniqueWithoutBusinessInput | Prisma.PostOfSaleUpdateWithWhereUniqueWithoutBusinessInput[]
  updateMany?: Prisma.PostOfSaleUpdateManyWithWhereWithoutBusinessInput | Prisma.PostOfSaleUpdateManyWithWhereWithoutBusinessInput[]
  deleteMany?: Prisma.PostOfSaleScalarWhereInput | Prisma.PostOfSaleScalarWhereInput[]
}

export type PostOfSaleUncheckedUpdateManyWithoutBusinessNestedInput = {
  create?: Prisma.XOR<Prisma.PostOfSaleCreateWithoutBusinessInput, Prisma.PostOfSaleUncheckedCreateWithoutBusinessInput> | Prisma.PostOfSaleCreateWithoutBusinessInput[] | Prisma.PostOfSaleUncheckedCreateWithoutBusinessInput[]
  connectOrCreate?: Prisma.PostOfSaleCreateOrConnectWithoutBusinessInput | Prisma.PostOfSaleCreateOrConnectWithoutBusinessInput[]
  upsert?: Prisma.PostOfSaleUpsertWithWhereUniqueWithoutBusinessInput | Prisma.PostOfSaleUpsertWithWhereUniqueWithoutBusinessInput[]
  createMany?: Prisma.PostOfSaleCreateManyBusinessInputEnvelope
  set?: Prisma.PostOfSaleWhereUniqueInput | Prisma.PostOfSaleWhereUniqueInput[]
  disconnect?: Prisma.PostOfSaleWhereUniqueInput | Prisma.PostOfSaleWhereUniqueInput[]
  delete?: Prisma.PostOfSaleWhereUniqueInput | Prisma.PostOfSaleWhereUniqueInput[]
  connect?: Prisma.PostOfSaleWhereUniqueInput | Prisma.PostOfSaleWhereUniqueInput[]
  update?: Prisma.PostOfSaleUpdateWithWhereUniqueWithoutBusinessInput | Prisma.PostOfSaleUpdateWithWhereUniqueWithoutBusinessInput[]
  updateMany?: Prisma.PostOfSaleUpdateManyWithWhereWithoutBusinessInput | Prisma.PostOfSaleUpdateManyWithWhereWithoutBusinessInput[]
  deleteMany?: Prisma.PostOfSaleScalarWhereInput | Prisma.PostOfSaleScalarWhereInput[]
}

export type PostOfSaleCreateNestedManyWithoutMediaInput = {
  create?: Prisma.XOR<Prisma.PostOfSaleCreateWithoutMediaInput, Prisma.PostOfSaleUncheckedCreateWithoutMediaInput> | Prisma.PostOfSaleCreateWithoutMediaInput[] | Prisma.PostOfSaleUncheckedCreateWithoutMediaInput[]
  connectOrCreate?: Prisma.PostOfSaleCreateOrConnectWithoutMediaInput | Prisma.PostOfSaleCreateOrConnectWithoutMediaInput[]
  connect?: Prisma.PostOfSaleWhereUniqueInput | Prisma.PostOfSaleWhereUniqueInput[]
}

export type PostOfSaleUncheckedCreateNestedManyWithoutMediaInput = {
  create?: Prisma.XOR<Prisma.PostOfSaleCreateWithoutMediaInput, Prisma.PostOfSaleUncheckedCreateWithoutMediaInput> | Prisma.PostOfSaleCreateWithoutMediaInput[] | Prisma.PostOfSaleUncheckedCreateWithoutMediaInput[]
  connectOrCreate?: Prisma.PostOfSaleCreateOrConnectWithoutMediaInput | Prisma.PostOfSaleCreateOrConnectWithoutMediaInput[]
  connect?: Prisma.PostOfSaleWhereUniqueInput | Prisma.PostOfSaleWhereUniqueInput[]
}

export type PostOfSaleUpdateManyWithoutMediaNestedInput = {
  create?: Prisma.XOR<Prisma.PostOfSaleCreateWithoutMediaInput, Prisma.PostOfSaleUncheckedCreateWithoutMediaInput> | Prisma.PostOfSaleCreateWithoutMediaInput[] | Prisma.PostOfSaleUncheckedCreateWithoutMediaInput[]
  connectOrCreate?: Prisma.PostOfSaleCreateOrConnectWithoutMediaInput | Prisma.PostOfSaleCreateOrConnectWithoutMediaInput[]
  upsert?: Prisma.PostOfSaleUpsertWithWhereUniqueWithoutMediaInput | Prisma.PostOfSaleUpsertWithWhereUniqueWithoutMediaInput[]
  set?: Prisma.PostOfSaleWhereUniqueInput | Prisma.PostOfSaleWhereUniqueInput[]
  disconnect?: Prisma.PostOfSaleWhereUniqueInput | Prisma.PostOfSaleWhereUniqueInput[]
  delete?: Prisma.PostOfSaleWhereUniqueInput | Prisma.PostOfSaleWhereUniqueInput[]
  connect?: Prisma.PostOfSaleWhereUniqueInput | Prisma.PostOfSaleWhereUniqueInput[]
  update?: Prisma.PostOfSaleUpdateWithWhereUniqueWithoutMediaInput | Prisma.PostOfSaleUpdateWithWhereUniqueWithoutMediaInput[]
  updateMany?: Prisma.PostOfSaleUpdateManyWithWhereWithoutMediaInput | Prisma.PostOfSaleUpdateManyWithWhereWithoutMediaInput[]
  deleteMany?: Prisma.PostOfSaleScalarWhereInput | Prisma.PostOfSaleScalarWhereInput[]
}

export type PostOfSaleUncheckedUpdateManyWithoutMediaNestedInput = {
  create?: Prisma.XOR<Prisma.PostOfSaleCreateWithoutMediaInput, Prisma.PostOfSaleUncheckedCreateWithoutMediaInput> | Prisma.PostOfSaleCreateWithoutMediaInput[] | Prisma.PostOfSaleUncheckedCreateWithoutMediaInput[]
  connectOrCreate?: Prisma.PostOfSaleCreateOrConnectWithoutMediaInput | Prisma.PostOfSaleCreateOrConnectWithoutMediaInput[]
  upsert?: Prisma.PostOfSaleUpsertWithWhereUniqueWithoutMediaInput | Prisma.PostOfSaleUpsertWithWhereUniqueWithoutMediaInput[]
  set?: Prisma.PostOfSaleWhereUniqueInput | Prisma.PostOfSaleWhereUniqueInput[]
  disconnect?: Prisma.PostOfSaleWhereUniqueInput | Prisma.PostOfSaleWhereUniqueInput[]
  delete?: Prisma.PostOfSaleWhereUniqueInput | Prisma.PostOfSaleWhereUniqueInput[]
  connect?: Prisma.PostOfSaleWhereUniqueInput | Prisma.PostOfSaleWhereUniqueInput[]
  update?: Prisma.PostOfSaleUpdateWithWhereUniqueWithoutMediaInput | Prisma.PostOfSaleUpdateWithWhereUniqueWithoutMediaInput[]
  updateMany?: Prisma.PostOfSaleUpdateManyWithWhereWithoutMediaInput | Prisma.PostOfSaleUpdateManyWithWhereWithoutMediaInput[]
  deleteMany?: Prisma.PostOfSaleScalarWhereInput | Prisma.PostOfSaleScalarWhereInput[]
}

export type EnumPostStatusFieldUpdateOperationsInput = {
  set?: $Enums.PostStatus
}

export type PostOfSaleCreateNestedOneWithoutTransactionsInput = {
  create?: Prisma.XOR<Prisma.PostOfSaleCreateWithoutTransactionsInput, Prisma.PostOfSaleUncheckedCreateWithoutTransactionsInput>
  connectOrCreate?: Prisma.PostOfSaleCreateOrConnectWithoutTransactionsInput
  connect?: Prisma.PostOfSaleWhereUniqueInput
}

export type PostOfSaleUpdateOneRequiredWithoutTransactionsNestedInput = {
  create?: Prisma.XOR<Prisma.PostOfSaleCreateWithoutTransactionsInput, Prisma.PostOfSaleUncheckedCreateWithoutTransactionsInput>
  connectOrCreate?: Prisma.PostOfSaleCreateOrConnectWithoutTransactionsInput
  upsert?: Prisma.PostOfSaleUpsertWithoutTransactionsInput
  connect?: Prisma.PostOfSaleWhereUniqueInput
  update?: Prisma.XOR<Prisma.XOR<Prisma.PostOfSaleUpdateToOneWithWhereWithoutTransactionsInput, Prisma.PostOfSaleUpdateWithoutTransactionsInput>, Prisma.PostOfSaleUncheckedUpdateWithoutTransactionsInput>
}

export type PostOfSaleCreateWithoutBusinessInput = {
  id?: string
  title: string
  description?: string | null
  price: number
  status?: $Enums.PostStatus
  createdAt?: Date | string
  updatedAt?: Date | string
  media?: Prisma.MediaCreateNestedManyWithoutPostOfSalesInput
  transactions?: Prisma.PostTransactionCreateNestedManyWithoutPostInput
}

export type PostOfSaleUncheckedCreateWithoutBusinessInput = {
  id?: string
  title: string
  description?: string | null
  price: number
  status?: $Enums.PostStatus
  createdAt?: Date | string
  updatedAt?: Date | string
  media?: Prisma.MediaUncheckedCreateNestedManyWithoutPostOfSalesInput
  transactions?: Prisma.PostTransactionUncheckedCreateNestedManyWithoutPostInput
}

export type PostOfSaleCreateOrConnectWithoutBusinessInput = {
  where: Prisma.PostOfSaleWhereUniqueInput
  create: Prisma.XOR<Prisma.PostOfSaleCreateWithoutBusinessInput, Prisma.PostOfSaleUncheckedCreateWithoutBusinessInput>
}

export type PostOfSaleCreateManyBusinessInputEnvelope = {
  data: Prisma.PostOfSaleCreateManyBusinessInput | Prisma.PostOfSaleCreateManyBusinessInput[]
  skipDuplicates?: boolean
}

export type PostOfSaleUpsertWithWhereUniqueWithoutBusinessInput = {
  where: Prisma.PostOfSaleWhereUniqueInput
  update: Prisma.XOR<Prisma.PostOfSaleUpdateWithoutBusinessInput, Prisma.PostOfSaleUncheckedUpdateWithoutBusinessInput>
  create: Prisma.XOR<Prisma.PostOfSaleCreateWithoutBusinessInput, Prisma.PostOfSaleUncheckedCreateWithoutBusinessInput>
}

export type PostOfSaleUpdateWithWhereUniqueWithoutBusinessInput = {
  where: Prisma.PostOfSaleWhereUniqueInput
  data: Prisma.XOR<Prisma.PostOfSaleUpdateWithoutBusinessInput, Prisma.PostOfSaleUncheckedUpdateWithoutBusinessInput>
}

export type PostOfSaleUpdateManyWithWhereWithoutBusinessInput = {
  where: Prisma.PostOfSaleScalarWhereInput
  data: Prisma.XOR<Prisma.PostOfSaleUpdateManyMutationInput, Prisma.PostOfSaleUncheckedUpdateManyWithoutBusinessInput>
}

export type PostOfSaleScalarWhereInput = {
  AND?: Prisma.PostOfSaleScalarWhereInput | Prisma.PostOfSaleScalarWhereInput[]
  OR?: Prisma.PostOfSaleScalarWhereInput[]
  NOT?: Prisma.PostOfSaleScalarWhereInput | Prisma.PostOfSaleScalarWhereInput[]
  id?: Prisma.StringFilter<"PostOfSale"> | string
  title?: Prisma.StringFilter<"PostOfSale"> | string
  description?: Prisma.StringNullableFilter<"PostOfSale"> | string | null
  price?: Prisma.FloatFilter<"PostOfSale"> | number
  status?: Prisma.EnumPostStatusFilter<"PostOfSale"> | $Enums.PostStatus
  businessId?: Prisma.StringFilter<"PostOfSale"> | string
  createdAt?: Prisma.DateTimeFilter<"PostOfSale"> | Date | string
  updatedAt?: Prisma.DateTimeFilter<"PostOfSale"> | Date | string
}

export type PostOfSaleCreateWithoutMediaInput = {
  id?: string
  title: string
  description?: string | null
  price: number
  status?: $Enums.PostStatus
  createdAt?: Date | string
  updatedAt?: Date | string
  business: Prisma.BusinessCreateNestedOneWithoutPostOfSalesInput
  transactions?: Prisma.PostTransactionCreateNestedManyWithoutPostInput
}

export type PostOfSaleUncheckedCreateWithoutMediaInput = {
  id?: string
  title: string
  description?: string | null
  price: number
  status?: $Enums.PostStatus
  businessId: string
  createdAt?: Date | string
  updatedAt?: Date | string
  transactions?: Prisma.PostTransactionUncheckedCreateNestedManyWithoutPostInput
}

export type PostOfSaleCreateOrConnectWithoutMediaInput = {
  where: Prisma.PostOfSaleWhereUniqueInput
  create: Prisma.XOR<Prisma.PostOfSaleCreateWithoutMediaInput, Prisma.PostOfSaleUncheckedCreateWithoutMediaInput>
}

export type PostOfSaleUpsertWithWhereUniqueWithoutMediaInput = {
  where: Prisma.PostOfSaleWhereUniqueInput
  update: Prisma.XOR<Prisma.PostOfSaleUpdateWithoutMediaInput, Prisma.PostOfSaleUncheckedUpdateWithoutMediaInput>
  create: Prisma.XOR<Prisma.PostOfSaleCreateWithoutMediaInput, Prisma.PostOfSaleUncheckedCreateWithoutMediaInput>
}

export type PostOfSaleUpdateWithWhereUniqueWithoutMediaInput = {
  where: Prisma.PostOfSaleWhereUniqueInput
  data: Prisma.XOR<Prisma.PostOfSaleUpdateWithoutMediaInput, Prisma.PostOfSaleUncheckedUpdateWithoutMediaInput>
}

export type PostOfSaleUpdateManyWithWhereWithoutMediaInput = {
  where: Prisma.PostOfSaleScalarWhereInput
  data: Prisma.XOR<Prisma.PostOfSaleUpdateManyMutationInput, Prisma.PostOfSaleUncheckedUpdateManyWithoutMediaInput>
}

export type PostOfSaleCreateWithoutTransactionsInput = {
  id?: string
  title: string
  description?: string | null
  price: number
  status?: $Enums.PostStatus
  createdAt?: Date | string
  updatedAt?: Date | string
  business: Prisma.BusinessCreateNestedOneWithoutPostOfSalesInput
  media?: Prisma.MediaCreateNestedManyWithoutPostOfSalesInput
}

export type PostOfSaleUncheckedCreateWithoutTransactionsInput = {
  id?: string
  title: string
  description?: string | null
  price: number
  status?: $Enums.PostStatus
  businessId: string
  createdAt?: Date | string
  updatedAt?: Date | string
  media?: Prisma.MediaUncheckedCreateNestedManyWithoutPostOfSalesInput
}

export type PostOfSaleCreateOrConnectWithoutTransactionsInput = {
  where: Prisma.PostOfSaleWhereUniqueInput
  create: Prisma.XOR<Prisma.PostOfSaleCreateWithoutTransactionsInput, Prisma.PostOfSaleUncheckedCreateWithoutTransactionsInput>
}

export type PostOfSaleUpsertWithoutTransactionsInput = {
  update: Prisma.XOR<Prisma.PostOfSaleUpdateWithoutTransactionsInput, Prisma.PostOfSaleUncheckedUpdateWithoutTransactionsInput>
  create: Prisma.XOR<Prisma.PostOfSaleCreateWithoutTransactionsInput, Prisma.PostOfSaleUncheckedCreateWithoutTransactionsInput>
  where?: Prisma.PostOfSaleWhereInput
}

export type PostOfSaleUpdateToOneWithWhereWithoutTransactionsInput = {
  where?: Prisma.PostOfSaleWhereInput
  data: Prisma.XOR<Prisma.PostOfSaleUpdateWithoutTransactionsInput, Prisma.PostOfSaleUncheckedUpdateWithoutTransactionsInput>
}

export type PostOfSaleUpdateWithoutTransactionsInput = {
  id?: Prisma.StringFieldUpdateOperationsInput | string
  title?: Prisma.StringFieldUpdateOperationsInput | string
  description?: Prisma.NullableStringFieldUpdateOperationsInput | string | null
  price?: Prisma.FloatFieldUpdateOperationsInput | number
  status?: Prisma.EnumPostStatusFieldUpdateOperationsInput | $Enums.PostStatus
  createdAt?: Prisma.DateTimeFieldUpdateOperationsInput | Date | string
  updatedAt?: Prisma.DateTimeFieldUpdateOperationsInput | Date | string
  business?: Prisma.BusinessUpdateOneRequiredWithoutPostOfSalesNestedInput
  media?: Prisma.MediaUpdateManyWithoutPostOfSalesNestedInput
}

export type PostOfSaleUncheckedUpdateWithoutTransactionsInput = {
  id?: Prisma.StringFieldUpdateOperationsInput | string
  title?: Prisma.StringFieldUpdateOperationsInput | string
  description?: Prisma.NullableStringFieldUpdateOperationsInput | string | null
  price?: Prisma.FloatFieldUpdateOperationsInput | number
  status?: Prisma.EnumPostStatusFieldUpdateOperationsInput | $Enums.PostStatus
  businessId?: Prisma.StringFieldUpdateOperationsInput | string
  createdAt?: Prisma.DateTimeFieldUpdateOperationsInput | Date | string
  updatedAt?: Prisma.DateTimeFieldUpdateOperationsInput | Date | string
  media?: Prisma.MediaUncheckedUpdateManyWithoutPostOfSalesNestedInput
}

export type PostOfSaleCreateManyBusinessInput = {
  id?: string
  title: string
  description?: string | null
  price: number
  status?: $Enums.PostStatus
  createdAt?: Date | string
  updatedAt?: Date | string
}

export type PostOfSaleUpdateWithoutBusinessInput = {
  id?: Prisma.StringFieldUpdateOperationsInput | string
  title?: Prisma.StringFieldUpdateOperationsInput | string
  description?: Prisma.NullableStringFieldUpdateOperationsInput | string | null
  price?: Prisma.FloatFieldUpdateOperationsInput | number
  status?: Prisma.EnumPostStatusFieldUpdateOperationsInput | $Enums.PostStatus
  createdAt?: Prisma.DateTimeFieldUpdateOperationsInput | Date | string
  updatedAt?: Prisma.DateTimeFieldUpdateOperationsInput | Date | string
  media?: Prisma.MediaUpdateManyWithoutPostOfSalesNestedInput
  transactions?: Prisma.PostTransactionUpdateManyWithoutPostNestedInput
}

export type PostOfSaleUncheckedUpdateWithoutBusinessInput = {
  id?: Prisma.StringFieldUpdateOperationsInput | string
  title?: Prisma.StringFieldUpdateOperationsInput | string
  description?: Prisma.NullableStringFieldUpdateOperationsInput | string | null
  price?: Prisma.FloatFieldUpdateOperationsInput | number
  status?: Prisma.EnumPostStatusFieldUpdateOperationsInput | $Enums.PostStatus
  createdAt?: Prisma.DateTimeFieldUpdateOperationsInput | Date | string
  updatedAt?: Prisma.DateTimeFieldUpdateOperationsInput | Date | string
  media?: Prisma.MediaUncheckedUpdateManyWithoutPostOfSalesNestedInput
  transactions?: Prisma.PostTransactionUncheckedUpdateManyWithoutPostNestedInput
}

export type PostOfSaleUncheckedUpdateManyWithoutBusinessInput = {
  id?: Prisma.StringFieldUpdateOperationsInput | string
  title?: Prisma.StringFieldUpdateOperationsInput | string
  description?: Prisma.NullableStringFieldUpdateOperationsInput | string | null
  price?: Prisma.FloatFieldUpdateOperationsInput | number
  status?: Prisma.EnumPostStatusFieldUpdateOperationsInput | $Enums.PostStatus
  createdAt?: Prisma.DateTimeFieldUpdateOperationsInput | Date | string
  updatedAt?: Prisma.DateTimeFieldUpdateOperationsInput | Date | string
}

export type PostOfSaleUpdateWithoutMediaInput = {
  id?: Prisma.StringFieldUpdateOperationsInput | string
  title?: Prisma.StringFieldUpdateOperationsInput | string
  description?: Prisma.NullableStringFieldUpdateOperationsInput | string | null
  price?: Prisma.FloatFieldUpdateOperationsInput | number
  status?: Prisma.EnumPostStatusFieldUpdateOperationsInput | $Enums.PostStatus
  createdAt?: Prisma.DateTimeFieldUpdateOperationsInput | Date | string
  updatedAt?: Prisma.DateTimeFieldUpdateOperationsInput | Date | string
  business?: Prisma.BusinessUpdateOneRequiredWithoutPostOfSalesNestedInput
  transactions?: Prisma.PostTransactionUpdateManyWithoutPostNestedInput
}

export type PostOfSaleUncheckedUpdateWithoutMediaInput = {
  id?: Prisma.StringFieldUpdateOperationsInput | string
  title?: Prisma.StringFieldUpdateOperationsInput | string
  description?: Prisma.NullableStringFieldUpdateOperationsInput | string | null
  price?: Prisma.FloatFieldUpdateOperationsInput | number
  status?: Prisma.EnumPostStatusFieldUpdateOperationsInput | $Enums.PostStatus
  businessId?: Prisma.StringFieldUpdateOperationsInput | string
  createdAt?: Prisma.DateTimeFieldUpdateOperationsInput | Date | string
  updatedAt?: Prisma.DateTimeFieldUpdateOperationsInput | Date | string
  transactions?: Prisma.PostTransactionUncheckedUpdateManyWithoutPostNestedInput
}

export type PostOfSaleUncheckedUpdateManyWithoutMediaInput = {
  id?: Prisma.StringFieldUpdateOperationsInput | string
  title?: Prisma.StringFieldUpdateOperationsInput | string
  description?: Prisma.NullableStringFieldUpdateOperationsInput | string | null
  price?: Prisma.FloatFieldUpdateOperationsInput | number
  status?: Prisma.EnumPostStatusFieldUpdateOperationsInput | $Enums.PostStatus
  businessId?: Prisma.StringFieldUpdateOperationsInput | string
  createdAt?: Prisma.DateTimeFieldUpdateOperationsInput | Date | string
  updatedAt?: Prisma.DateTimeFieldUpdateOperationsInput | Date | string
}


/**
 * Count Type PostOfSaleCountOutputType
 */

export type PostOfSaleCountOutputType = {
  media: number
  transactions: number
}

export type PostOfSaleCountOutputTypeSelect<ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs> = {
  media?: boolean | PostOfSaleCountOutputTypeCountMediaArgs
  transactions?: boolean | PostOfSaleCountOutputTypeCountTransactionsArgs
}

/**
 * PostOfSaleCountOutputType without action
 */
export type PostOfSaleCountOutputTypeDefaultArgs<ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs> = {
  /**
   * Select specific fields to fetch from the PostOfSaleCountOutputType
   */
  select?: Prisma.PostOfSaleCountOutputTypeSelect<ExtArgs> | null
}

/**
 * PostOfSaleCountOutputType without action
 */
export type PostOfSaleCountOutputTypeCountMediaArgs<ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs> = {
  where?: Prisma.MediaWhereInput
}

/**
 * PostOfSaleCountOutputType without action
 */
export type PostOfSaleCountOutputTypeCountTransactionsArgs<ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs> = {
  where?: Prisma.PostTransactionWhereInput
}


export type PostOfSaleSelect<ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs> = runtime.Types.Extensions.GetSelect<{
  id?: boolean
  title?: boolean
  description?: boolean
  price?: boolean
  status?: boolean
  businessId?: boolean
  createdAt?: boolean
  updatedAt?: boolean
  business?: boolean | Prisma.BusinessDefaultArgs<ExtArgs>
  media?: boolean | Prisma.PostOfSale$mediaArgs<ExtArgs>
  transactions?: boolean | Prisma.PostOfSale$transactionsArgs<ExtArgs>
  _count?: boolean | Prisma.PostOfSaleCountOutputTypeDefaultArgs<ExtArgs>
}, ExtArgs["result"]["postOfSale"]>

export type PostOfSaleSelectCreateManyAndReturn<ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs> = runtime.Types.Extensions.GetSelect<{
  id?: boolean
  title?: boolean
  description?: boolean
  price?: boolean
  status?: boolean
  businessId?: boolean
  createdAt?: boolean
  updatedAt?: boolean
  business?: boolean | Prisma.BusinessDefaultArgs<ExtArgs>
}, ExtArgs["result"]["postOfSale"]>

export type PostOfSaleSelectUpdateManyAndReturn<ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs> = runtime.Types.Extensions.GetSelect<{
  id?: boolean
  title?: boolean
  description?: boolean
  price?: boolean
  status?: boolean
  businessId?: boolean
  createdAt?: boolean
  updatedAt?: boolean
  business?: boolean | Prisma.BusinessDefaultArgs<ExtArgs>
}, ExtArgs["result"]["postOfSale"]>

export type PostOfSaleSelectScalar = {
  id?: boolean
  title?: boolean
  description?: boolean
  price?: boolean
  status?: boolean
  businessId?: boolean
  createdAt?: boolean
  updatedAt?: boolean
}

export type PostOfSaleOmit<ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs> = runtime.Types.Extensions.GetOmit<"id" | "title" | "description" | "price" | "status" | "businessId" | "createdAt" | "updatedAt", ExtArgs["result"]["postOfSale"]>
export type PostOfSaleInclude<ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs> = {
  business?: boolean | Prisma.BusinessDefaultArgs<ExtArgs>
  media?: boolean | Prisma.PostOfSale$mediaArgs<ExtArgs>
  transactions?: boolean | Prisma.PostOfSale$transactionsArgs<ExtArgs>
  _count?: boolean | Prisma.PostOfSaleCountOutputTypeDefaultArgs<ExtArgs>
}
export type PostOfSaleIncludeCreateManyAndReturn<ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs> = {
  business?: boolean | Prisma.BusinessDefaultArgs<ExtArgs>
}
export type PostOfSaleIncludeUpdateManyAndReturn<ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs> = {
  business?: boolean | Prisma.BusinessDefaultArgs<ExtArgs>
}

export type $PostOfSalePayload<ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs> = {
  name: "PostOfSale"
  objects: {
    business: Prisma.$BusinessPayload<ExtArgs>
    media: Prisma.$MediaPayload<ExtArgs>[]
    transactions: Prisma.$PostTransactionPayload<ExtArgs>[]
  }
  scalars: runtime.Types.Extensions.GetPayloadResult<{
    id: string
    title: string
    description: string | null
    price: number
    status: $Enums.PostStatus
    businessId: string
    createdAt: Date
    updatedAt: Date
  }, ExtArgs["result"]["postOfSale"]>
  composites: {}
}

export type PostOfSaleGetPayload<S extends boolean | null | undefined | PostOfSaleDefaultArgs> = runtime.Types.Result.GetResult<Prisma.$PostOfSalePayload, S>

export type PostOfSaleCountArgs<ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs> =
  Omit<PostOfSaleFindManyArgs, 'select' | 'include' | 'distinct' | 'omit'> & {
    select?: PostOfSaleCountAggregateInputType | true
  }

export interface PostOfSaleDelegate<ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs, GlobalOmitOptions = {}> {
  [K: symbol]: { types: Prisma.TypeMap<ExtArgs>['model']['PostOfSale'], meta: { name: 'PostOfSale' } }
  /**
   * Find zero or one PostOfSale that matches the filter.
   * @param {PostOfSaleFindUniqueArgs} args - Arguments to find a PostOfSale
   * @example
   * // Get one PostOfSale
   * const postOfSale = await prisma.postOfSale.findUnique({
   *   where: {
   *     // ... provide filter here
   *   }
   * })
   */
  findUnique<T extends PostOfSaleFindUniqueArgs>(args: Prisma.SelectSubset<T, PostOfSaleFindUniqueArgs<ExtArgs>>): Prisma.Prisma__PostOfSaleClient<runtime.Types.Result.GetResult<Prisma.$PostOfSalePayload<ExtArgs>, T, "findUnique", GlobalOmitOptions> | null, null, ExtArgs, GlobalOmitOptions>

  /**
   * Find one PostOfSale that matches the filter or throw an error with `error.code='P2025'`
   * if no matches were found.
   * @param {PostOfSaleFindUniqueOrThrowArgs} args - Arguments to find a PostOfSale
   * @example
   * // Get one PostOfSale
   * const postOfSale = await prisma.postOfSale.findUniqueOrThrow({
   *   where: {
   *     // ... provide filter here
   *   }
   * })
   */
  findUniqueOrThrow<T extends PostOfSaleFindUniqueOrThrowArgs>(args: Prisma.SelectSubset<T, PostOfSaleFindUniqueOrThrowArgs<ExtArgs>>): Prisma.Prisma__PostOfSaleClient<runtime.Types.Result.GetResult<Prisma.$PostOfSalePayload<ExtArgs>, T, "findUniqueOrThrow", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

  /**
   * Find the first PostOfSale that matches the filter.
   * Note, that providing `undefined` is treated as the value not being there.
   * Read more here: https://pris.ly/d/null-undefined
   * @param {PostOfSaleFindFirstArgs} args - Arguments to find a PostOfSale
   * @example
   * // Get one PostOfSale
   * const postOfSale = await prisma.postOfSale.findFirst({
   *   where: {
   *     // ... provide filter here
   *   }
   * })
   */
  findFirst<T extends PostOfSaleFindFirstArgs>(args?: Prisma.SelectSubset<T, PostOfSaleFindFirstArgs<ExtArgs>>): Prisma.Prisma__PostOfSaleClient<runtime.Types.Result.GetResult<Prisma.$PostOfSalePayload<ExtArgs>, T, "findFirst", GlobalOmitOptions> | null, null, ExtArgs, GlobalOmitOptions>

  /**
   * Find the first PostOfSale that matches the filter or
   * throw `PrismaKnownClientError` with `P2025` code if no matches were found.
   * Note, that providing `undefined` is treated as the value not being there.
   * Read more here: https://pris.ly/d/null-undefined
   * @param {PostOfSaleFindFirstOrThrowArgs} args - Arguments to find a PostOfSale
   * @example
   * // Get one PostOfSale
   * const postOfSale = await prisma.postOfSale.findFirstOrThrow({
   *   where: {
   *     // ... provide filter here
   *   }
   * })
   */
  findFirstOrThrow<T extends PostOfSaleFindFirstOrThrowArgs>(args?: Prisma.SelectSubset<T, PostOfSaleFindFirstOrThrowArgs<ExtArgs>>): Prisma.Prisma__PostOfSaleClient<runtime.Types.Result.GetResult<Prisma.$PostOfSalePayload<ExtArgs>, T, "findFirstOrThrow", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

  /**
   * Find zero or more PostOfSales that matches the filter.
   * Note, that providing `undefined` is treated as the value not being there.
   * Read more here: https://pris.ly/d/null-undefined
   * @param {PostOfSaleFindManyArgs} args - Arguments to filter and select certain fields only.
   * @example
   * // Get all PostOfSales
   * const postOfSales = await prisma.postOfSale.findMany()
   * 
   * // Get first 10 PostOfSales
   * const postOfSales = await prisma.postOfSale.findMany({ take: 10 })
   * 
   * // Only select the `id`
   * const postOfSaleWithIdOnly = await prisma.postOfSale.findMany({ select: { id: true } })
   * 
   */
  findMany<T extends PostOfSaleFindManyArgs>(args?: Prisma.SelectSubset<T, PostOfSaleFindManyArgs<ExtArgs>>): Prisma.PrismaPromise<runtime.Types.Result.GetResult<Prisma.$PostOfSalePayload<ExtArgs>, T, "findMany", GlobalOmitOptions>>

  /**
   * Create a PostOfSale.
   * @param {PostOfSaleCreateArgs} args - Arguments to create a PostOfSale.
   * @example
   * // Create one PostOfSale
   * const PostOfSale = await prisma.postOfSale.create({
   *   data: {
   *     // ... data to create a PostOfSale
   *   }
   * })
   * 
   */
  create<T extends PostOfSaleCreateArgs>(args: Prisma.SelectSubset<T, PostOfSaleCreateArgs<ExtArgs>>): Prisma.Prisma__PostOfSaleClient<runtime.Types.Result.GetResult<Prisma.$PostOfSalePayload<ExtArgs>, T, "create", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

  /**
   * Create many PostOfSales.
   * @param {PostOfSaleCreateManyArgs} args - Arguments to create many PostOfSales.
   * @example
   * // Create many PostOfSales
   * const postOfSale = await prisma.postOfSale.createMany({
   *   data: [
   *     // ... provide data here
   *   ]
   * })
   *     
   */
  createMany<T extends PostOfSaleCreateManyArgs>(args?: Prisma.SelectSubset<T, PostOfSaleCreateManyArgs<ExtArgs>>): Prisma.PrismaPromise<Prisma.BatchPayload>

  /**
   * Create many PostOfSales and returns the data saved in the database.
   * @param {PostOfSaleCreateManyAndReturnArgs} args - Arguments to create many PostOfSales.
   * @example
   * // Create many PostOfSales
   * const postOfSale = await prisma.postOfSale.createManyAndReturn({
   *   data: [
   *     // ... provide data here
   *   ]
   * })
   * 
   * // Create many PostOfSales and only return the `id`
   * const postOfSaleWithIdOnly = await prisma.postOfSale.createManyAndReturn({
   *   select: { id: true },
   *   data: [
   *     // ... provide data here
   *   ]
   * })
   * Note, that providing `undefined` is treated as the value not being there.
   * Read more here: https://pris.ly/d/null-undefined
   * 
   */
  createManyAndReturn<T extends PostOfSaleCreateManyAndReturnArgs>(args?: Prisma.SelectSubset<T, PostOfSaleCreateManyAndReturnArgs<ExtArgs>>): Prisma.PrismaPromise<runtime.Types.Result.GetResult<Prisma.$PostOfSalePayload<ExtArgs>, T, "createManyAndReturn", GlobalOmitOptions>>

  /**
   * Delete a PostOfSale.
   * @param {PostOfSaleDeleteArgs} args - Arguments to delete one PostOfSale.
   * @example
   * // Delete one PostOfSale
   * const PostOfSale = await prisma.postOfSale.delete({
   *   where: {
   *     // ... filter to delete one PostOfSale
   *   }
   * })
   * 
   */
  delete<T extends PostOfSaleDeleteArgs>(args: Prisma.SelectSubset<T, PostOfSaleDeleteArgs<ExtArgs>>): Prisma.Prisma__PostOfSaleClient<runtime.Types.Result.GetResult<Prisma.$PostOfSalePayload<ExtArgs>, T, "delete", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

  /**
   * Update one PostOfSale.
   * @param {PostOfSaleUpdateArgs} args - Arguments to update one PostOfSale.
   * @example
   * // Update one PostOfSale
   * const postOfSale = await prisma.postOfSale.update({
   *   where: {
   *     // ... provide filter here
   *   },
   *   data: {
   *     // ... provide data here
   *   }
   * })
   * 
   */
  update<T extends PostOfSaleUpdateArgs>(args: Prisma.SelectSubset<T, PostOfSaleUpdateArgs<ExtArgs>>): Prisma.Prisma__PostOfSaleClient<runtime.Types.Result.GetResult<Prisma.$PostOfSalePayload<ExtArgs>, T, "update", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

  /**
   * Delete zero or more PostOfSales.
   * @param {PostOfSaleDeleteManyArgs} args - Arguments to filter PostOfSales to delete.
   * @example
   * // Delete a few PostOfSales
   * const { count } = await prisma.postOfSale.deleteMany({
   *   where: {
   *     // ... provide filter here
   *   }
   * })
   * 
   */
  deleteMany<T extends PostOfSaleDeleteManyArgs>(args?: Prisma.SelectSubset<T, PostOfSaleDeleteManyArgs<ExtArgs>>): Prisma.PrismaPromise<Prisma.BatchPayload>

  /**
   * Update zero or more PostOfSales.
   * Note, that providing `undefined` is treated as the value not being there.
   * Read more here: https://pris.ly/d/null-undefined
   * @param {PostOfSaleUpdateManyArgs} args - Arguments to update one or more rows.
   * @example
   * // Update many PostOfSales
   * const postOfSale = await prisma.postOfSale.updateMany({
   *   where: {
   *     // ... provide filter here
   *   },
   *   data: {
   *     // ... provide data here
   *   }
   * })
   * 
   */
  updateMany<T extends PostOfSaleUpdateManyArgs>(args: Prisma.SelectSubset<T, PostOfSaleUpdateManyArgs<ExtArgs>>): Prisma.PrismaPromise<Prisma.BatchPayload>

  /**
   * Update zero or more PostOfSales and returns the data updated in the database.
   * @param {PostOfSaleUpdateManyAndReturnArgs} args - Arguments to update many PostOfSales.
   * @example
   * // Update many PostOfSales
   * const postOfSale = await prisma.postOfSale.updateManyAndReturn({
   *   where: {
   *     // ... provide filter here
   *   },
   *   data: [
   *     // ... provide data here
   *   ]
   * })
   * 
   * // Update zero or more PostOfSales and only return the `id`
   * const postOfSaleWithIdOnly = await prisma.postOfSale.updateManyAndReturn({
   *   select: { id: true },
   *   where: {
   *     // ... provide filter here
   *   },
   *   data: [
   *     // ... provide data here
   *   ]
   * })
   * Note, that providing `undefined` is treated as the value not being there.
   * Read more here: https://pris.ly/d/null-undefined
   * 
   */
  updateManyAndReturn<T extends PostOfSaleUpdateManyAndReturnArgs>(args: Prisma.SelectSubset<T, PostOfSaleUpdateManyAndReturnArgs<ExtArgs>>): Prisma.PrismaPromise<runtime.Types.Result.GetResult<Prisma.$PostOfSalePayload<ExtArgs>, T, "updateManyAndReturn", GlobalOmitOptions>>

  /**
   * Create or update one PostOfSale.
   * @param {PostOfSaleUpsertArgs} args - Arguments to update or create a PostOfSale.
   * @example
   * // Update or create a PostOfSale
   * const postOfSale = await prisma.postOfSale.upsert({
   *   create: {
   *     // ... data to create a PostOfSale
   *   },
   *   update: {
   *     // ... in case it already exists, update
   *   },
   *   where: {
   *     // ... the filter for the PostOfSale we want to update
   *   }
   * })
   */
  upsert<T extends PostOfSaleUpsertArgs>(args: Prisma.SelectSubset<T, PostOfSaleUpsertArgs<ExtArgs>>): Prisma.Prisma__PostOfSaleClient<runtime.Types.Result.GetResult<Prisma.$PostOfSalePayload<ExtArgs>, T, "upsert", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>


  /**
   * Count the number of PostOfSales.
   * Note, that providing `undefined` is treated as the value not being there.
   * Read more here: https://pris.ly/d/null-undefined
   * @param {PostOfSaleCountArgs} args - Arguments to filter PostOfSales to count.
   * @example
   * // Count the number of PostOfSales
   * const count = await prisma.postOfSale.count({
   *   where: {
   *     // ... the filter for the PostOfSales we want to count
   *   }
   * })
  **/
  count<T extends PostOfSaleCountArgs>(
    args?: Prisma.Subset<T, PostOfSaleCountArgs>,
  ): Prisma.PrismaPromise<
    T extends runtime.Types.Utils.Record<'select', any>
      ? T['select'] extends true
        ? number
        : Prisma.GetScalarType<T['select'], PostOfSaleCountAggregateOutputType>
      : number
  >

  /**
   * Allows you to perform aggregations operations on a PostOfSale.
   * Note, that providing `undefined` is treated as the value not being there.
   * Read more here: https://pris.ly/d/null-undefined
   * @param {PostOfSaleAggregateArgs} args - Select which aggregations you would like to apply and on what fields.
   * @example
   * // Ordered by age ascending
   * // Where email contains prisma.io
   * // Limited to the 10 users
   * const aggregations = await prisma.user.aggregate({
   *   _avg: {
   *     age: true,
   *   },
   *   where: {
   *     email: {
   *       contains: "prisma.io",
   *     },
   *   },
   *   orderBy: {
   *     age: "asc",
   *   },
   *   take: 10,
   * })
  **/
  aggregate<T extends PostOfSaleAggregateArgs>(args: Prisma.Subset<T, PostOfSaleAggregateArgs>): Prisma.PrismaPromise<GetPostOfSaleAggregateType<T>>

  /**
   * Group by PostOfSale.
   * Note, that providing `undefined` is treated as the value not being there.
   * Read more here: https://pris.ly/d/null-undefined
   * @param {PostOfSaleGroupByArgs} args - Group by arguments.
   * @example
   * // Group by city, order by createdAt, get count
   * const result = await prisma.user.groupBy({
   *   by: ['city', 'createdAt'],
   *   orderBy: {
   *     createdAt: true
   *   },
   *   _count: {
   *     _all: true
   *   },
   * })
   * 
  **/
  groupBy<
    T extends PostOfSaleGroupByArgs,
    HasSelectOrTake extends Prisma.Or<
      Prisma.Extends<'skip', Prisma.Keys<T>>,
      Prisma.Extends<'take', Prisma.Keys<T>>
    >,
    OrderByArg extends Prisma.True extends HasSelectOrTake
      ? { orderBy: PostOfSaleGroupByArgs['orderBy'] }
      : { orderBy?: PostOfSaleGroupByArgs['orderBy'] },
    OrderFields extends Prisma.ExcludeUnderscoreKeys<Prisma.Keys<Prisma.MaybeTupleToUnion<T['orderBy']>>>,
    ByFields extends Prisma.MaybeTupleToUnion<T['by']>,
    ByValid extends Prisma.Has<ByFields, OrderFields>,
    HavingFields extends Prisma.GetHavingFields<T['having']>,
    HavingValid extends Prisma.Has<ByFields, HavingFields>,
    ByEmpty extends T['by'] extends never[] ? Prisma.True : Prisma.False,
    InputErrors extends ByEmpty extends Prisma.True
    ? `Error: "by" must not be empty.`
    : HavingValid extends Prisma.False
    ? {
        [P in HavingFields]: P extends ByFields
          ? never
          : P extends string
          ? `Error: Field "${P}" used in "having" needs to be provided in "by".`
          : [
              Error,
              'Field ',
              P,
              ` in "having" needs to be provided in "by"`,
            ]
      }[HavingFields]
    : 'take' extends Prisma.Keys<T>
    ? 'orderBy' extends Prisma.Keys<T>
      ? ByValid extends Prisma.True
        ? {}
        : {
            [P in OrderFields]: P extends ByFields
              ? never
              : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
          }[OrderFields]
      : 'Error: If you provide "take", you also need to provide "orderBy"'
    : 'skip' extends Prisma.Keys<T>
    ? 'orderBy' extends Prisma.Keys<T>
      ? ByValid extends Prisma.True
        ? {}
        : {
            [P in OrderFields]: P extends ByFields
              ? never
              : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
          }[OrderFields]
      : 'Error: If you provide "skip", you also need to provide "orderBy"'
    : ByValid extends Prisma.True
    ? {}
    : {
        [P in OrderFields]: P extends ByFields
          ? never
          : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
      }[OrderFields]
  >(args: Prisma.SubsetIntersection<T, PostOfSaleGroupByArgs, OrderByArg> & InputErrors): {} extends InputErrors ? GetPostOfSaleGroupByPayload<T> : Prisma.PrismaPromise<InputErrors>
/**
 * Fields of the PostOfSale model
 */
readonly fields: PostOfSaleFieldRefs;
}

/**
 * The delegate class that acts as a "Promise-like" for PostOfSale.
 * Why is this prefixed with `Prisma__`?
 * Because we want to prevent naming conflicts as mentioned in
 * https://github.com/prisma/prisma-client-js/issues/707
 */
export interface Prisma__PostOfSaleClient<T, Null = never, ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs, GlobalOmitOptions = {}> extends Prisma.PrismaPromise<T> {
  readonly [Symbol.toStringTag]: "PrismaPromise"
  business<T extends Prisma.BusinessDefaultArgs<ExtArgs> = {}>(args?: Prisma.Subset<T, Prisma.BusinessDefaultArgs<ExtArgs>>): Prisma.Prisma__BusinessClient<runtime.Types.Result.GetResult<Prisma.$BusinessPayload<ExtArgs>, T, "findUniqueOrThrow", GlobalOmitOptions> | Null, Null, ExtArgs, GlobalOmitOptions>
  media<T extends Prisma.PostOfSale$mediaArgs<ExtArgs> = {}>(args?: Prisma.Subset<T, Prisma.PostOfSale$mediaArgs<ExtArgs>>): Prisma.PrismaPromise<runtime.Types.Result.GetResult<Prisma.$MediaPayload<ExtArgs>, T, "findMany", GlobalOmitOptions> | Null>
  transactions<T extends Prisma.PostOfSale$transactionsArgs<ExtArgs> = {}>(args?: Prisma.Subset<T, Prisma.PostOfSale$transactionsArgs<ExtArgs>>): Prisma.PrismaPromise<runtime.Types.Result.GetResult<Prisma.$PostTransactionPayload<ExtArgs>, T, "findMany", GlobalOmitOptions> | Null>
  /**
   * Attaches callbacks for the resolution and/or rejection of the Promise.
   * @param onfulfilled The callback to execute when the Promise is resolved.
   * @param onrejected The callback to execute when the Promise is rejected.
   * @returns A Promise for the completion of which ever callback is executed.
   */
  then<TResult1 = T, TResult2 = never>(onfulfilled?: ((value: T) => TResult1 | PromiseLike<TResult1>) | undefined | null, onrejected?: ((reason: any) => TResult2 | PromiseLike<TResult2>) | undefined | null): runtime.Types.Utils.JsPromise<TResult1 | TResult2>
  /**
   * Attaches a callback for only the rejection of the Promise.
   * @param onrejected The callback to execute when the Promise is rejected.
   * @returns A Promise for the completion of the callback.
   */
  catch<TResult = never>(onrejected?: ((reason: any) => TResult | PromiseLike<TResult>) | undefined | null): runtime.Types.Utils.JsPromise<T | TResult>
  /**
   * Attaches a callback that is invoked when the Promise is settled (fulfilled or rejected). The
   * resolved value cannot be modified from the callback.
   * @param onfinally The callback to execute when the Promise is settled (fulfilled or rejected).
   * @returns A Promise for the completion of the callback.
   */
  finally(onfinally?: (() => void) | undefined | null): runtime.Types.Utils.JsPromise<T>
}




/**
 * Fields of the PostOfSale model
 */
export interface PostOfSaleFieldRefs {
  readonly id: Prisma.FieldRef<"PostOfSale", 'String'>
  readonly title: Prisma.FieldRef<"PostOfSale", 'String'>
  readonly description: Prisma.FieldRef<"PostOfSale", 'String'>
  readonly price: Prisma.FieldRef<"PostOfSale", 'Float'>
  readonly status: Prisma.FieldRef<"PostOfSale", 'PostStatus'>
  readonly businessId: Prisma.FieldRef<"PostOfSale", 'String'>
  readonly createdAt: Prisma.FieldRef<"PostOfSale", 'DateTime'>
  readonly updatedAt: Prisma.FieldRef<"PostOfSale", 'DateTime'>
}
    

// Custom InputTypes
/**
 * PostOfSale findUnique
 */
export type PostOfSaleFindUniqueArgs<ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs> = {
  /**
   * Select specific fields to fetch from the PostOfSale
   */
  select?: Prisma.PostOfSaleSelect<ExtArgs> | null
  /**
   * Omit specific fields from the PostOfSale
   */
  omit?: Prisma.PostOfSaleOmit<ExtArgs> | null
  /**
   * Choose, which related nodes to fetch as well
   */
  include?: Prisma.PostOfSaleInclude<ExtArgs> | null
  /**
   * Filter, which PostOfSale to fetch.
   */
  where: Prisma.PostOfSaleWhereUniqueInput
}

/**
 * PostOfSale findUniqueOrThrow
 */
export type PostOfSaleFindUniqueOrThrowArgs<ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs> = {
  /**
   * Select specific fields to fetch from the PostOfSale
   */
  select?: Prisma.PostOfSaleSelect<ExtArgs> | null
  /**
   * Omit specific fields from the PostOfSale
   */
  omit?: Prisma.PostOfSaleOmit<ExtArgs> | null
  /**
   * Choose, which related nodes to fetch as well
   */
  include?: Prisma.PostOfSaleInclude<ExtArgs> | null
  /**
   * Filter, which PostOfSale to fetch.
   */
  where: Prisma.PostOfSaleWhereUniqueInput
}

/**
 * PostOfSale findFirst
 */
export type PostOfSaleFindFirstArgs<ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs> = {
  /**
   * Select specific fields to fetch from the PostOfSale
   */
  select?: Prisma.PostOfSaleSelect<ExtArgs> | null
  /**
   * Omit specific fields from the PostOfSale
   */
  omit?: Prisma.PostOfSaleOmit<ExtArgs> | null
  /**
   * Choose, which related nodes to fetch as well
   */
  include?: Prisma.PostOfSaleInclude<ExtArgs> | null
  /**
   * Filter, which PostOfSale to fetch.
   */
  where?: Prisma.PostOfSaleWhereInput
  /**
   * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
   * 
   * Determine the order of PostOfSales to fetch.
   */
  orderBy?: Prisma.PostOfSaleOrderByWithRelationInput | Prisma.PostOfSaleOrderByWithRelationInput[]
  /**
   * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
   * 
   * Sets the position for searching for PostOfSales.
   */
  cursor?: Prisma.PostOfSaleWhereUniqueInput
  /**
   * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
   * 
   * Take `Â±n` PostOfSales from the position of the cursor.
   */
  take?: number
  /**
   * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
   * 
   * Skip the first `n` PostOfSales.
   */
  skip?: number
  /**
   * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
   * 
   * Filter by unique combinations of PostOfSales.
   */
  distinct?: Prisma.PostOfSaleScalarFieldEnum | Prisma.PostOfSaleScalarFieldEnum[]
}

/**
 * PostOfSale findFirstOrThrow
 */
export type PostOfSaleFindFirstOrThrowArgs<ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs> = {
  /**
   * Select specific fields to fetch from the PostOfSale
   */
  select?: Prisma.PostOfSaleSelect<ExtArgs> | null
  /**
   * Omit specific fields from the PostOfSale
   */
  omit?: Prisma.PostOfSaleOmit<ExtArgs> | null
  /**
   * Choose, which related nodes to fetch as well
   */
  include?: Prisma.PostOfSaleInclude<ExtArgs> | null
  /**
   * Filter, which PostOfSale to fetch.
   */
  where?: Prisma.PostOfSaleWhereInput
  /**
   * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
   * 
   * Determine the order of PostOfSales to fetch.
   */
  orderBy?: Prisma.PostOfSaleOrderByWithRelationInput | Prisma.PostOfSaleOrderByWithRelationInput[]
  /**
   * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
   * 
   * Sets the position for searching for PostOfSales.
   */
  cursor?: Prisma.PostOfSaleWhereUniqueInput
  /**
   * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
   * 
   * Take `Â±n` PostOfSales from the position of the cursor.
   */
  take?: number
  /**
   * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
   * 
   * Skip the first `n` PostOfSales.
   */
  skip?: number
  /**
   * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
   * 
   * Filter by unique combinations of PostOfSales.
   */
  distinct?: Prisma.PostOfSaleScalarFieldEnum | Prisma.PostOfSaleScalarFieldEnum[]
}

/**
 * PostOfSale findMany
 */
export type PostOfSaleFindManyArgs<ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs> = {
  /**
   * Select specific fields to fetch from the PostOfSale
   */
  select?: Prisma.PostOfSaleSelect<ExtArgs> | null
  /**
   * Omit specific fields from the PostOfSale
   */
  omit?: Prisma.PostOfSaleOmit<ExtArgs> | null
  /**
   * Choose, which related nodes to fetch as well
   */
  include?: Prisma.PostOfSaleInclude<ExtArgs> | null
  /**
   * Filter, which PostOfSales to fetch.
   */
  where?: Prisma.PostOfSaleWhereInput
  /**
   * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
   * 
   * Determine the order of PostOfSales to fetch.
   */
  orderBy?: Prisma.PostOfSaleOrderByWithRelationInput | Prisma.PostOfSaleOrderByWithRelationInput[]
  /**
   * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
   * 
   * Sets the position for listing PostOfSales.
   */
  cursor?: Prisma.PostOfSaleWhereUniqueInput
  /**
   * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
   * 
   * Take `Â±n` PostOfSales from the position of the cursor.
   */
  take?: number
  /**
   * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
   * 
   * Skip the first `n` PostOfSales.
   */
  skip?: number
  distinct?: Prisma.PostOfSaleScalarFieldEnum | Prisma.PostOfSaleScalarFieldEnum[]
}

/**
 * PostOfSale create
 */
export type PostOfSaleCreateArgs<ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs> = {
  /**
   * Select specific fields to fetch from the PostOfSale
   */
  select?: Prisma.PostOfSaleSelect<ExtArgs> | null
  /**
   * Omit specific fields from the PostOfSale
   */
  omit?: Prisma.PostOfSaleOmit<ExtArgs> | null
  /**
   * Choose, which related nodes to fetch as well
   */
  include?: Prisma.PostOfSaleInclude<ExtArgs> | null
  /**
   * The data needed to create a PostOfSale.
   */
  data: Prisma.XOR<Prisma.PostOfSaleCreateInput, Prisma.PostOfSaleUncheckedCreateInput>
}

/**
 * PostOfSale createMany
 */
export type PostOfSaleCreateManyArgs<ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs> = {
  /**
   * The data used to create many PostOfSales.
   */
  data: Prisma.PostOfSaleCreateManyInput | Prisma.PostOfSaleCreateManyInput[]
  skipDuplicates?: boolean
}

/**
 * PostOfSale createManyAndReturn
 */
export type PostOfSaleCreateManyAndReturnArgs<ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs> = {
  /**
   * Select specific fields to fetch from the PostOfSale
   */
  select?: Prisma.PostOfSaleSelectCreateManyAndReturn<ExtArgs> | null
  /**
   * Omit specific fields from the PostOfSale
   */
  omit?: Prisma.PostOfSaleOmit<ExtArgs> | null
  /**
   * The data used to create many PostOfSales.
   */
  data: Prisma.PostOfSaleCreateManyInput | Prisma.PostOfSaleCreateManyInput[]
  skipDuplicates?: boolean
  /**
   * Choose, which related nodes to fetch as well
   */
  include?: Prisma.PostOfSaleIncludeCreateManyAndReturn<ExtArgs> | null
}

/**
 * PostOfSale update
 */
export type PostOfSaleUpdateArgs<ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs> = {
  /**
   * Select specific fields to fetch from the PostOfSale
   */
  select?: Prisma.PostOfSaleSelect<ExtArgs> | null
  /**
   * Omit specific fields from the PostOfSale
   */
  omit?: Prisma.PostOfSaleOmit<ExtArgs> | null
  /**
   * Choose, which related nodes to fetch as well
   */
  include?: Prisma.PostOfSaleInclude<ExtArgs> | null
  /**
   * The data needed to update a PostOfSale.
   */
  data: Prisma.XOR<Prisma.PostOfSaleUpdateInput, Prisma.PostOfSaleUncheckedUpdateInput>
  /**
   * Choose, which PostOfSale to update.
   */
  where: Prisma.PostOfSaleWhereUniqueInput
}

/**
 * PostOfSale updateMany
 */
export type PostOfSaleUpdateManyArgs<ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs> = {
  /**
   * The data used to update PostOfSales.
   */
  data: Prisma.XOR<Prisma.PostOfSaleUpdateManyMutationInput, Prisma.PostOfSaleUncheckedUpdateManyInput>
  /**
   * Filter which PostOfSales to update
   */
  where?: Prisma.PostOfSaleWhereInput
  /**
   * Limit how many PostOfSales to update.
   */
  limit?: number
}

/**
 * PostOfSale updateManyAndReturn
 */
export type PostOfSaleUpdateManyAndReturnArgs<ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs> = {
  /**
   * Select specific fields to fetch from the PostOfSale
   */
  select?: Prisma.PostOfSaleSelectUpdateManyAndReturn<ExtArgs> | null
  /**
   * Omit specific fields from the PostOfSale
   */
  omit?: Prisma.PostOfSaleOmit<ExtArgs> | null
  /**
   * The data used to update PostOfSales.
   */
  data: Prisma.XOR<Prisma.PostOfSaleUpdateManyMutationInput, Prisma.PostOfSaleUncheckedUpdateManyInput>
  /**
   * Filter which PostOfSales to update
   */
  where?: Prisma.PostOfSaleWhereInput
  /**
   * Limit how many PostOfSales to update.
   */
  limit?: number
  /**
   * Choose, which related nodes to fetch as well
   */
  include?: Prisma.PostOfSaleIncludeUpdateManyAndReturn<ExtArgs> | null
}

/**
 * PostOfSale upsert
 */
export type PostOfSaleUpsertArgs<ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs> = {
  /**
   * Select specific fields to fetch from the PostOfSale
   */
  select?: Prisma.PostOfSaleSelect<ExtArgs> | null
  /**
   * Omit specific fields from the PostOfSale
   */
  omit?: Prisma.PostOfSaleOmit<ExtArgs> | null
  /**
   * Choose, which related nodes to fetch as well
   */
  include?: Prisma.PostOfSaleInclude<ExtArgs> | null
  /**
   * The filter to search for the PostOfSale to update in case it exists.
   */
  where: Prisma.PostOfSaleWhereUniqueInput
  /**
   * In case the PostOfSale found by the `where` argument doesn't exist, create a new PostOfSale with this data.
   */
  create: Prisma.XOR<Prisma.PostOfSaleCreateInput, Prisma.PostOfSaleUncheckedCreateInput>
  /**
   * In case the PostOfSale was found with the provided `where` argument, update it with this data.
   */
  update: Prisma.XOR<Prisma.PostOfSaleUpdateInput, Prisma.PostOfSaleUncheckedUpdateInput>
}

/**
 * PostOfSale delete
 */
export type PostOfSaleDeleteArgs<ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs> = {
  /**
   * Select specific fields to fetch from the PostOfSale
   */
  select?: Prisma.PostOfSaleSelect<ExtArgs> | null
  /**
   * Omit specific fields from the PostOfSale
   */
  omit?: Prisma.PostOfSaleOmit<ExtArgs> | null
  /**
   * Choose, which related nodes to fetch as well
   */
  include?: Prisma.PostOfSaleInclude<ExtArgs> | null
  /**
   * Filter which PostOfSale to delete.
   */
  where: Prisma.PostOfSaleWhereUniqueInput
}

/**
 * PostOfSale deleteMany
 */
export type PostOfSaleDeleteManyArgs<ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs> = {
  /**
   * Filter which PostOfSales to delete
   */
  where?: Prisma.PostOfSaleWhereInput
  /**
   * Limit how many PostOfSales to delete.
   */
  limit?: number
}

/**
 * PostOfSale.media
 */
export type PostOfSale$mediaArgs<ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs> = {
  /**
   * Select specific fields to fetch from the Media
   */
  select?: Prisma.MediaSelect<ExtArgs> | null
  /**
   * Omit specific fields from the Media
   */
  omit?: Prisma.MediaOmit<ExtArgs> | null
  /**
   * Choose, which related nodes to fetch as well
   */
  include?: Prisma.MediaInclude<ExtArgs> | null
  where?: Prisma.MediaWhereInput
  orderBy?: Prisma.MediaOrderByWithRelationInput | Prisma.MediaOrderByWithRelationInput[]
  cursor?: Prisma.MediaWhereUniqueInput
  take?: number
  skip?: number
  distinct?: Prisma.MediaScalarFieldEnum | Prisma.MediaScalarFieldEnum[]
}

/**
 * PostOfSale.transactions
 */
export type PostOfSale$transactionsArgs<ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs> = {
  /**
   * Select specific fields to fetch from the PostTransaction
   */
  select?: Prisma.PostTransactionSelect<ExtArgs> | null
  /**
   * Omit specific fields from the PostTransaction
   */
  omit?: Prisma.PostTransactionOmit<ExtArgs> | null
  /**
   * Choose, which related nodes to fetch as well
   */
  include?: Prisma.PostTransactionInclude<ExtArgs> | null
  where?: Prisma.PostTransactionWhereInput
  orderBy?: Prisma.PostTransactionOrderByWithRelationInput | Prisma.PostTransactionOrderByWithRelationInput[]
  cursor?: Prisma.PostTransactionWhereUniqueInput
  take?: number
  skip?: number
  distinct?: Prisma.PostTransactionScalarFieldEnum | Prisma.PostTransactionScalarFieldEnum[]
}

/**
 * PostOfSale without action
 */
export type PostOfSaleDefaultArgs<ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs> = {
  /**
   * Select specific fields to fetch from the PostOfSale
   */
  select?: Prisma.PostOfSaleSelect<ExtArgs> | null
  /**
   * Omit specific fields from the PostOfSale
   */
  omit?: Prisma.PostOfSaleOmit<ExtArgs> | null
  /**
   * Choose, which related nodes to fetch as well
   */
  include?: Prisma.PostOfSaleInclude<ExtArgs> | null
}
