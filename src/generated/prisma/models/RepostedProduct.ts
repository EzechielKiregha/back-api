
/* !!! This is code generated by Prisma. Do not edit directly. !!! */
/* eslint-disable */
// @ts-nocheck 
/**
 * This file exports the `RepostedProduct` model and its related types.
 *
 * ðŸŸ¢ You can import this file directly.
 */
import * as runtime from "@prisma/client/runtime/library"
import type * as $Enums from "../enums"
import type * as Prisma from "../internal/prismaNamespace"

/**
 * Model RepostedProduct
 * 
 */
export type RepostedProductModel = runtime.Types.Result.DefaultSelection<Prisma.$RepostedProductPayload>

export type AggregateRepostedProduct = {
  _count: RepostedProductCountAggregateOutputType | null
  _avg: RepostedProductAvgAggregateOutputType | null
  _sum: RepostedProductSumAggregateOutputType | null
  _min: RepostedProductMinAggregateOutputType | null
  _max: RepostedProductMaxAggregateOutputType | null
}

export type RepostedProductAvgAggregateOutputType = {
  earnPercentage: number | null
}

export type RepostedProductSumAggregateOutputType = {
  earnPercentage: number | null
}

export type RepostedProductMinAggregateOutputType = {
  id: string | null
  businessId: string | null
  productId: string | null
  earnPercentage: number | null
  createdAt: Date | null
}

export type RepostedProductMaxAggregateOutputType = {
  id: string | null
  businessId: string | null
  productId: string | null
  earnPercentage: number | null
  createdAt: Date | null
}

export type RepostedProductCountAggregateOutputType = {
  id: number
  businessId: number
  productId: number
  earnPercentage: number
  createdAt: number
  _all: number
}


export type RepostedProductAvgAggregateInputType = {
  earnPercentage?: true
}

export type RepostedProductSumAggregateInputType = {
  earnPercentage?: true
}

export type RepostedProductMinAggregateInputType = {
  id?: true
  businessId?: true
  productId?: true
  earnPercentage?: true
  createdAt?: true
}

export type RepostedProductMaxAggregateInputType = {
  id?: true
  businessId?: true
  productId?: true
  earnPercentage?: true
  createdAt?: true
}

export type RepostedProductCountAggregateInputType = {
  id?: true
  businessId?: true
  productId?: true
  earnPercentage?: true
  createdAt?: true
  _all?: true
}

export type RepostedProductAggregateArgs<ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs> = {
  /**
   * Filter which RepostedProduct to aggregate.
   */
  where?: Prisma.RepostedProductWhereInput
  /**
   * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
   * 
   * Determine the order of RepostedProducts to fetch.
   */
  orderBy?: Prisma.RepostedProductOrderByWithRelationInput | Prisma.RepostedProductOrderByWithRelationInput[]
  /**
   * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
   * 
   * Sets the start position
   */
  cursor?: Prisma.RepostedProductWhereUniqueInput
  /**
   * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
   * 
   * Take `Â±n` RepostedProducts from the position of the cursor.
   */
  take?: number
  /**
   * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
   * 
   * Skip the first `n` RepostedProducts.
   */
  skip?: number
  /**
   * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
   * 
   * Count returned RepostedProducts
  **/
  _count?: true | RepostedProductCountAggregateInputType
  /**
   * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
   * 
   * Select which fields to average
  **/
  _avg?: RepostedProductAvgAggregateInputType
  /**
   * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
   * 
   * Select which fields to sum
  **/
  _sum?: RepostedProductSumAggregateInputType
  /**
   * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
   * 
   * Select which fields to find the minimum value
  **/
  _min?: RepostedProductMinAggregateInputType
  /**
   * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
   * 
   * Select which fields to find the maximum value
  **/
  _max?: RepostedProductMaxAggregateInputType
}

export type GetRepostedProductAggregateType<T extends RepostedProductAggregateArgs> = {
      [P in keyof T & keyof AggregateRepostedProduct]: P extends '_count' | 'count'
    ? T[P] extends true
      ? number
      : Prisma.GetScalarType<T[P], AggregateRepostedProduct[P]>
    : Prisma.GetScalarType<T[P], AggregateRepostedProduct[P]>
}




export type RepostedProductGroupByArgs<ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs> = {
  where?: Prisma.RepostedProductWhereInput
  orderBy?: Prisma.RepostedProductOrderByWithAggregationInput | Prisma.RepostedProductOrderByWithAggregationInput[]
  by: Prisma.RepostedProductScalarFieldEnum[] | Prisma.RepostedProductScalarFieldEnum
  having?: Prisma.RepostedProductScalarWhereWithAggregatesInput
  take?: number
  skip?: number
  _count?: RepostedProductCountAggregateInputType | true
  _avg?: RepostedProductAvgAggregateInputType
  _sum?: RepostedProductSumAggregateInputType
  _min?: RepostedProductMinAggregateInputType
  _max?: RepostedProductMaxAggregateInputType
}

export type RepostedProductGroupByOutputType = {
  id: string
  businessId: string
  productId: string
  earnPercentage: number
  createdAt: Date
  _count: RepostedProductCountAggregateOutputType | null
  _avg: RepostedProductAvgAggregateOutputType | null
  _sum: RepostedProductSumAggregateOutputType | null
  _min: RepostedProductMinAggregateOutputType | null
  _max: RepostedProductMaxAggregateOutputType | null
}

type GetRepostedProductGroupByPayload<T extends RepostedProductGroupByArgs> = Prisma.PrismaPromise<
  Array<
    Prisma.PickEnumerable<RepostedProductGroupByOutputType, T['by']> &
      {
        [P in ((keyof T) & (keyof RepostedProductGroupByOutputType))]: P extends '_count'
          ? T[P] extends boolean
            ? number
            : Prisma.GetScalarType<T[P], RepostedProductGroupByOutputType[P]>
          : Prisma.GetScalarType<T[P], RepostedProductGroupByOutputType[P]>
      }
    >
  > 



export type RepostedProductWhereInput = {
  AND?: Prisma.RepostedProductWhereInput | Prisma.RepostedProductWhereInput[]
  OR?: Prisma.RepostedProductWhereInput[]
  NOT?: Prisma.RepostedProductWhereInput | Prisma.RepostedProductWhereInput[]
  id?: Prisma.StringFilter<"RepostedProduct"> | string
  businessId?: Prisma.StringFilter<"RepostedProduct"> | string
  productId?: Prisma.StringFilter<"RepostedProduct"> | string
  earnPercentage?: Prisma.FloatFilter<"RepostedProduct"> | number
  createdAt?: Prisma.DateTimeFilter<"RepostedProduct"> | Date | string
  business?: Prisma.XOR<Prisma.BusinessScalarRelationFilter, Prisma.BusinessWhereInput>
  product?: Prisma.XOR<Prisma.ProductScalarRelationFilter, Prisma.ProductWhereInput>
}

export type RepostedProductOrderByWithRelationInput = {
  id?: Prisma.SortOrder
  businessId?: Prisma.SortOrder
  productId?: Prisma.SortOrder
  earnPercentage?: Prisma.SortOrder
  createdAt?: Prisma.SortOrder
  business?: Prisma.BusinessOrderByWithRelationInput
  product?: Prisma.ProductOrderByWithRelationInput
}

export type RepostedProductWhereUniqueInput = Prisma.AtLeast<{
  id?: string
  AND?: Prisma.RepostedProductWhereInput | Prisma.RepostedProductWhereInput[]
  OR?: Prisma.RepostedProductWhereInput[]
  NOT?: Prisma.RepostedProductWhereInput | Prisma.RepostedProductWhereInput[]
  businessId?: Prisma.StringFilter<"RepostedProduct"> | string
  productId?: Prisma.StringFilter<"RepostedProduct"> | string
  earnPercentage?: Prisma.FloatFilter<"RepostedProduct"> | number
  createdAt?: Prisma.DateTimeFilter<"RepostedProduct"> | Date | string
  business?: Prisma.XOR<Prisma.BusinessScalarRelationFilter, Prisma.BusinessWhereInput>
  product?: Prisma.XOR<Prisma.ProductScalarRelationFilter, Prisma.ProductWhereInput>
}, "id">

export type RepostedProductOrderByWithAggregationInput = {
  id?: Prisma.SortOrder
  businessId?: Prisma.SortOrder
  productId?: Prisma.SortOrder
  earnPercentage?: Prisma.SortOrder
  createdAt?: Prisma.SortOrder
  _count?: Prisma.RepostedProductCountOrderByAggregateInput
  _avg?: Prisma.RepostedProductAvgOrderByAggregateInput
  _max?: Prisma.RepostedProductMaxOrderByAggregateInput
  _min?: Prisma.RepostedProductMinOrderByAggregateInput
  _sum?: Prisma.RepostedProductSumOrderByAggregateInput
}

export type RepostedProductScalarWhereWithAggregatesInput = {
  AND?: Prisma.RepostedProductScalarWhereWithAggregatesInput | Prisma.RepostedProductScalarWhereWithAggregatesInput[]
  OR?: Prisma.RepostedProductScalarWhereWithAggregatesInput[]
  NOT?: Prisma.RepostedProductScalarWhereWithAggregatesInput | Prisma.RepostedProductScalarWhereWithAggregatesInput[]
  id?: Prisma.StringWithAggregatesFilter<"RepostedProduct"> | string
  businessId?: Prisma.StringWithAggregatesFilter<"RepostedProduct"> | string
  productId?: Prisma.StringWithAggregatesFilter<"RepostedProduct"> | string
  earnPercentage?: Prisma.FloatWithAggregatesFilter<"RepostedProduct"> | number
  createdAt?: Prisma.DateTimeWithAggregatesFilter<"RepostedProduct"> | Date | string
}

export type RepostedProductCreateInput = {
  id?: string
  earnPercentage?: number
  createdAt?: Date | string
  business: Prisma.BusinessCreateNestedOneWithoutRepostedItemsInput
  product: Prisma.ProductCreateNestedOneWithoutRepostsInput
}

export type RepostedProductUncheckedCreateInput = {
  id?: string
  businessId: string
  productId: string
  earnPercentage?: number
  createdAt?: Date | string
}

export type RepostedProductUpdateInput = {
  id?: Prisma.StringFieldUpdateOperationsInput | string
  earnPercentage?: Prisma.FloatFieldUpdateOperationsInput | number
  createdAt?: Prisma.DateTimeFieldUpdateOperationsInput | Date | string
  business?: Prisma.BusinessUpdateOneRequiredWithoutRepostedItemsNestedInput
  product?: Prisma.ProductUpdateOneRequiredWithoutRepostsNestedInput
}

export type RepostedProductUncheckedUpdateInput = {
  id?: Prisma.StringFieldUpdateOperationsInput | string
  businessId?: Prisma.StringFieldUpdateOperationsInput | string
  productId?: Prisma.StringFieldUpdateOperationsInput | string
  earnPercentage?: Prisma.FloatFieldUpdateOperationsInput | number
  createdAt?: Prisma.DateTimeFieldUpdateOperationsInput | Date | string
}

export type RepostedProductCreateManyInput = {
  id?: string
  businessId: string
  productId: string
  earnPercentage?: number
  createdAt?: Date | string
}

export type RepostedProductUpdateManyMutationInput = {
  id?: Prisma.StringFieldUpdateOperationsInput | string
  earnPercentage?: Prisma.FloatFieldUpdateOperationsInput | number
  createdAt?: Prisma.DateTimeFieldUpdateOperationsInput | Date | string
}

export type RepostedProductUncheckedUpdateManyInput = {
  id?: Prisma.StringFieldUpdateOperationsInput | string
  businessId?: Prisma.StringFieldUpdateOperationsInput | string
  productId?: Prisma.StringFieldUpdateOperationsInput | string
  earnPercentage?: Prisma.FloatFieldUpdateOperationsInput | number
  createdAt?: Prisma.DateTimeFieldUpdateOperationsInput | Date | string
}

export type RepostedProductListRelationFilter = {
  every?: Prisma.RepostedProductWhereInput
  some?: Prisma.RepostedProductWhereInput
  none?: Prisma.RepostedProductWhereInput
}

export type RepostedProductOrderByRelationAggregateInput = {
  _count?: Prisma.SortOrder
}

export type RepostedProductCountOrderByAggregateInput = {
  id?: Prisma.SortOrder
  businessId?: Prisma.SortOrder
  productId?: Prisma.SortOrder
  earnPercentage?: Prisma.SortOrder
  createdAt?: Prisma.SortOrder
}

export type RepostedProductAvgOrderByAggregateInput = {
  earnPercentage?: Prisma.SortOrder
}

export type RepostedProductMaxOrderByAggregateInput = {
  id?: Prisma.SortOrder
  businessId?: Prisma.SortOrder
  productId?: Prisma.SortOrder
  earnPercentage?: Prisma.SortOrder
  createdAt?: Prisma.SortOrder
}

export type RepostedProductMinOrderByAggregateInput = {
  id?: Prisma.SortOrder
  businessId?: Prisma.SortOrder
  productId?: Prisma.SortOrder
  earnPercentage?: Prisma.SortOrder
  createdAt?: Prisma.SortOrder
}

export type RepostedProductSumOrderByAggregateInput = {
  earnPercentage?: Prisma.SortOrder
}

export type RepostedProductCreateNestedManyWithoutBusinessInput = {
  create?: Prisma.XOR<Prisma.RepostedProductCreateWithoutBusinessInput, Prisma.RepostedProductUncheckedCreateWithoutBusinessInput> | Prisma.RepostedProductCreateWithoutBusinessInput[] | Prisma.RepostedProductUncheckedCreateWithoutBusinessInput[]
  connectOrCreate?: Prisma.RepostedProductCreateOrConnectWithoutBusinessInput | Prisma.RepostedProductCreateOrConnectWithoutBusinessInput[]
  createMany?: Prisma.RepostedProductCreateManyBusinessInputEnvelope
  connect?: Prisma.RepostedProductWhereUniqueInput | Prisma.RepostedProductWhereUniqueInput[]
}

export type RepostedProductUncheckedCreateNestedManyWithoutBusinessInput = {
  create?: Prisma.XOR<Prisma.RepostedProductCreateWithoutBusinessInput, Prisma.RepostedProductUncheckedCreateWithoutBusinessInput> | Prisma.RepostedProductCreateWithoutBusinessInput[] | Prisma.RepostedProductUncheckedCreateWithoutBusinessInput[]
  connectOrCreate?: Prisma.RepostedProductCreateOrConnectWithoutBusinessInput | Prisma.RepostedProductCreateOrConnectWithoutBusinessInput[]
  createMany?: Prisma.RepostedProductCreateManyBusinessInputEnvelope
  connect?: Prisma.RepostedProductWhereUniqueInput | Prisma.RepostedProductWhereUniqueInput[]
}

export type RepostedProductUpdateManyWithoutBusinessNestedInput = {
  create?: Prisma.XOR<Prisma.RepostedProductCreateWithoutBusinessInput, Prisma.RepostedProductUncheckedCreateWithoutBusinessInput> | Prisma.RepostedProductCreateWithoutBusinessInput[] | Prisma.RepostedProductUncheckedCreateWithoutBusinessInput[]
  connectOrCreate?: Prisma.RepostedProductCreateOrConnectWithoutBusinessInput | Prisma.RepostedProductCreateOrConnectWithoutBusinessInput[]
  upsert?: Prisma.RepostedProductUpsertWithWhereUniqueWithoutBusinessInput | Prisma.RepostedProductUpsertWithWhereUniqueWithoutBusinessInput[]
  createMany?: Prisma.RepostedProductCreateManyBusinessInputEnvelope
  set?: Prisma.RepostedProductWhereUniqueInput | Prisma.RepostedProductWhereUniqueInput[]
  disconnect?: Prisma.RepostedProductWhereUniqueInput | Prisma.RepostedProductWhereUniqueInput[]
  delete?: Prisma.RepostedProductWhereUniqueInput | Prisma.RepostedProductWhereUniqueInput[]
  connect?: Prisma.RepostedProductWhereUniqueInput | Prisma.RepostedProductWhereUniqueInput[]
  update?: Prisma.RepostedProductUpdateWithWhereUniqueWithoutBusinessInput | Prisma.RepostedProductUpdateWithWhereUniqueWithoutBusinessInput[]
  updateMany?: Prisma.RepostedProductUpdateManyWithWhereWithoutBusinessInput | Prisma.RepostedProductUpdateManyWithWhereWithoutBusinessInput[]
  deleteMany?: Prisma.RepostedProductScalarWhereInput | Prisma.RepostedProductScalarWhereInput[]
}

export type RepostedProductUncheckedUpdateManyWithoutBusinessNestedInput = {
  create?: Prisma.XOR<Prisma.RepostedProductCreateWithoutBusinessInput, Prisma.RepostedProductUncheckedCreateWithoutBusinessInput> | Prisma.RepostedProductCreateWithoutBusinessInput[] | Prisma.RepostedProductUncheckedCreateWithoutBusinessInput[]
  connectOrCreate?: Prisma.RepostedProductCreateOrConnectWithoutBusinessInput | Prisma.RepostedProductCreateOrConnectWithoutBusinessInput[]
  upsert?: Prisma.RepostedProductUpsertWithWhereUniqueWithoutBusinessInput | Prisma.RepostedProductUpsertWithWhereUniqueWithoutBusinessInput[]
  createMany?: Prisma.RepostedProductCreateManyBusinessInputEnvelope
  set?: Prisma.RepostedProductWhereUniqueInput | Prisma.RepostedProductWhereUniqueInput[]
  disconnect?: Prisma.RepostedProductWhereUniqueInput | Prisma.RepostedProductWhereUniqueInput[]
  delete?: Prisma.RepostedProductWhereUniqueInput | Prisma.RepostedProductWhereUniqueInput[]
  connect?: Prisma.RepostedProductWhereUniqueInput | Prisma.RepostedProductWhereUniqueInput[]
  update?: Prisma.RepostedProductUpdateWithWhereUniqueWithoutBusinessInput | Prisma.RepostedProductUpdateWithWhereUniqueWithoutBusinessInput[]
  updateMany?: Prisma.RepostedProductUpdateManyWithWhereWithoutBusinessInput | Prisma.RepostedProductUpdateManyWithWhereWithoutBusinessInput[]
  deleteMany?: Prisma.RepostedProductScalarWhereInput | Prisma.RepostedProductScalarWhereInput[]
}

export type RepostedProductCreateNestedManyWithoutProductInput = {
  create?: Prisma.XOR<Prisma.RepostedProductCreateWithoutProductInput, Prisma.RepostedProductUncheckedCreateWithoutProductInput> | Prisma.RepostedProductCreateWithoutProductInput[] | Prisma.RepostedProductUncheckedCreateWithoutProductInput[]
  connectOrCreate?: Prisma.RepostedProductCreateOrConnectWithoutProductInput | Prisma.RepostedProductCreateOrConnectWithoutProductInput[]
  createMany?: Prisma.RepostedProductCreateManyProductInputEnvelope
  connect?: Prisma.RepostedProductWhereUniqueInput | Prisma.RepostedProductWhereUniqueInput[]
}

export type RepostedProductUncheckedCreateNestedManyWithoutProductInput = {
  create?: Prisma.XOR<Prisma.RepostedProductCreateWithoutProductInput, Prisma.RepostedProductUncheckedCreateWithoutProductInput> | Prisma.RepostedProductCreateWithoutProductInput[] | Prisma.RepostedProductUncheckedCreateWithoutProductInput[]
  connectOrCreate?: Prisma.RepostedProductCreateOrConnectWithoutProductInput | Prisma.RepostedProductCreateOrConnectWithoutProductInput[]
  createMany?: Prisma.RepostedProductCreateManyProductInputEnvelope
  connect?: Prisma.RepostedProductWhereUniqueInput | Prisma.RepostedProductWhereUniqueInput[]
}

export type RepostedProductUpdateManyWithoutProductNestedInput = {
  create?: Prisma.XOR<Prisma.RepostedProductCreateWithoutProductInput, Prisma.RepostedProductUncheckedCreateWithoutProductInput> | Prisma.RepostedProductCreateWithoutProductInput[] | Prisma.RepostedProductUncheckedCreateWithoutProductInput[]
  connectOrCreate?: Prisma.RepostedProductCreateOrConnectWithoutProductInput | Prisma.RepostedProductCreateOrConnectWithoutProductInput[]
  upsert?: Prisma.RepostedProductUpsertWithWhereUniqueWithoutProductInput | Prisma.RepostedProductUpsertWithWhereUniqueWithoutProductInput[]
  createMany?: Prisma.RepostedProductCreateManyProductInputEnvelope
  set?: Prisma.RepostedProductWhereUniqueInput | Prisma.RepostedProductWhereUniqueInput[]
  disconnect?: Prisma.RepostedProductWhereUniqueInput | Prisma.RepostedProductWhereUniqueInput[]
  delete?: Prisma.RepostedProductWhereUniqueInput | Prisma.RepostedProductWhereUniqueInput[]
  connect?: Prisma.RepostedProductWhereUniqueInput | Prisma.RepostedProductWhereUniqueInput[]
  update?: Prisma.RepostedProductUpdateWithWhereUniqueWithoutProductInput | Prisma.RepostedProductUpdateWithWhereUniqueWithoutProductInput[]
  updateMany?: Prisma.RepostedProductUpdateManyWithWhereWithoutProductInput | Prisma.RepostedProductUpdateManyWithWhereWithoutProductInput[]
  deleteMany?: Prisma.RepostedProductScalarWhereInput | Prisma.RepostedProductScalarWhereInput[]
}

export type RepostedProductUncheckedUpdateManyWithoutProductNestedInput = {
  create?: Prisma.XOR<Prisma.RepostedProductCreateWithoutProductInput, Prisma.RepostedProductUncheckedCreateWithoutProductInput> | Prisma.RepostedProductCreateWithoutProductInput[] | Prisma.RepostedProductUncheckedCreateWithoutProductInput[]
  connectOrCreate?: Prisma.RepostedProductCreateOrConnectWithoutProductInput | Prisma.RepostedProductCreateOrConnectWithoutProductInput[]
  upsert?: Prisma.RepostedProductUpsertWithWhereUniqueWithoutProductInput | Prisma.RepostedProductUpsertWithWhereUniqueWithoutProductInput[]
  createMany?: Prisma.RepostedProductCreateManyProductInputEnvelope
  set?: Prisma.RepostedProductWhereUniqueInput | Prisma.RepostedProductWhereUniqueInput[]
  disconnect?: Prisma.RepostedProductWhereUniqueInput | Prisma.RepostedProductWhereUniqueInput[]
  delete?: Prisma.RepostedProductWhereUniqueInput | Prisma.RepostedProductWhereUniqueInput[]
  connect?: Prisma.RepostedProductWhereUniqueInput | Prisma.RepostedProductWhereUniqueInput[]
  update?: Prisma.RepostedProductUpdateWithWhereUniqueWithoutProductInput | Prisma.RepostedProductUpdateWithWhereUniqueWithoutProductInput[]
  updateMany?: Prisma.RepostedProductUpdateManyWithWhereWithoutProductInput | Prisma.RepostedProductUpdateManyWithWhereWithoutProductInput[]
  deleteMany?: Prisma.RepostedProductScalarWhereInput | Prisma.RepostedProductScalarWhereInput[]
}

export type RepostedProductCreateWithoutBusinessInput = {
  id?: string
  earnPercentage?: number
  createdAt?: Date | string
  product: Prisma.ProductCreateNestedOneWithoutRepostsInput
}

export type RepostedProductUncheckedCreateWithoutBusinessInput = {
  id?: string
  productId: string
  earnPercentage?: number
  createdAt?: Date | string
}

export type RepostedProductCreateOrConnectWithoutBusinessInput = {
  where: Prisma.RepostedProductWhereUniqueInput
  create: Prisma.XOR<Prisma.RepostedProductCreateWithoutBusinessInput, Prisma.RepostedProductUncheckedCreateWithoutBusinessInput>
}

export type RepostedProductCreateManyBusinessInputEnvelope = {
  data: Prisma.RepostedProductCreateManyBusinessInput | Prisma.RepostedProductCreateManyBusinessInput[]
  skipDuplicates?: boolean
}

export type RepostedProductUpsertWithWhereUniqueWithoutBusinessInput = {
  where: Prisma.RepostedProductWhereUniqueInput
  update: Prisma.XOR<Prisma.RepostedProductUpdateWithoutBusinessInput, Prisma.RepostedProductUncheckedUpdateWithoutBusinessInput>
  create: Prisma.XOR<Prisma.RepostedProductCreateWithoutBusinessInput, Prisma.RepostedProductUncheckedCreateWithoutBusinessInput>
}

export type RepostedProductUpdateWithWhereUniqueWithoutBusinessInput = {
  where: Prisma.RepostedProductWhereUniqueInput
  data: Prisma.XOR<Prisma.RepostedProductUpdateWithoutBusinessInput, Prisma.RepostedProductUncheckedUpdateWithoutBusinessInput>
}

export type RepostedProductUpdateManyWithWhereWithoutBusinessInput = {
  where: Prisma.RepostedProductScalarWhereInput
  data: Prisma.XOR<Prisma.RepostedProductUpdateManyMutationInput, Prisma.RepostedProductUncheckedUpdateManyWithoutBusinessInput>
}

export type RepostedProductScalarWhereInput = {
  AND?: Prisma.RepostedProductScalarWhereInput | Prisma.RepostedProductScalarWhereInput[]
  OR?: Prisma.RepostedProductScalarWhereInput[]
  NOT?: Prisma.RepostedProductScalarWhereInput | Prisma.RepostedProductScalarWhereInput[]
  id?: Prisma.StringFilter<"RepostedProduct"> | string
  businessId?: Prisma.StringFilter<"RepostedProduct"> | string
  productId?: Prisma.StringFilter<"RepostedProduct"> | string
  earnPercentage?: Prisma.FloatFilter<"RepostedProduct"> | number
  createdAt?: Prisma.DateTimeFilter<"RepostedProduct"> | Date | string
}

export type RepostedProductCreateWithoutProductInput = {
  id?: string
  earnPercentage?: number
  createdAt?: Date | string
  business: Prisma.BusinessCreateNestedOneWithoutRepostedItemsInput
}

export type RepostedProductUncheckedCreateWithoutProductInput = {
  id?: string
  businessId: string
  earnPercentage?: number
  createdAt?: Date | string
}

export type RepostedProductCreateOrConnectWithoutProductInput = {
  where: Prisma.RepostedProductWhereUniqueInput
  create: Prisma.XOR<Prisma.RepostedProductCreateWithoutProductInput, Prisma.RepostedProductUncheckedCreateWithoutProductInput>
}

export type RepostedProductCreateManyProductInputEnvelope = {
  data: Prisma.RepostedProductCreateManyProductInput | Prisma.RepostedProductCreateManyProductInput[]
  skipDuplicates?: boolean
}

export type RepostedProductUpsertWithWhereUniqueWithoutProductInput = {
  where: Prisma.RepostedProductWhereUniqueInput
  update: Prisma.XOR<Prisma.RepostedProductUpdateWithoutProductInput, Prisma.RepostedProductUncheckedUpdateWithoutProductInput>
  create: Prisma.XOR<Prisma.RepostedProductCreateWithoutProductInput, Prisma.RepostedProductUncheckedCreateWithoutProductInput>
}

export type RepostedProductUpdateWithWhereUniqueWithoutProductInput = {
  where: Prisma.RepostedProductWhereUniqueInput
  data: Prisma.XOR<Prisma.RepostedProductUpdateWithoutProductInput, Prisma.RepostedProductUncheckedUpdateWithoutProductInput>
}

export type RepostedProductUpdateManyWithWhereWithoutProductInput = {
  where: Prisma.RepostedProductScalarWhereInput
  data: Prisma.XOR<Prisma.RepostedProductUpdateManyMutationInput, Prisma.RepostedProductUncheckedUpdateManyWithoutProductInput>
}

export type RepostedProductCreateManyBusinessInput = {
  id?: string
  productId: string
  earnPercentage?: number
  createdAt?: Date | string
}

export type RepostedProductUpdateWithoutBusinessInput = {
  id?: Prisma.StringFieldUpdateOperationsInput | string
  earnPercentage?: Prisma.FloatFieldUpdateOperationsInput | number
  createdAt?: Prisma.DateTimeFieldUpdateOperationsInput | Date | string
  product?: Prisma.ProductUpdateOneRequiredWithoutRepostsNestedInput
}

export type RepostedProductUncheckedUpdateWithoutBusinessInput = {
  id?: Prisma.StringFieldUpdateOperationsInput | string
  productId?: Prisma.StringFieldUpdateOperationsInput | string
  earnPercentage?: Prisma.FloatFieldUpdateOperationsInput | number
  createdAt?: Prisma.DateTimeFieldUpdateOperationsInput | Date | string
}

export type RepostedProductUncheckedUpdateManyWithoutBusinessInput = {
  id?: Prisma.StringFieldUpdateOperationsInput | string
  productId?: Prisma.StringFieldUpdateOperationsInput | string
  earnPercentage?: Prisma.FloatFieldUpdateOperationsInput | number
  createdAt?: Prisma.DateTimeFieldUpdateOperationsInput | Date | string
}

export type RepostedProductCreateManyProductInput = {
  id?: string
  businessId: string
  earnPercentage?: number
  createdAt?: Date | string
}

export type RepostedProductUpdateWithoutProductInput = {
  id?: Prisma.StringFieldUpdateOperationsInput | string
  earnPercentage?: Prisma.FloatFieldUpdateOperationsInput | number
  createdAt?: Prisma.DateTimeFieldUpdateOperationsInput | Date | string
  business?: Prisma.BusinessUpdateOneRequiredWithoutRepostedItemsNestedInput
}

export type RepostedProductUncheckedUpdateWithoutProductInput = {
  id?: Prisma.StringFieldUpdateOperationsInput | string
  businessId?: Prisma.StringFieldUpdateOperationsInput | string
  earnPercentage?: Prisma.FloatFieldUpdateOperationsInput | number
  createdAt?: Prisma.DateTimeFieldUpdateOperationsInput | Date | string
}

export type RepostedProductUncheckedUpdateManyWithoutProductInput = {
  id?: Prisma.StringFieldUpdateOperationsInput | string
  businessId?: Prisma.StringFieldUpdateOperationsInput | string
  earnPercentage?: Prisma.FloatFieldUpdateOperationsInput | number
  createdAt?: Prisma.DateTimeFieldUpdateOperationsInput | Date | string
}



export type RepostedProductSelect<ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs> = runtime.Types.Extensions.GetSelect<{
  id?: boolean
  businessId?: boolean
  productId?: boolean
  earnPercentage?: boolean
  createdAt?: boolean
  business?: boolean | Prisma.BusinessDefaultArgs<ExtArgs>
  product?: boolean | Prisma.ProductDefaultArgs<ExtArgs>
}, ExtArgs["result"]["repostedProduct"]>

export type RepostedProductSelectCreateManyAndReturn<ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs> = runtime.Types.Extensions.GetSelect<{
  id?: boolean
  businessId?: boolean
  productId?: boolean
  earnPercentage?: boolean
  createdAt?: boolean
  business?: boolean | Prisma.BusinessDefaultArgs<ExtArgs>
  product?: boolean | Prisma.ProductDefaultArgs<ExtArgs>
}, ExtArgs["result"]["repostedProduct"]>

export type RepostedProductSelectUpdateManyAndReturn<ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs> = runtime.Types.Extensions.GetSelect<{
  id?: boolean
  businessId?: boolean
  productId?: boolean
  earnPercentage?: boolean
  createdAt?: boolean
  business?: boolean | Prisma.BusinessDefaultArgs<ExtArgs>
  product?: boolean | Prisma.ProductDefaultArgs<ExtArgs>
}, ExtArgs["result"]["repostedProduct"]>

export type RepostedProductSelectScalar = {
  id?: boolean
  businessId?: boolean
  productId?: boolean
  earnPercentage?: boolean
  createdAt?: boolean
}

export type RepostedProductOmit<ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs> = runtime.Types.Extensions.GetOmit<"id" | "businessId" | "productId" | "earnPercentage" | "createdAt", ExtArgs["result"]["repostedProduct"]>
export type RepostedProductInclude<ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs> = {
  business?: boolean | Prisma.BusinessDefaultArgs<ExtArgs>
  product?: boolean | Prisma.ProductDefaultArgs<ExtArgs>
}
export type RepostedProductIncludeCreateManyAndReturn<ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs> = {
  business?: boolean | Prisma.BusinessDefaultArgs<ExtArgs>
  product?: boolean | Prisma.ProductDefaultArgs<ExtArgs>
}
export type RepostedProductIncludeUpdateManyAndReturn<ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs> = {
  business?: boolean | Prisma.BusinessDefaultArgs<ExtArgs>
  product?: boolean | Prisma.ProductDefaultArgs<ExtArgs>
}

export type $RepostedProductPayload<ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs> = {
  name: "RepostedProduct"
  objects: {
    business: Prisma.$BusinessPayload<ExtArgs>
    product: Prisma.$ProductPayload<ExtArgs>
  }
  scalars: runtime.Types.Extensions.GetPayloadResult<{
    id: string
    businessId: string
    productId: string
    earnPercentage: number
    createdAt: Date
  }, ExtArgs["result"]["repostedProduct"]>
  composites: {}
}

export type RepostedProductGetPayload<S extends boolean | null | undefined | RepostedProductDefaultArgs> = runtime.Types.Result.GetResult<Prisma.$RepostedProductPayload, S>

export type RepostedProductCountArgs<ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs> =
  Omit<RepostedProductFindManyArgs, 'select' | 'include' | 'distinct' | 'omit'> & {
    select?: RepostedProductCountAggregateInputType | true
  }

export interface RepostedProductDelegate<ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs, GlobalOmitOptions = {}> {
  [K: symbol]: { types: Prisma.TypeMap<ExtArgs>['model']['RepostedProduct'], meta: { name: 'RepostedProduct' } }
  /**
   * Find zero or one RepostedProduct that matches the filter.
   * @param {RepostedProductFindUniqueArgs} args - Arguments to find a RepostedProduct
   * @example
   * // Get one RepostedProduct
   * const repostedProduct = await prisma.repostedProduct.findUnique({
   *   where: {
   *     // ... provide filter here
   *   }
   * })
   */
  findUnique<T extends RepostedProductFindUniqueArgs>(args: Prisma.SelectSubset<T, RepostedProductFindUniqueArgs<ExtArgs>>): Prisma.Prisma__RepostedProductClient<runtime.Types.Result.GetResult<Prisma.$RepostedProductPayload<ExtArgs>, T, "findUnique", GlobalOmitOptions> | null, null, ExtArgs, GlobalOmitOptions>

  /**
   * Find one RepostedProduct that matches the filter or throw an error with `error.code='P2025'`
   * if no matches were found.
   * @param {RepostedProductFindUniqueOrThrowArgs} args - Arguments to find a RepostedProduct
   * @example
   * // Get one RepostedProduct
   * const repostedProduct = await prisma.repostedProduct.findUniqueOrThrow({
   *   where: {
   *     // ... provide filter here
   *   }
   * })
   */
  findUniqueOrThrow<T extends RepostedProductFindUniqueOrThrowArgs>(args: Prisma.SelectSubset<T, RepostedProductFindUniqueOrThrowArgs<ExtArgs>>): Prisma.Prisma__RepostedProductClient<runtime.Types.Result.GetResult<Prisma.$RepostedProductPayload<ExtArgs>, T, "findUniqueOrThrow", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

  /**
   * Find the first RepostedProduct that matches the filter.
   * Note, that providing `undefined` is treated as the value not being there.
   * Read more here: https://pris.ly/d/null-undefined
   * @param {RepostedProductFindFirstArgs} args - Arguments to find a RepostedProduct
   * @example
   * // Get one RepostedProduct
   * const repostedProduct = await prisma.repostedProduct.findFirst({
   *   where: {
   *     // ... provide filter here
   *   }
   * })
   */
  findFirst<T extends RepostedProductFindFirstArgs>(args?: Prisma.SelectSubset<T, RepostedProductFindFirstArgs<ExtArgs>>): Prisma.Prisma__RepostedProductClient<runtime.Types.Result.GetResult<Prisma.$RepostedProductPayload<ExtArgs>, T, "findFirst", GlobalOmitOptions> | null, null, ExtArgs, GlobalOmitOptions>

  /**
   * Find the first RepostedProduct that matches the filter or
   * throw `PrismaKnownClientError` with `P2025` code if no matches were found.
   * Note, that providing `undefined` is treated as the value not being there.
   * Read more here: https://pris.ly/d/null-undefined
   * @param {RepostedProductFindFirstOrThrowArgs} args - Arguments to find a RepostedProduct
   * @example
   * // Get one RepostedProduct
   * const repostedProduct = await prisma.repostedProduct.findFirstOrThrow({
   *   where: {
   *     // ... provide filter here
   *   }
   * })
   */
  findFirstOrThrow<T extends RepostedProductFindFirstOrThrowArgs>(args?: Prisma.SelectSubset<T, RepostedProductFindFirstOrThrowArgs<ExtArgs>>): Prisma.Prisma__RepostedProductClient<runtime.Types.Result.GetResult<Prisma.$RepostedProductPayload<ExtArgs>, T, "findFirstOrThrow", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

  /**
   * Find zero or more RepostedProducts that matches the filter.
   * Note, that providing `undefined` is treated as the value not being there.
   * Read more here: https://pris.ly/d/null-undefined
   * @param {RepostedProductFindManyArgs} args - Arguments to filter and select certain fields only.
   * @example
   * // Get all RepostedProducts
   * const repostedProducts = await prisma.repostedProduct.findMany()
   * 
   * // Get first 10 RepostedProducts
   * const repostedProducts = await prisma.repostedProduct.findMany({ take: 10 })
   * 
   * // Only select the `id`
   * const repostedProductWithIdOnly = await prisma.repostedProduct.findMany({ select: { id: true } })
   * 
   */
  findMany<T extends RepostedProductFindManyArgs>(args?: Prisma.SelectSubset<T, RepostedProductFindManyArgs<ExtArgs>>): Prisma.PrismaPromise<runtime.Types.Result.GetResult<Prisma.$RepostedProductPayload<ExtArgs>, T, "findMany", GlobalOmitOptions>>

  /**
   * Create a RepostedProduct.
   * @param {RepostedProductCreateArgs} args - Arguments to create a RepostedProduct.
   * @example
   * // Create one RepostedProduct
   * const RepostedProduct = await prisma.repostedProduct.create({
   *   data: {
   *     // ... data to create a RepostedProduct
   *   }
   * })
   * 
   */
  create<T extends RepostedProductCreateArgs>(args: Prisma.SelectSubset<T, RepostedProductCreateArgs<ExtArgs>>): Prisma.Prisma__RepostedProductClient<runtime.Types.Result.GetResult<Prisma.$RepostedProductPayload<ExtArgs>, T, "create", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

  /**
   * Create many RepostedProducts.
   * @param {RepostedProductCreateManyArgs} args - Arguments to create many RepostedProducts.
   * @example
   * // Create many RepostedProducts
   * const repostedProduct = await prisma.repostedProduct.createMany({
   *   data: [
   *     // ... provide data here
   *   ]
   * })
   *     
   */
  createMany<T extends RepostedProductCreateManyArgs>(args?: Prisma.SelectSubset<T, RepostedProductCreateManyArgs<ExtArgs>>): Prisma.PrismaPromise<Prisma.BatchPayload>

  /**
   * Create many RepostedProducts and returns the data saved in the database.
   * @param {RepostedProductCreateManyAndReturnArgs} args - Arguments to create many RepostedProducts.
   * @example
   * // Create many RepostedProducts
   * const repostedProduct = await prisma.repostedProduct.createManyAndReturn({
   *   data: [
   *     // ... provide data here
   *   ]
   * })
   * 
   * // Create many RepostedProducts and only return the `id`
   * const repostedProductWithIdOnly = await prisma.repostedProduct.createManyAndReturn({
   *   select: { id: true },
   *   data: [
   *     // ... provide data here
   *   ]
   * })
   * Note, that providing `undefined` is treated as the value not being there.
   * Read more here: https://pris.ly/d/null-undefined
   * 
   */
  createManyAndReturn<T extends RepostedProductCreateManyAndReturnArgs>(args?: Prisma.SelectSubset<T, RepostedProductCreateManyAndReturnArgs<ExtArgs>>): Prisma.PrismaPromise<runtime.Types.Result.GetResult<Prisma.$RepostedProductPayload<ExtArgs>, T, "createManyAndReturn", GlobalOmitOptions>>

  /**
   * Delete a RepostedProduct.
   * @param {RepostedProductDeleteArgs} args - Arguments to delete one RepostedProduct.
   * @example
   * // Delete one RepostedProduct
   * const RepostedProduct = await prisma.repostedProduct.delete({
   *   where: {
   *     // ... filter to delete one RepostedProduct
   *   }
   * })
   * 
   */
  delete<T extends RepostedProductDeleteArgs>(args: Prisma.SelectSubset<T, RepostedProductDeleteArgs<ExtArgs>>): Prisma.Prisma__RepostedProductClient<runtime.Types.Result.GetResult<Prisma.$RepostedProductPayload<ExtArgs>, T, "delete", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

  /**
   * Update one RepostedProduct.
   * @param {RepostedProductUpdateArgs} args - Arguments to update one RepostedProduct.
   * @example
   * // Update one RepostedProduct
   * const repostedProduct = await prisma.repostedProduct.update({
   *   where: {
   *     // ... provide filter here
   *   },
   *   data: {
   *     // ... provide data here
   *   }
   * })
   * 
   */
  update<T extends RepostedProductUpdateArgs>(args: Prisma.SelectSubset<T, RepostedProductUpdateArgs<ExtArgs>>): Prisma.Prisma__RepostedProductClient<runtime.Types.Result.GetResult<Prisma.$RepostedProductPayload<ExtArgs>, T, "update", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

  /**
   * Delete zero or more RepostedProducts.
   * @param {RepostedProductDeleteManyArgs} args - Arguments to filter RepostedProducts to delete.
   * @example
   * // Delete a few RepostedProducts
   * const { count } = await prisma.repostedProduct.deleteMany({
   *   where: {
   *     // ... provide filter here
   *   }
   * })
   * 
   */
  deleteMany<T extends RepostedProductDeleteManyArgs>(args?: Prisma.SelectSubset<T, RepostedProductDeleteManyArgs<ExtArgs>>): Prisma.PrismaPromise<Prisma.BatchPayload>

  /**
   * Update zero or more RepostedProducts.
   * Note, that providing `undefined` is treated as the value not being there.
   * Read more here: https://pris.ly/d/null-undefined
   * @param {RepostedProductUpdateManyArgs} args - Arguments to update one or more rows.
   * @example
   * // Update many RepostedProducts
   * const repostedProduct = await prisma.repostedProduct.updateMany({
   *   where: {
   *     // ... provide filter here
   *   },
   *   data: {
   *     // ... provide data here
   *   }
   * })
   * 
   */
  updateMany<T extends RepostedProductUpdateManyArgs>(args: Prisma.SelectSubset<T, RepostedProductUpdateManyArgs<ExtArgs>>): Prisma.PrismaPromise<Prisma.BatchPayload>

  /**
   * Update zero or more RepostedProducts and returns the data updated in the database.
   * @param {RepostedProductUpdateManyAndReturnArgs} args - Arguments to update many RepostedProducts.
   * @example
   * // Update many RepostedProducts
   * const repostedProduct = await prisma.repostedProduct.updateManyAndReturn({
   *   where: {
   *     // ... provide filter here
   *   },
   *   data: [
   *     // ... provide data here
   *   ]
   * })
   * 
   * // Update zero or more RepostedProducts and only return the `id`
   * const repostedProductWithIdOnly = await prisma.repostedProduct.updateManyAndReturn({
   *   select: { id: true },
   *   where: {
   *     // ... provide filter here
   *   },
   *   data: [
   *     // ... provide data here
   *   ]
   * })
   * Note, that providing `undefined` is treated as the value not being there.
   * Read more here: https://pris.ly/d/null-undefined
   * 
   */
  updateManyAndReturn<T extends RepostedProductUpdateManyAndReturnArgs>(args: Prisma.SelectSubset<T, RepostedProductUpdateManyAndReturnArgs<ExtArgs>>): Prisma.PrismaPromise<runtime.Types.Result.GetResult<Prisma.$RepostedProductPayload<ExtArgs>, T, "updateManyAndReturn", GlobalOmitOptions>>

  /**
   * Create or update one RepostedProduct.
   * @param {RepostedProductUpsertArgs} args - Arguments to update or create a RepostedProduct.
   * @example
   * // Update or create a RepostedProduct
   * const repostedProduct = await prisma.repostedProduct.upsert({
   *   create: {
   *     // ... data to create a RepostedProduct
   *   },
   *   update: {
   *     // ... in case it already exists, update
   *   },
   *   where: {
   *     // ... the filter for the RepostedProduct we want to update
   *   }
   * })
   */
  upsert<T extends RepostedProductUpsertArgs>(args: Prisma.SelectSubset<T, RepostedProductUpsertArgs<ExtArgs>>): Prisma.Prisma__RepostedProductClient<runtime.Types.Result.GetResult<Prisma.$RepostedProductPayload<ExtArgs>, T, "upsert", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>


  /**
   * Count the number of RepostedProducts.
   * Note, that providing `undefined` is treated as the value not being there.
   * Read more here: https://pris.ly/d/null-undefined
   * @param {RepostedProductCountArgs} args - Arguments to filter RepostedProducts to count.
   * @example
   * // Count the number of RepostedProducts
   * const count = await prisma.repostedProduct.count({
   *   where: {
   *     // ... the filter for the RepostedProducts we want to count
   *   }
   * })
  **/
  count<T extends RepostedProductCountArgs>(
    args?: Prisma.Subset<T, RepostedProductCountArgs>,
  ): Prisma.PrismaPromise<
    T extends runtime.Types.Utils.Record<'select', any>
      ? T['select'] extends true
        ? number
        : Prisma.GetScalarType<T['select'], RepostedProductCountAggregateOutputType>
      : number
  >

  /**
   * Allows you to perform aggregations operations on a RepostedProduct.
   * Note, that providing `undefined` is treated as the value not being there.
   * Read more here: https://pris.ly/d/null-undefined
   * @param {RepostedProductAggregateArgs} args - Select which aggregations you would like to apply and on what fields.
   * @example
   * // Ordered by age ascending
   * // Where email contains prisma.io
   * // Limited to the 10 users
   * const aggregations = await prisma.user.aggregate({
   *   _avg: {
   *     age: true,
   *   },
   *   where: {
   *     email: {
   *       contains: "prisma.io",
   *     },
   *   },
   *   orderBy: {
   *     age: "asc",
   *   },
   *   take: 10,
   * })
  **/
  aggregate<T extends RepostedProductAggregateArgs>(args: Prisma.Subset<T, RepostedProductAggregateArgs>): Prisma.PrismaPromise<GetRepostedProductAggregateType<T>>

  /**
   * Group by RepostedProduct.
   * Note, that providing `undefined` is treated as the value not being there.
   * Read more here: https://pris.ly/d/null-undefined
   * @param {RepostedProductGroupByArgs} args - Group by arguments.
   * @example
   * // Group by city, order by createdAt, get count
   * const result = await prisma.user.groupBy({
   *   by: ['city', 'createdAt'],
   *   orderBy: {
   *     createdAt: true
   *   },
   *   _count: {
   *     _all: true
   *   },
   * })
   * 
  **/
  groupBy<
    T extends RepostedProductGroupByArgs,
    HasSelectOrTake extends Prisma.Or<
      Prisma.Extends<'skip', Prisma.Keys<T>>,
      Prisma.Extends<'take', Prisma.Keys<T>>
    >,
    OrderByArg extends Prisma.True extends HasSelectOrTake
      ? { orderBy: RepostedProductGroupByArgs['orderBy'] }
      : { orderBy?: RepostedProductGroupByArgs['orderBy'] },
    OrderFields extends Prisma.ExcludeUnderscoreKeys<Prisma.Keys<Prisma.MaybeTupleToUnion<T['orderBy']>>>,
    ByFields extends Prisma.MaybeTupleToUnion<T['by']>,
    ByValid extends Prisma.Has<ByFields, OrderFields>,
    HavingFields extends Prisma.GetHavingFields<T['having']>,
    HavingValid extends Prisma.Has<ByFields, HavingFields>,
    ByEmpty extends T['by'] extends never[] ? Prisma.True : Prisma.False,
    InputErrors extends ByEmpty extends Prisma.True
    ? `Error: "by" must not be empty.`
    : HavingValid extends Prisma.False
    ? {
        [P in HavingFields]: P extends ByFields
          ? never
          : P extends string
          ? `Error: Field "${P}" used in "having" needs to be provided in "by".`
          : [
              Error,
              'Field ',
              P,
              ` in "having" needs to be provided in "by"`,
            ]
      }[HavingFields]
    : 'take' extends Prisma.Keys<T>
    ? 'orderBy' extends Prisma.Keys<T>
      ? ByValid extends Prisma.True
        ? {}
        : {
            [P in OrderFields]: P extends ByFields
              ? never
              : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
          }[OrderFields]
      : 'Error: If you provide "take", you also need to provide "orderBy"'
    : 'skip' extends Prisma.Keys<T>
    ? 'orderBy' extends Prisma.Keys<T>
      ? ByValid extends Prisma.True
        ? {}
        : {
            [P in OrderFields]: P extends ByFields
              ? never
              : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
          }[OrderFields]
      : 'Error: If you provide "skip", you also need to provide "orderBy"'
    : ByValid extends Prisma.True
    ? {}
    : {
        [P in OrderFields]: P extends ByFields
          ? never
          : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
      }[OrderFields]
  >(args: Prisma.SubsetIntersection<T, RepostedProductGroupByArgs, OrderByArg> & InputErrors): {} extends InputErrors ? GetRepostedProductGroupByPayload<T> : Prisma.PrismaPromise<InputErrors>
/**
 * Fields of the RepostedProduct model
 */
readonly fields: RepostedProductFieldRefs;
}

/**
 * The delegate class that acts as a "Promise-like" for RepostedProduct.
 * Why is this prefixed with `Prisma__`?
 * Because we want to prevent naming conflicts as mentioned in
 * https://github.com/prisma/prisma-client-js/issues/707
 */
export interface Prisma__RepostedProductClient<T, Null = never, ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs, GlobalOmitOptions = {}> extends Prisma.PrismaPromise<T> {
  readonly [Symbol.toStringTag]: "PrismaPromise"
  business<T extends Prisma.BusinessDefaultArgs<ExtArgs> = {}>(args?: Prisma.Subset<T, Prisma.BusinessDefaultArgs<ExtArgs>>): Prisma.Prisma__BusinessClient<runtime.Types.Result.GetResult<Prisma.$BusinessPayload<ExtArgs>, T, "findUniqueOrThrow", GlobalOmitOptions> | Null, Null, ExtArgs, GlobalOmitOptions>
  product<T extends Prisma.ProductDefaultArgs<ExtArgs> = {}>(args?: Prisma.Subset<T, Prisma.ProductDefaultArgs<ExtArgs>>): Prisma.Prisma__ProductClient<runtime.Types.Result.GetResult<Prisma.$ProductPayload<ExtArgs>, T, "findUniqueOrThrow", GlobalOmitOptions> | Null, Null, ExtArgs, GlobalOmitOptions>
  /**
   * Attaches callbacks for the resolution and/or rejection of the Promise.
   * @param onfulfilled The callback to execute when the Promise is resolved.
   * @param onrejected The callback to execute when the Promise is rejected.
   * @returns A Promise for the completion of which ever callback is executed.
   */
  then<TResult1 = T, TResult2 = never>(onfulfilled?: ((value: T) => TResult1 | PromiseLike<TResult1>) | undefined | null, onrejected?: ((reason: any) => TResult2 | PromiseLike<TResult2>) | undefined | null): runtime.Types.Utils.JsPromise<TResult1 | TResult2>
  /**
   * Attaches a callback for only the rejection of the Promise.
   * @param onrejected The callback to execute when the Promise is rejected.
   * @returns A Promise for the completion of the callback.
   */
  catch<TResult = never>(onrejected?: ((reason: any) => TResult | PromiseLike<TResult>) | undefined | null): runtime.Types.Utils.JsPromise<T | TResult>
  /**
   * Attaches a callback that is invoked when the Promise is settled (fulfilled or rejected). The
   * resolved value cannot be modified from the callback.
   * @param onfinally The callback to execute when the Promise is settled (fulfilled or rejected).
   * @returns A Promise for the completion of the callback.
   */
  finally(onfinally?: (() => void) | undefined | null): runtime.Types.Utils.JsPromise<T>
}




/**
 * Fields of the RepostedProduct model
 */
export interface RepostedProductFieldRefs {
  readonly id: Prisma.FieldRef<"RepostedProduct", 'String'>
  readonly businessId: Prisma.FieldRef<"RepostedProduct", 'String'>
  readonly productId: Prisma.FieldRef<"RepostedProduct", 'String'>
  readonly earnPercentage: Prisma.FieldRef<"RepostedProduct", 'Float'>
  readonly createdAt: Prisma.FieldRef<"RepostedProduct", 'DateTime'>
}
    

// Custom InputTypes
/**
 * RepostedProduct findUnique
 */
export type RepostedProductFindUniqueArgs<ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs> = {
  /**
   * Select specific fields to fetch from the RepostedProduct
   */
  select?: Prisma.RepostedProductSelect<ExtArgs> | null
  /**
   * Omit specific fields from the RepostedProduct
   */
  omit?: Prisma.RepostedProductOmit<ExtArgs> | null
  /**
   * Choose, which related nodes to fetch as well
   */
  include?: Prisma.RepostedProductInclude<ExtArgs> | null
  /**
   * Filter, which RepostedProduct to fetch.
   */
  where: Prisma.RepostedProductWhereUniqueInput
}

/**
 * RepostedProduct findUniqueOrThrow
 */
export type RepostedProductFindUniqueOrThrowArgs<ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs> = {
  /**
   * Select specific fields to fetch from the RepostedProduct
   */
  select?: Prisma.RepostedProductSelect<ExtArgs> | null
  /**
   * Omit specific fields from the RepostedProduct
   */
  omit?: Prisma.RepostedProductOmit<ExtArgs> | null
  /**
   * Choose, which related nodes to fetch as well
   */
  include?: Prisma.RepostedProductInclude<ExtArgs> | null
  /**
   * Filter, which RepostedProduct to fetch.
   */
  where: Prisma.RepostedProductWhereUniqueInput
}

/**
 * RepostedProduct findFirst
 */
export type RepostedProductFindFirstArgs<ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs> = {
  /**
   * Select specific fields to fetch from the RepostedProduct
   */
  select?: Prisma.RepostedProductSelect<ExtArgs> | null
  /**
   * Omit specific fields from the RepostedProduct
   */
  omit?: Prisma.RepostedProductOmit<ExtArgs> | null
  /**
   * Choose, which related nodes to fetch as well
   */
  include?: Prisma.RepostedProductInclude<ExtArgs> | null
  /**
   * Filter, which RepostedProduct to fetch.
   */
  where?: Prisma.RepostedProductWhereInput
  /**
   * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
   * 
   * Determine the order of RepostedProducts to fetch.
   */
  orderBy?: Prisma.RepostedProductOrderByWithRelationInput | Prisma.RepostedProductOrderByWithRelationInput[]
  /**
   * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
   * 
   * Sets the position for searching for RepostedProducts.
   */
  cursor?: Prisma.RepostedProductWhereUniqueInput
  /**
   * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
   * 
   * Take `Â±n` RepostedProducts from the position of the cursor.
   */
  take?: number
  /**
   * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
   * 
   * Skip the first `n` RepostedProducts.
   */
  skip?: number
  /**
   * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
   * 
   * Filter by unique combinations of RepostedProducts.
   */
  distinct?: Prisma.RepostedProductScalarFieldEnum | Prisma.RepostedProductScalarFieldEnum[]
}

/**
 * RepostedProduct findFirstOrThrow
 */
export type RepostedProductFindFirstOrThrowArgs<ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs> = {
  /**
   * Select specific fields to fetch from the RepostedProduct
   */
  select?: Prisma.RepostedProductSelect<ExtArgs> | null
  /**
   * Omit specific fields from the RepostedProduct
   */
  omit?: Prisma.RepostedProductOmit<ExtArgs> | null
  /**
   * Choose, which related nodes to fetch as well
   */
  include?: Prisma.RepostedProductInclude<ExtArgs> | null
  /**
   * Filter, which RepostedProduct to fetch.
   */
  where?: Prisma.RepostedProductWhereInput
  /**
   * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
   * 
   * Determine the order of RepostedProducts to fetch.
   */
  orderBy?: Prisma.RepostedProductOrderByWithRelationInput | Prisma.RepostedProductOrderByWithRelationInput[]
  /**
   * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
   * 
   * Sets the position for searching for RepostedProducts.
   */
  cursor?: Prisma.RepostedProductWhereUniqueInput
  /**
   * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
   * 
   * Take `Â±n` RepostedProducts from the position of the cursor.
   */
  take?: number
  /**
   * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
   * 
   * Skip the first `n` RepostedProducts.
   */
  skip?: number
  /**
   * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
   * 
   * Filter by unique combinations of RepostedProducts.
   */
  distinct?: Prisma.RepostedProductScalarFieldEnum | Prisma.RepostedProductScalarFieldEnum[]
}

/**
 * RepostedProduct findMany
 */
export type RepostedProductFindManyArgs<ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs> = {
  /**
   * Select specific fields to fetch from the RepostedProduct
   */
  select?: Prisma.RepostedProductSelect<ExtArgs> | null
  /**
   * Omit specific fields from the RepostedProduct
   */
  omit?: Prisma.RepostedProductOmit<ExtArgs> | null
  /**
   * Choose, which related nodes to fetch as well
   */
  include?: Prisma.RepostedProductInclude<ExtArgs> | null
  /**
   * Filter, which RepostedProducts to fetch.
   */
  where?: Prisma.RepostedProductWhereInput
  /**
   * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
   * 
   * Determine the order of RepostedProducts to fetch.
   */
  orderBy?: Prisma.RepostedProductOrderByWithRelationInput | Prisma.RepostedProductOrderByWithRelationInput[]
  /**
   * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
   * 
   * Sets the position for listing RepostedProducts.
   */
  cursor?: Prisma.RepostedProductWhereUniqueInput
  /**
   * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
   * 
   * Take `Â±n` RepostedProducts from the position of the cursor.
   */
  take?: number
  /**
   * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
   * 
   * Skip the first `n` RepostedProducts.
   */
  skip?: number
  distinct?: Prisma.RepostedProductScalarFieldEnum | Prisma.RepostedProductScalarFieldEnum[]
}

/**
 * RepostedProduct create
 */
export type RepostedProductCreateArgs<ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs> = {
  /**
   * Select specific fields to fetch from the RepostedProduct
   */
  select?: Prisma.RepostedProductSelect<ExtArgs> | null
  /**
   * Omit specific fields from the RepostedProduct
   */
  omit?: Prisma.RepostedProductOmit<ExtArgs> | null
  /**
   * Choose, which related nodes to fetch as well
   */
  include?: Prisma.RepostedProductInclude<ExtArgs> | null
  /**
   * The data needed to create a RepostedProduct.
   */
  data: Prisma.XOR<Prisma.RepostedProductCreateInput, Prisma.RepostedProductUncheckedCreateInput>
}

/**
 * RepostedProduct createMany
 */
export type RepostedProductCreateManyArgs<ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs> = {
  /**
   * The data used to create many RepostedProducts.
   */
  data: Prisma.RepostedProductCreateManyInput | Prisma.RepostedProductCreateManyInput[]
  skipDuplicates?: boolean
}

/**
 * RepostedProduct createManyAndReturn
 */
export type RepostedProductCreateManyAndReturnArgs<ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs> = {
  /**
   * Select specific fields to fetch from the RepostedProduct
   */
  select?: Prisma.RepostedProductSelectCreateManyAndReturn<ExtArgs> | null
  /**
   * Omit specific fields from the RepostedProduct
   */
  omit?: Prisma.RepostedProductOmit<ExtArgs> | null
  /**
   * The data used to create many RepostedProducts.
   */
  data: Prisma.RepostedProductCreateManyInput | Prisma.RepostedProductCreateManyInput[]
  skipDuplicates?: boolean
  /**
   * Choose, which related nodes to fetch as well
   */
  include?: Prisma.RepostedProductIncludeCreateManyAndReturn<ExtArgs> | null
}

/**
 * RepostedProduct update
 */
export type RepostedProductUpdateArgs<ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs> = {
  /**
   * Select specific fields to fetch from the RepostedProduct
   */
  select?: Prisma.RepostedProductSelect<ExtArgs> | null
  /**
   * Omit specific fields from the RepostedProduct
   */
  omit?: Prisma.RepostedProductOmit<ExtArgs> | null
  /**
   * Choose, which related nodes to fetch as well
   */
  include?: Prisma.RepostedProductInclude<ExtArgs> | null
  /**
   * The data needed to update a RepostedProduct.
   */
  data: Prisma.XOR<Prisma.RepostedProductUpdateInput, Prisma.RepostedProductUncheckedUpdateInput>
  /**
   * Choose, which RepostedProduct to update.
   */
  where: Prisma.RepostedProductWhereUniqueInput
}

/**
 * RepostedProduct updateMany
 */
export type RepostedProductUpdateManyArgs<ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs> = {
  /**
   * The data used to update RepostedProducts.
   */
  data: Prisma.XOR<Prisma.RepostedProductUpdateManyMutationInput, Prisma.RepostedProductUncheckedUpdateManyInput>
  /**
   * Filter which RepostedProducts to update
   */
  where?: Prisma.RepostedProductWhereInput
  /**
   * Limit how many RepostedProducts to update.
   */
  limit?: number
}

/**
 * RepostedProduct updateManyAndReturn
 */
export type RepostedProductUpdateManyAndReturnArgs<ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs> = {
  /**
   * Select specific fields to fetch from the RepostedProduct
   */
  select?: Prisma.RepostedProductSelectUpdateManyAndReturn<ExtArgs> | null
  /**
   * Omit specific fields from the RepostedProduct
   */
  omit?: Prisma.RepostedProductOmit<ExtArgs> | null
  /**
   * The data used to update RepostedProducts.
   */
  data: Prisma.XOR<Prisma.RepostedProductUpdateManyMutationInput, Prisma.RepostedProductUncheckedUpdateManyInput>
  /**
   * Filter which RepostedProducts to update
   */
  where?: Prisma.RepostedProductWhereInput
  /**
   * Limit how many RepostedProducts to update.
   */
  limit?: number
  /**
   * Choose, which related nodes to fetch as well
   */
  include?: Prisma.RepostedProductIncludeUpdateManyAndReturn<ExtArgs> | null
}

/**
 * RepostedProduct upsert
 */
export type RepostedProductUpsertArgs<ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs> = {
  /**
   * Select specific fields to fetch from the RepostedProduct
   */
  select?: Prisma.RepostedProductSelect<ExtArgs> | null
  /**
   * Omit specific fields from the RepostedProduct
   */
  omit?: Prisma.RepostedProductOmit<ExtArgs> | null
  /**
   * Choose, which related nodes to fetch as well
   */
  include?: Prisma.RepostedProductInclude<ExtArgs> | null
  /**
   * The filter to search for the RepostedProduct to update in case it exists.
   */
  where: Prisma.RepostedProductWhereUniqueInput
  /**
   * In case the RepostedProduct found by the `where` argument doesn't exist, create a new RepostedProduct with this data.
   */
  create: Prisma.XOR<Prisma.RepostedProductCreateInput, Prisma.RepostedProductUncheckedCreateInput>
  /**
   * In case the RepostedProduct was found with the provided `where` argument, update it with this data.
   */
  update: Prisma.XOR<Prisma.RepostedProductUpdateInput, Prisma.RepostedProductUncheckedUpdateInput>
}

/**
 * RepostedProduct delete
 */
export type RepostedProductDeleteArgs<ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs> = {
  /**
   * Select specific fields to fetch from the RepostedProduct
   */
  select?: Prisma.RepostedProductSelect<ExtArgs> | null
  /**
   * Omit specific fields from the RepostedProduct
   */
  omit?: Prisma.RepostedProductOmit<ExtArgs> | null
  /**
   * Choose, which related nodes to fetch as well
   */
  include?: Prisma.RepostedProductInclude<ExtArgs> | null
  /**
   * Filter which RepostedProduct to delete.
   */
  where: Prisma.RepostedProductWhereUniqueInput
}

/**
 * RepostedProduct deleteMany
 */
export type RepostedProductDeleteManyArgs<ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs> = {
  /**
   * Filter which RepostedProducts to delete
   */
  where?: Prisma.RepostedProductWhereInput
  /**
   * Limit how many RepostedProducts to delete.
   */
  limit?: number
}

/**
 * RepostedProduct without action
 */
export type RepostedProductDefaultArgs<ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs> = {
  /**
   * Select specific fields to fetch from the RepostedProduct
   */
  select?: Prisma.RepostedProductSelect<ExtArgs> | null
  /**
   * Omit specific fields from the RepostedProduct
   */
  omit?: Prisma.RepostedProductOmit<ExtArgs> | null
  /**
   * Choose, which related nodes to fetch as well
   */
  include?: Prisma.RepostedProductInclude<ExtArgs> | null
}
