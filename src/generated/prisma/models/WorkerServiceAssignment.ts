
/* !!! This is code generated by Prisma. Do not edit directly. !!! */
/* eslint-disable */
// @ts-nocheck 
/**
 * This file exports the `WorkerServiceAssignment` model and its related types.
 *
 * ðŸŸ¢ You can import this file directly.
 */
import * as runtime from "@prisma/client/runtime/library"
import type * as $Enums from "../enums"
import type * as Prisma from "../internal/prismaNamespace"

/**
 * Model WorkerServiceAssignment
 * 
 */
export type WorkerServiceAssignmentModel = runtime.Types.Result.DefaultSelection<Prisma.$WorkerServiceAssignmentPayload>

export type AggregateWorkerServiceAssignment = {
  _count: WorkerServiceAssignmentCountAggregateOutputType | null
  _min: WorkerServiceAssignmentMinAggregateOutputType | null
  _max: WorkerServiceAssignmentMaxAggregateOutputType | null
}

export type WorkerServiceAssignmentMinAggregateOutputType = {
  id: string | null
  workerId: string | null
  freelanceServiceId: string | null
  role: string | null
  assignedAt: Date | null
}

export type WorkerServiceAssignmentMaxAggregateOutputType = {
  id: string | null
  workerId: string | null
  freelanceServiceId: string | null
  role: string | null
  assignedAt: Date | null
}

export type WorkerServiceAssignmentCountAggregateOutputType = {
  id: number
  workerId: number
  freelanceServiceId: number
  role: number
  assignedAt: number
  _all: number
}


export type WorkerServiceAssignmentMinAggregateInputType = {
  id?: true
  workerId?: true
  freelanceServiceId?: true
  role?: true
  assignedAt?: true
}

export type WorkerServiceAssignmentMaxAggregateInputType = {
  id?: true
  workerId?: true
  freelanceServiceId?: true
  role?: true
  assignedAt?: true
}

export type WorkerServiceAssignmentCountAggregateInputType = {
  id?: true
  workerId?: true
  freelanceServiceId?: true
  role?: true
  assignedAt?: true
  _all?: true
}

export type WorkerServiceAssignmentAggregateArgs<ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs> = {
  /**
   * Filter which WorkerServiceAssignment to aggregate.
   */
  where?: Prisma.WorkerServiceAssignmentWhereInput
  /**
   * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
   * 
   * Determine the order of WorkerServiceAssignments to fetch.
   */
  orderBy?: Prisma.WorkerServiceAssignmentOrderByWithRelationInput | Prisma.WorkerServiceAssignmentOrderByWithRelationInput[]
  /**
   * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
   * 
   * Sets the start position
   */
  cursor?: Prisma.WorkerServiceAssignmentWhereUniqueInput
  /**
   * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
   * 
   * Take `Â±n` WorkerServiceAssignments from the position of the cursor.
   */
  take?: number
  /**
   * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
   * 
   * Skip the first `n` WorkerServiceAssignments.
   */
  skip?: number
  /**
   * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
   * 
   * Count returned WorkerServiceAssignments
  **/
  _count?: true | WorkerServiceAssignmentCountAggregateInputType
  /**
   * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
   * 
   * Select which fields to find the minimum value
  **/
  _min?: WorkerServiceAssignmentMinAggregateInputType
  /**
   * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
   * 
   * Select which fields to find the maximum value
  **/
  _max?: WorkerServiceAssignmentMaxAggregateInputType
}

export type GetWorkerServiceAssignmentAggregateType<T extends WorkerServiceAssignmentAggregateArgs> = {
      [P in keyof T & keyof AggregateWorkerServiceAssignment]: P extends '_count' | 'count'
    ? T[P] extends true
      ? number
      : Prisma.GetScalarType<T[P], AggregateWorkerServiceAssignment[P]>
    : Prisma.GetScalarType<T[P], AggregateWorkerServiceAssignment[P]>
}




export type WorkerServiceAssignmentGroupByArgs<ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs> = {
  where?: Prisma.WorkerServiceAssignmentWhereInput
  orderBy?: Prisma.WorkerServiceAssignmentOrderByWithAggregationInput | Prisma.WorkerServiceAssignmentOrderByWithAggregationInput[]
  by: Prisma.WorkerServiceAssignmentScalarFieldEnum[] | Prisma.WorkerServiceAssignmentScalarFieldEnum
  having?: Prisma.WorkerServiceAssignmentScalarWhereWithAggregatesInput
  take?: number
  skip?: number
  _count?: WorkerServiceAssignmentCountAggregateInputType | true
  _min?: WorkerServiceAssignmentMinAggregateInputType
  _max?: WorkerServiceAssignmentMaxAggregateInputType
}

export type WorkerServiceAssignmentGroupByOutputType = {
  id: string
  workerId: string
  freelanceServiceId: string
  role: string | null
  assignedAt: Date
  _count: WorkerServiceAssignmentCountAggregateOutputType | null
  _min: WorkerServiceAssignmentMinAggregateOutputType | null
  _max: WorkerServiceAssignmentMaxAggregateOutputType | null
}

type GetWorkerServiceAssignmentGroupByPayload<T extends WorkerServiceAssignmentGroupByArgs> = Prisma.PrismaPromise<
  Array<
    Prisma.PickEnumerable<WorkerServiceAssignmentGroupByOutputType, T['by']> &
      {
        [P in ((keyof T) & (keyof WorkerServiceAssignmentGroupByOutputType))]: P extends '_count'
          ? T[P] extends boolean
            ? number
            : Prisma.GetScalarType<T[P], WorkerServiceAssignmentGroupByOutputType[P]>
          : Prisma.GetScalarType<T[P], WorkerServiceAssignmentGroupByOutputType[P]>
      }
    >
  > 



export type WorkerServiceAssignmentWhereInput = {
  AND?: Prisma.WorkerServiceAssignmentWhereInput | Prisma.WorkerServiceAssignmentWhereInput[]
  OR?: Prisma.WorkerServiceAssignmentWhereInput[]
  NOT?: Prisma.WorkerServiceAssignmentWhereInput | Prisma.WorkerServiceAssignmentWhereInput[]
  id?: Prisma.StringFilter<"WorkerServiceAssignment"> | string
  workerId?: Prisma.StringFilter<"WorkerServiceAssignment"> | string
  freelanceServiceId?: Prisma.StringFilter<"WorkerServiceAssignment"> | string
  role?: Prisma.StringNullableFilter<"WorkerServiceAssignment"> | string | null
  assignedAt?: Prisma.DateTimeFilter<"WorkerServiceAssignment"> | Date | string
  worker?: Prisma.XOR<Prisma.WorkerScalarRelationFilter, Prisma.WorkerWhereInput>
  freelanceService?: Prisma.XOR<Prisma.FreelanceServiceScalarRelationFilter, Prisma.FreelanceServiceWhereInput>
}

export type WorkerServiceAssignmentOrderByWithRelationInput = {
  id?: Prisma.SortOrder
  workerId?: Prisma.SortOrder
  freelanceServiceId?: Prisma.SortOrder
  role?: Prisma.SortOrderInput | Prisma.SortOrder
  assignedAt?: Prisma.SortOrder
  worker?: Prisma.WorkerOrderByWithRelationInput
  freelanceService?: Prisma.FreelanceServiceOrderByWithRelationInput
}

export type WorkerServiceAssignmentWhereUniqueInput = Prisma.AtLeast<{
  id?: string
  AND?: Prisma.WorkerServiceAssignmentWhereInput | Prisma.WorkerServiceAssignmentWhereInput[]
  OR?: Prisma.WorkerServiceAssignmentWhereInput[]
  NOT?: Prisma.WorkerServiceAssignmentWhereInput | Prisma.WorkerServiceAssignmentWhereInput[]
  workerId?: Prisma.StringFilter<"WorkerServiceAssignment"> | string
  freelanceServiceId?: Prisma.StringFilter<"WorkerServiceAssignment"> | string
  role?: Prisma.StringNullableFilter<"WorkerServiceAssignment"> | string | null
  assignedAt?: Prisma.DateTimeFilter<"WorkerServiceAssignment"> | Date | string
  worker?: Prisma.XOR<Prisma.WorkerScalarRelationFilter, Prisma.WorkerWhereInput>
  freelanceService?: Prisma.XOR<Prisma.FreelanceServiceScalarRelationFilter, Prisma.FreelanceServiceWhereInput>
}, "id">

export type WorkerServiceAssignmentOrderByWithAggregationInput = {
  id?: Prisma.SortOrder
  workerId?: Prisma.SortOrder
  freelanceServiceId?: Prisma.SortOrder
  role?: Prisma.SortOrderInput | Prisma.SortOrder
  assignedAt?: Prisma.SortOrder
  _count?: Prisma.WorkerServiceAssignmentCountOrderByAggregateInput
  _max?: Prisma.WorkerServiceAssignmentMaxOrderByAggregateInput
  _min?: Prisma.WorkerServiceAssignmentMinOrderByAggregateInput
}

export type WorkerServiceAssignmentScalarWhereWithAggregatesInput = {
  AND?: Prisma.WorkerServiceAssignmentScalarWhereWithAggregatesInput | Prisma.WorkerServiceAssignmentScalarWhereWithAggregatesInput[]
  OR?: Prisma.WorkerServiceAssignmentScalarWhereWithAggregatesInput[]
  NOT?: Prisma.WorkerServiceAssignmentScalarWhereWithAggregatesInput | Prisma.WorkerServiceAssignmentScalarWhereWithAggregatesInput[]
  id?: Prisma.StringWithAggregatesFilter<"WorkerServiceAssignment"> | string
  workerId?: Prisma.StringWithAggregatesFilter<"WorkerServiceAssignment"> | string
  freelanceServiceId?: Prisma.StringWithAggregatesFilter<"WorkerServiceAssignment"> | string
  role?: Prisma.StringNullableWithAggregatesFilter<"WorkerServiceAssignment"> | string | null
  assignedAt?: Prisma.DateTimeWithAggregatesFilter<"WorkerServiceAssignment"> | Date | string
}

export type WorkerServiceAssignmentCreateInput = {
  id?: string
  role?: string | null
  assignedAt?: Date | string
  worker: Prisma.WorkerCreateNestedOneWithoutWorkerServiceAssignmentsInput
  freelanceService: Prisma.FreelanceServiceCreateNestedOneWithoutWorkerServiceAssignmentsInput
}

export type WorkerServiceAssignmentUncheckedCreateInput = {
  id?: string
  workerId: string
  freelanceServiceId: string
  role?: string | null
  assignedAt?: Date | string
}

export type WorkerServiceAssignmentUpdateInput = {
  id?: Prisma.StringFieldUpdateOperationsInput | string
  role?: Prisma.NullableStringFieldUpdateOperationsInput | string | null
  assignedAt?: Prisma.DateTimeFieldUpdateOperationsInput | Date | string
  worker?: Prisma.WorkerUpdateOneRequiredWithoutWorkerServiceAssignmentsNestedInput
  freelanceService?: Prisma.FreelanceServiceUpdateOneRequiredWithoutWorkerServiceAssignmentsNestedInput
}

export type WorkerServiceAssignmentUncheckedUpdateInput = {
  id?: Prisma.StringFieldUpdateOperationsInput | string
  workerId?: Prisma.StringFieldUpdateOperationsInput | string
  freelanceServiceId?: Prisma.StringFieldUpdateOperationsInput | string
  role?: Prisma.NullableStringFieldUpdateOperationsInput | string | null
  assignedAt?: Prisma.DateTimeFieldUpdateOperationsInput | Date | string
}

export type WorkerServiceAssignmentCreateManyInput = {
  id?: string
  workerId: string
  freelanceServiceId: string
  role?: string | null
  assignedAt?: Date | string
}

export type WorkerServiceAssignmentUpdateManyMutationInput = {
  id?: Prisma.StringFieldUpdateOperationsInput | string
  role?: Prisma.NullableStringFieldUpdateOperationsInput | string | null
  assignedAt?: Prisma.DateTimeFieldUpdateOperationsInput | Date | string
}

export type WorkerServiceAssignmentUncheckedUpdateManyInput = {
  id?: Prisma.StringFieldUpdateOperationsInput | string
  workerId?: Prisma.StringFieldUpdateOperationsInput | string
  freelanceServiceId?: Prisma.StringFieldUpdateOperationsInput | string
  role?: Prisma.NullableStringFieldUpdateOperationsInput | string | null
  assignedAt?: Prisma.DateTimeFieldUpdateOperationsInput | Date | string
}

export type WorkerServiceAssignmentListRelationFilter = {
  every?: Prisma.WorkerServiceAssignmentWhereInput
  some?: Prisma.WorkerServiceAssignmentWhereInput
  none?: Prisma.WorkerServiceAssignmentWhereInput
}

export type WorkerServiceAssignmentOrderByRelationAggregateInput = {
  _count?: Prisma.SortOrder
}

export type WorkerServiceAssignmentCountOrderByAggregateInput = {
  id?: Prisma.SortOrder
  workerId?: Prisma.SortOrder
  freelanceServiceId?: Prisma.SortOrder
  role?: Prisma.SortOrder
  assignedAt?: Prisma.SortOrder
}

export type WorkerServiceAssignmentMaxOrderByAggregateInput = {
  id?: Prisma.SortOrder
  workerId?: Prisma.SortOrder
  freelanceServiceId?: Prisma.SortOrder
  role?: Prisma.SortOrder
  assignedAt?: Prisma.SortOrder
}

export type WorkerServiceAssignmentMinOrderByAggregateInput = {
  id?: Prisma.SortOrder
  workerId?: Prisma.SortOrder
  freelanceServiceId?: Prisma.SortOrder
  role?: Prisma.SortOrder
  assignedAt?: Prisma.SortOrder
}

export type WorkerServiceAssignmentCreateNestedManyWithoutWorkerInput = {
  create?: Prisma.XOR<Prisma.WorkerServiceAssignmentCreateWithoutWorkerInput, Prisma.WorkerServiceAssignmentUncheckedCreateWithoutWorkerInput> | Prisma.WorkerServiceAssignmentCreateWithoutWorkerInput[] | Prisma.WorkerServiceAssignmentUncheckedCreateWithoutWorkerInput[]
  connectOrCreate?: Prisma.WorkerServiceAssignmentCreateOrConnectWithoutWorkerInput | Prisma.WorkerServiceAssignmentCreateOrConnectWithoutWorkerInput[]
  createMany?: Prisma.WorkerServiceAssignmentCreateManyWorkerInputEnvelope
  connect?: Prisma.WorkerServiceAssignmentWhereUniqueInput | Prisma.WorkerServiceAssignmentWhereUniqueInput[]
}

export type WorkerServiceAssignmentUncheckedCreateNestedManyWithoutWorkerInput = {
  create?: Prisma.XOR<Prisma.WorkerServiceAssignmentCreateWithoutWorkerInput, Prisma.WorkerServiceAssignmentUncheckedCreateWithoutWorkerInput> | Prisma.WorkerServiceAssignmentCreateWithoutWorkerInput[] | Prisma.WorkerServiceAssignmentUncheckedCreateWithoutWorkerInput[]
  connectOrCreate?: Prisma.WorkerServiceAssignmentCreateOrConnectWithoutWorkerInput | Prisma.WorkerServiceAssignmentCreateOrConnectWithoutWorkerInput[]
  createMany?: Prisma.WorkerServiceAssignmentCreateManyWorkerInputEnvelope
  connect?: Prisma.WorkerServiceAssignmentWhereUniqueInput | Prisma.WorkerServiceAssignmentWhereUniqueInput[]
}

export type WorkerServiceAssignmentUpdateManyWithoutWorkerNestedInput = {
  create?: Prisma.XOR<Prisma.WorkerServiceAssignmentCreateWithoutWorkerInput, Prisma.WorkerServiceAssignmentUncheckedCreateWithoutWorkerInput> | Prisma.WorkerServiceAssignmentCreateWithoutWorkerInput[] | Prisma.WorkerServiceAssignmentUncheckedCreateWithoutWorkerInput[]
  connectOrCreate?: Prisma.WorkerServiceAssignmentCreateOrConnectWithoutWorkerInput | Prisma.WorkerServiceAssignmentCreateOrConnectWithoutWorkerInput[]
  upsert?: Prisma.WorkerServiceAssignmentUpsertWithWhereUniqueWithoutWorkerInput | Prisma.WorkerServiceAssignmentUpsertWithWhereUniqueWithoutWorkerInput[]
  createMany?: Prisma.WorkerServiceAssignmentCreateManyWorkerInputEnvelope
  set?: Prisma.WorkerServiceAssignmentWhereUniqueInput | Prisma.WorkerServiceAssignmentWhereUniqueInput[]
  disconnect?: Prisma.WorkerServiceAssignmentWhereUniqueInput | Prisma.WorkerServiceAssignmentWhereUniqueInput[]
  delete?: Prisma.WorkerServiceAssignmentWhereUniqueInput | Prisma.WorkerServiceAssignmentWhereUniqueInput[]
  connect?: Prisma.WorkerServiceAssignmentWhereUniqueInput | Prisma.WorkerServiceAssignmentWhereUniqueInput[]
  update?: Prisma.WorkerServiceAssignmentUpdateWithWhereUniqueWithoutWorkerInput | Prisma.WorkerServiceAssignmentUpdateWithWhereUniqueWithoutWorkerInput[]
  updateMany?: Prisma.WorkerServiceAssignmentUpdateManyWithWhereWithoutWorkerInput | Prisma.WorkerServiceAssignmentUpdateManyWithWhereWithoutWorkerInput[]
  deleteMany?: Prisma.WorkerServiceAssignmentScalarWhereInput | Prisma.WorkerServiceAssignmentScalarWhereInput[]
}

export type WorkerServiceAssignmentUncheckedUpdateManyWithoutWorkerNestedInput = {
  create?: Prisma.XOR<Prisma.WorkerServiceAssignmentCreateWithoutWorkerInput, Prisma.WorkerServiceAssignmentUncheckedCreateWithoutWorkerInput> | Prisma.WorkerServiceAssignmentCreateWithoutWorkerInput[] | Prisma.WorkerServiceAssignmentUncheckedCreateWithoutWorkerInput[]
  connectOrCreate?: Prisma.WorkerServiceAssignmentCreateOrConnectWithoutWorkerInput | Prisma.WorkerServiceAssignmentCreateOrConnectWithoutWorkerInput[]
  upsert?: Prisma.WorkerServiceAssignmentUpsertWithWhereUniqueWithoutWorkerInput | Prisma.WorkerServiceAssignmentUpsertWithWhereUniqueWithoutWorkerInput[]
  createMany?: Prisma.WorkerServiceAssignmentCreateManyWorkerInputEnvelope
  set?: Prisma.WorkerServiceAssignmentWhereUniqueInput | Prisma.WorkerServiceAssignmentWhereUniqueInput[]
  disconnect?: Prisma.WorkerServiceAssignmentWhereUniqueInput | Prisma.WorkerServiceAssignmentWhereUniqueInput[]
  delete?: Prisma.WorkerServiceAssignmentWhereUniqueInput | Prisma.WorkerServiceAssignmentWhereUniqueInput[]
  connect?: Prisma.WorkerServiceAssignmentWhereUniqueInput | Prisma.WorkerServiceAssignmentWhereUniqueInput[]
  update?: Prisma.WorkerServiceAssignmentUpdateWithWhereUniqueWithoutWorkerInput | Prisma.WorkerServiceAssignmentUpdateWithWhereUniqueWithoutWorkerInput[]
  updateMany?: Prisma.WorkerServiceAssignmentUpdateManyWithWhereWithoutWorkerInput | Prisma.WorkerServiceAssignmentUpdateManyWithWhereWithoutWorkerInput[]
  deleteMany?: Prisma.WorkerServiceAssignmentScalarWhereInput | Prisma.WorkerServiceAssignmentScalarWhereInput[]
}

export type WorkerServiceAssignmentCreateNestedManyWithoutFreelanceServiceInput = {
  create?: Prisma.XOR<Prisma.WorkerServiceAssignmentCreateWithoutFreelanceServiceInput, Prisma.WorkerServiceAssignmentUncheckedCreateWithoutFreelanceServiceInput> | Prisma.WorkerServiceAssignmentCreateWithoutFreelanceServiceInput[] | Prisma.WorkerServiceAssignmentUncheckedCreateWithoutFreelanceServiceInput[]
  connectOrCreate?: Prisma.WorkerServiceAssignmentCreateOrConnectWithoutFreelanceServiceInput | Prisma.WorkerServiceAssignmentCreateOrConnectWithoutFreelanceServiceInput[]
  createMany?: Prisma.WorkerServiceAssignmentCreateManyFreelanceServiceInputEnvelope
  connect?: Prisma.WorkerServiceAssignmentWhereUniqueInput | Prisma.WorkerServiceAssignmentWhereUniqueInput[]
}

export type WorkerServiceAssignmentUncheckedCreateNestedManyWithoutFreelanceServiceInput = {
  create?: Prisma.XOR<Prisma.WorkerServiceAssignmentCreateWithoutFreelanceServiceInput, Prisma.WorkerServiceAssignmentUncheckedCreateWithoutFreelanceServiceInput> | Prisma.WorkerServiceAssignmentCreateWithoutFreelanceServiceInput[] | Prisma.WorkerServiceAssignmentUncheckedCreateWithoutFreelanceServiceInput[]
  connectOrCreate?: Prisma.WorkerServiceAssignmentCreateOrConnectWithoutFreelanceServiceInput | Prisma.WorkerServiceAssignmentCreateOrConnectWithoutFreelanceServiceInput[]
  createMany?: Prisma.WorkerServiceAssignmentCreateManyFreelanceServiceInputEnvelope
  connect?: Prisma.WorkerServiceAssignmentWhereUniqueInput | Prisma.WorkerServiceAssignmentWhereUniqueInput[]
}

export type WorkerServiceAssignmentUpdateManyWithoutFreelanceServiceNestedInput = {
  create?: Prisma.XOR<Prisma.WorkerServiceAssignmentCreateWithoutFreelanceServiceInput, Prisma.WorkerServiceAssignmentUncheckedCreateWithoutFreelanceServiceInput> | Prisma.WorkerServiceAssignmentCreateWithoutFreelanceServiceInput[] | Prisma.WorkerServiceAssignmentUncheckedCreateWithoutFreelanceServiceInput[]
  connectOrCreate?: Prisma.WorkerServiceAssignmentCreateOrConnectWithoutFreelanceServiceInput | Prisma.WorkerServiceAssignmentCreateOrConnectWithoutFreelanceServiceInput[]
  upsert?: Prisma.WorkerServiceAssignmentUpsertWithWhereUniqueWithoutFreelanceServiceInput | Prisma.WorkerServiceAssignmentUpsertWithWhereUniqueWithoutFreelanceServiceInput[]
  createMany?: Prisma.WorkerServiceAssignmentCreateManyFreelanceServiceInputEnvelope
  set?: Prisma.WorkerServiceAssignmentWhereUniqueInput | Prisma.WorkerServiceAssignmentWhereUniqueInput[]
  disconnect?: Prisma.WorkerServiceAssignmentWhereUniqueInput | Prisma.WorkerServiceAssignmentWhereUniqueInput[]
  delete?: Prisma.WorkerServiceAssignmentWhereUniqueInput | Prisma.WorkerServiceAssignmentWhereUniqueInput[]
  connect?: Prisma.WorkerServiceAssignmentWhereUniqueInput | Prisma.WorkerServiceAssignmentWhereUniqueInput[]
  update?: Prisma.WorkerServiceAssignmentUpdateWithWhereUniqueWithoutFreelanceServiceInput | Prisma.WorkerServiceAssignmentUpdateWithWhereUniqueWithoutFreelanceServiceInput[]
  updateMany?: Prisma.WorkerServiceAssignmentUpdateManyWithWhereWithoutFreelanceServiceInput | Prisma.WorkerServiceAssignmentUpdateManyWithWhereWithoutFreelanceServiceInput[]
  deleteMany?: Prisma.WorkerServiceAssignmentScalarWhereInput | Prisma.WorkerServiceAssignmentScalarWhereInput[]
}

export type WorkerServiceAssignmentUncheckedUpdateManyWithoutFreelanceServiceNestedInput = {
  create?: Prisma.XOR<Prisma.WorkerServiceAssignmentCreateWithoutFreelanceServiceInput, Prisma.WorkerServiceAssignmentUncheckedCreateWithoutFreelanceServiceInput> | Prisma.WorkerServiceAssignmentCreateWithoutFreelanceServiceInput[] | Prisma.WorkerServiceAssignmentUncheckedCreateWithoutFreelanceServiceInput[]
  connectOrCreate?: Prisma.WorkerServiceAssignmentCreateOrConnectWithoutFreelanceServiceInput | Prisma.WorkerServiceAssignmentCreateOrConnectWithoutFreelanceServiceInput[]
  upsert?: Prisma.WorkerServiceAssignmentUpsertWithWhereUniqueWithoutFreelanceServiceInput | Prisma.WorkerServiceAssignmentUpsertWithWhereUniqueWithoutFreelanceServiceInput[]
  createMany?: Prisma.WorkerServiceAssignmentCreateManyFreelanceServiceInputEnvelope
  set?: Prisma.WorkerServiceAssignmentWhereUniqueInput | Prisma.WorkerServiceAssignmentWhereUniqueInput[]
  disconnect?: Prisma.WorkerServiceAssignmentWhereUniqueInput | Prisma.WorkerServiceAssignmentWhereUniqueInput[]
  delete?: Prisma.WorkerServiceAssignmentWhereUniqueInput | Prisma.WorkerServiceAssignmentWhereUniqueInput[]
  connect?: Prisma.WorkerServiceAssignmentWhereUniqueInput | Prisma.WorkerServiceAssignmentWhereUniqueInput[]
  update?: Prisma.WorkerServiceAssignmentUpdateWithWhereUniqueWithoutFreelanceServiceInput | Prisma.WorkerServiceAssignmentUpdateWithWhereUniqueWithoutFreelanceServiceInput[]
  updateMany?: Prisma.WorkerServiceAssignmentUpdateManyWithWhereWithoutFreelanceServiceInput | Prisma.WorkerServiceAssignmentUpdateManyWithWhereWithoutFreelanceServiceInput[]
  deleteMany?: Prisma.WorkerServiceAssignmentScalarWhereInput | Prisma.WorkerServiceAssignmentScalarWhereInput[]
}

export type WorkerServiceAssignmentCreateWithoutWorkerInput = {
  id?: string
  role?: string | null
  assignedAt?: Date | string
  freelanceService: Prisma.FreelanceServiceCreateNestedOneWithoutWorkerServiceAssignmentsInput
}

export type WorkerServiceAssignmentUncheckedCreateWithoutWorkerInput = {
  id?: string
  freelanceServiceId: string
  role?: string | null
  assignedAt?: Date | string
}

export type WorkerServiceAssignmentCreateOrConnectWithoutWorkerInput = {
  where: Prisma.WorkerServiceAssignmentWhereUniqueInput
  create: Prisma.XOR<Prisma.WorkerServiceAssignmentCreateWithoutWorkerInput, Prisma.WorkerServiceAssignmentUncheckedCreateWithoutWorkerInput>
}

export type WorkerServiceAssignmentCreateManyWorkerInputEnvelope = {
  data: Prisma.WorkerServiceAssignmentCreateManyWorkerInput | Prisma.WorkerServiceAssignmentCreateManyWorkerInput[]
  skipDuplicates?: boolean
}

export type WorkerServiceAssignmentUpsertWithWhereUniqueWithoutWorkerInput = {
  where: Prisma.WorkerServiceAssignmentWhereUniqueInput
  update: Prisma.XOR<Prisma.WorkerServiceAssignmentUpdateWithoutWorkerInput, Prisma.WorkerServiceAssignmentUncheckedUpdateWithoutWorkerInput>
  create: Prisma.XOR<Prisma.WorkerServiceAssignmentCreateWithoutWorkerInput, Prisma.WorkerServiceAssignmentUncheckedCreateWithoutWorkerInput>
}

export type WorkerServiceAssignmentUpdateWithWhereUniqueWithoutWorkerInput = {
  where: Prisma.WorkerServiceAssignmentWhereUniqueInput
  data: Prisma.XOR<Prisma.WorkerServiceAssignmentUpdateWithoutWorkerInput, Prisma.WorkerServiceAssignmentUncheckedUpdateWithoutWorkerInput>
}

export type WorkerServiceAssignmentUpdateManyWithWhereWithoutWorkerInput = {
  where: Prisma.WorkerServiceAssignmentScalarWhereInput
  data: Prisma.XOR<Prisma.WorkerServiceAssignmentUpdateManyMutationInput, Prisma.WorkerServiceAssignmentUncheckedUpdateManyWithoutWorkerInput>
}

export type WorkerServiceAssignmentScalarWhereInput = {
  AND?: Prisma.WorkerServiceAssignmentScalarWhereInput | Prisma.WorkerServiceAssignmentScalarWhereInput[]
  OR?: Prisma.WorkerServiceAssignmentScalarWhereInput[]
  NOT?: Prisma.WorkerServiceAssignmentScalarWhereInput | Prisma.WorkerServiceAssignmentScalarWhereInput[]
  id?: Prisma.StringFilter<"WorkerServiceAssignment"> | string
  workerId?: Prisma.StringFilter<"WorkerServiceAssignment"> | string
  freelanceServiceId?: Prisma.StringFilter<"WorkerServiceAssignment"> | string
  role?: Prisma.StringNullableFilter<"WorkerServiceAssignment"> | string | null
  assignedAt?: Prisma.DateTimeFilter<"WorkerServiceAssignment"> | Date | string
}

export type WorkerServiceAssignmentCreateWithoutFreelanceServiceInput = {
  id?: string
  role?: string | null
  assignedAt?: Date | string
  worker: Prisma.WorkerCreateNestedOneWithoutWorkerServiceAssignmentsInput
}

export type WorkerServiceAssignmentUncheckedCreateWithoutFreelanceServiceInput = {
  id?: string
  workerId: string
  role?: string | null
  assignedAt?: Date | string
}

export type WorkerServiceAssignmentCreateOrConnectWithoutFreelanceServiceInput = {
  where: Prisma.WorkerServiceAssignmentWhereUniqueInput
  create: Prisma.XOR<Prisma.WorkerServiceAssignmentCreateWithoutFreelanceServiceInput, Prisma.WorkerServiceAssignmentUncheckedCreateWithoutFreelanceServiceInput>
}

export type WorkerServiceAssignmentCreateManyFreelanceServiceInputEnvelope = {
  data: Prisma.WorkerServiceAssignmentCreateManyFreelanceServiceInput | Prisma.WorkerServiceAssignmentCreateManyFreelanceServiceInput[]
  skipDuplicates?: boolean
}

export type WorkerServiceAssignmentUpsertWithWhereUniqueWithoutFreelanceServiceInput = {
  where: Prisma.WorkerServiceAssignmentWhereUniqueInput
  update: Prisma.XOR<Prisma.WorkerServiceAssignmentUpdateWithoutFreelanceServiceInput, Prisma.WorkerServiceAssignmentUncheckedUpdateWithoutFreelanceServiceInput>
  create: Prisma.XOR<Prisma.WorkerServiceAssignmentCreateWithoutFreelanceServiceInput, Prisma.WorkerServiceAssignmentUncheckedCreateWithoutFreelanceServiceInput>
}

export type WorkerServiceAssignmentUpdateWithWhereUniqueWithoutFreelanceServiceInput = {
  where: Prisma.WorkerServiceAssignmentWhereUniqueInput
  data: Prisma.XOR<Prisma.WorkerServiceAssignmentUpdateWithoutFreelanceServiceInput, Prisma.WorkerServiceAssignmentUncheckedUpdateWithoutFreelanceServiceInput>
}

export type WorkerServiceAssignmentUpdateManyWithWhereWithoutFreelanceServiceInput = {
  where: Prisma.WorkerServiceAssignmentScalarWhereInput
  data: Prisma.XOR<Prisma.WorkerServiceAssignmentUpdateManyMutationInput, Prisma.WorkerServiceAssignmentUncheckedUpdateManyWithoutFreelanceServiceInput>
}

export type WorkerServiceAssignmentCreateManyWorkerInput = {
  id?: string
  freelanceServiceId: string
  role?: string | null
  assignedAt?: Date | string
}

export type WorkerServiceAssignmentUpdateWithoutWorkerInput = {
  id?: Prisma.StringFieldUpdateOperationsInput | string
  role?: Prisma.NullableStringFieldUpdateOperationsInput | string | null
  assignedAt?: Prisma.DateTimeFieldUpdateOperationsInput | Date | string
  freelanceService?: Prisma.FreelanceServiceUpdateOneRequiredWithoutWorkerServiceAssignmentsNestedInput
}

export type WorkerServiceAssignmentUncheckedUpdateWithoutWorkerInput = {
  id?: Prisma.StringFieldUpdateOperationsInput | string
  freelanceServiceId?: Prisma.StringFieldUpdateOperationsInput | string
  role?: Prisma.NullableStringFieldUpdateOperationsInput | string | null
  assignedAt?: Prisma.DateTimeFieldUpdateOperationsInput | Date | string
}

export type WorkerServiceAssignmentUncheckedUpdateManyWithoutWorkerInput = {
  id?: Prisma.StringFieldUpdateOperationsInput | string
  freelanceServiceId?: Prisma.StringFieldUpdateOperationsInput | string
  role?: Prisma.NullableStringFieldUpdateOperationsInput | string | null
  assignedAt?: Prisma.DateTimeFieldUpdateOperationsInput | Date | string
}

export type WorkerServiceAssignmentCreateManyFreelanceServiceInput = {
  id?: string
  workerId: string
  role?: string | null
  assignedAt?: Date | string
}

export type WorkerServiceAssignmentUpdateWithoutFreelanceServiceInput = {
  id?: Prisma.StringFieldUpdateOperationsInput | string
  role?: Prisma.NullableStringFieldUpdateOperationsInput | string | null
  assignedAt?: Prisma.DateTimeFieldUpdateOperationsInput | Date | string
  worker?: Prisma.WorkerUpdateOneRequiredWithoutWorkerServiceAssignmentsNestedInput
}

export type WorkerServiceAssignmentUncheckedUpdateWithoutFreelanceServiceInput = {
  id?: Prisma.StringFieldUpdateOperationsInput | string
  workerId?: Prisma.StringFieldUpdateOperationsInput | string
  role?: Prisma.NullableStringFieldUpdateOperationsInput | string | null
  assignedAt?: Prisma.DateTimeFieldUpdateOperationsInput | Date | string
}

export type WorkerServiceAssignmentUncheckedUpdateManyWithoutFreelanceServiceInput = {
  id?: Prisma.StringFieldUpdateOperationsInput | string
  workerId?: Prisma.StringFieldUpdateOperationsInput | string
  role?: Prisma.NullableStringFieldUpdateOperationsInput | string | null
  assignedAt?: Prisma.DateTimeFieldUpdateOperationsInput | Date | string
}



export type WorkerServiceAssignmentSelect<ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs> = runtime.Types.Extensions.GetSelect<{
  id?: boolean
  workerId?: boolean
  freelanceServiceId?: boolean
  role?: boolean
  assignedAt?: boolean
  worker?: boolean | Prisma.WorkerDefaultArgs<ExtArgs>
  freelanceService?: boolean | Prisma.FreelanceServiceDefaultArgs<ExtArgs>
}, ExtArgs["result"]["workerServiceAssignment"]>

export type WorkerServiceAssignmentSelectCreateManyAndReturn<ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs> = runtime.Types.Extensions.GetSelect<{
  id?: boolean
  workerId?: boolean
  freelanceServiceId?: boolean
  role?: boolean
  assignedAt?: boolean
  worker?: boolean | Prisma.WorkerDefaultArgs<ExtArgs>
  freelanceService?: boolean | Prisma.FreelanceServiceDefaultArgs<ExtArgs>
}, ExtArgs["result"]["workerServiceAssignment"]>

export type WorkerServiceAssignmentSelectUpdateManyAndReturn<ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs> = runtime.Types.Extensions.GetSelect<{
  id?: boolean
  workerId?: boolean
  freelanceServiceId?: boolean
  role?: boolean
  assignedAt?: boolean
  worker?: boolean | Prisma.WorkerDefaultArgs<ExtArgs>
  freelanceService?: boolean | Prisma.FreelanceServiceDefaultArgs<ExtArgs>
}, ExtArgs["result"]["workerServiceAssignment"]>

export type WorkerServiceAssignmentSelectScalar = {
  id?: boolean
  workerId?: boolean
  freelanceServiceId?: boolean
  role?: boolean
  assignedAt?: boolean
}

export type WorkerServiceAssignmentOmit<ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs> = runtime.Types.Extensions.GetOmit<"id" | "workerId" | "freelanceServiceId" | "role" | "assignedAt", ExtArgs["result"]["workerServiceAssignment"]>
export type WorkerServiceAssignmentInclude<ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs> = {
  worker?: boolean | Prisma.WorkerDefaultArgs<ExtArgs>
  freelanceService?: boolean | Prisma.FreelanceServiceDefaultArgs<ExtArgs>
}
export type WorkerServiceAssignmentIncludeCreateManyAndReturn<ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs> = {
  worker?: boolean | Prisma.WorkerDefaultArgs<ExtArgs>
  freelanceService?: boolean | Prisma.FreelanceServiceDefaultArgs<ExtArgs>
}
export type WorkerServiceAssignmentIncludeUpdateManyAndReturn<ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs> = {
  worker?: boolean | Prisma.WorkerDefaultArgs<ExtArgs>
  freelanceService?: boolean | Prisma.FreelanceServiceDefaultArgs<ExtArgs>
}

export type $WorkerServiceAssignmentPayload<ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs> = {
  name: "WorkerServiceAssignment"
  objects: {
    worker: Prisma.$WorkerPayload<ExtArgs>
    freelanceService: Prisma.$FreelanceServicePayload<ExtArgs>
  }
  scalars: runtime.Types.Extensions.GetPayloadResult<{
    id: string
    workerId: string
    freelanceServiceId: string
    role: string | null
    assignedAt: Date
  }, ExtArgs["result"]["workerServiceAssignment"]>
  composites: {}
}

export type WorkerServiceAssignmentGetPayload<S extends boolean | null | undefined | WorkerServiceAssignmentDefaultArgs> = runtime.Types.Result.GetResult<Prisma.$WorkerServiceAssignmentPayload, S>

export type WorkerServiceAssignmentCountArgs<ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs> =
  Omit<WorkerServiceAssignmentFindManyArgs, 'select' | 'include' | 'distinct' | 'omit'> & {
    select?: WorkerServiceAssignmentCountAggregateInputType | true
  }

export interface WorkerServiceAssignmentDelegate<ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs, GlobalOmitOptions = {}> {
  [K: symbol]: { types: Prisma.TypeMap<ExtArgs>['model']['WorkerServiceAssignment'], meta: { name: 'WorkerServiceAssignment' } }
  /**
   * Find zero or one WorkerServiceAssignment that matches the filter.
   * @param {WorkerServiceAssignmentFindUniqueArgs} args - Arguments to find a WorkerServiceAssignment
   * @example
   * // Get one WorkerServiceAssignment
   * const workerServiceAssignment = await prisma.workerServiceAssignment.findUnique({
   *   where: {
   *     // ... provide filter here
   *   }
   * })
   */
  findUnique<T extends WorkerServiceAssignmentFindUniqueArgs>(args: Prisma.SelectSubset<T, WorkerServiceAssignmentFindUniqueArgs<ExtArgs>>): Prisma.Prisma__WorkerServiceAssignmentClient<runtime.Types.Result.GetResult<Prisma.$WorkerServiceAssignmentPayload<ExtArgs>, T, "findUnique", GlobalOmitOptions> | null, null, ExtArgs, GlobalOmitOptions>

  /**
   * Find one WorkerServiceAssignment that matches the filter or throw an error with `error.code='P2025'`
   * if no matches were found.
   * @param {WorkerServiceAssignmentFindUniqueOrThrowArgs} args - Arguments to find a WorkerServiceAssignment
   * @example
   * // Get one WorkerServiceAssignment
   * const workerServiceAssignment = await prisma.workerServiceAssignment.findUniqueOrThrow({
   *   where: {
   *     // ... provide filter here
   *   }
   * })
   */
  findUniqueOrThrow<T extends WorkerServiceAssignmentFindUniqueOrThrowArgs>(args: Prisma.SelectSubset<T, WorkerServiceAssignmentFindUniqueOrThrowArgs<ExtArgs>>): Prisma.Prisma__WorkerServiceAssignmentClient<runtime.Types.Result.GetResult<Prisma.$WorkerServiceAssignmentPayload<ExtArgs>, T, "findUniqueOrThrow", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

  /**
   * Find the first WorkerServiceAssignment that matches the filter.
   * Note, that providing `undefined` is treated as the value not being there.
   * Read more here: https://pris.ly/d/null-undefined
   * @param {WorkerServiceAssignmentFindFirstArgs} args - Arguments to find a WorkerServiceAssignment
   * @example
   * // Get one WorkerServiceAssignment
   * const workerServiceAssignment = await prisma.workerServiceAssignment.findFirst({
   *   where: {
   *     // ... provide filter here
   *   }
   * })
   */
  findFirst<T extends WorkerServiceAssignmentFindFirstArgs>(args?: Prisma.SelectSubset<T, WorkerServiceAssignmentFindFirstArgs<ExtArgs>>): Prisma.Prisma__WorkerServiceAssignmentClient<runtime.Types.Result.GetResult<Prisma.$WorkerServiceAssignmentPayload<ExtArgs>, T, "findFirst", GlobalOmitOptions> | null, null, ExtArgs, GlobalOmitOptions>

  /**
   * Find the first WorkerServiceAssignment that matches the filter or
   * throw `PrismaKnownClientError` with `P2025` code if no matches were found.
   * Note, that providing `undefined` is treated as the value not being there.
   * Read more here: https://pris.ly/d/null-undefined
   * @param {WorkerServiceAssignmentFindFirstOrThrowArgs} args - Arguments to find a WorkerServiceAssignment
   * @example
   * // Get one WorkerServiceAssignment
   * const workerServiceAssignment = await prisma.workerServiceAssignment.findFirstOrThrow({
   *   where: {
   *     // ... provide filter here
   *   }
   * })
   */
  findFirstOrThrow<T extends WorkerServiceAssignmentFindFirstOrThrowArgs>(args?: Prisma.SelectSubset<T, WorkerServiceAssignmentFindFirstOrThrowArgs<ExtArgs>>): Prisma.Prisma__WorkerServiceAssignmentClient<runtime.Types.Result.GetResult<Prisma.$WorkerServiceAssignmentPayload<ExtArgs>, T, "findFirstOrThrow", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

  /**
   * Find zero or more WorkerServiceAssignments that matches the filter.
   * Note, that providing `undefined` is treated as the value not being there.
   * Read more here: https://pris.ly/d/null-undefined
   * @param {WorkerServiceAssignmentFindManyArgs} args - Arguments to filter and select certain fields only.
   * @example
   * // Get all WorkerServiceAssignments
   * const workerServiceAssignments = await prisma.workerServiceAssignment.findMany()
   * 
   * // Get first 10 WorkerServiceAssignments
   * const workerServiceAssignments = await prisma.workerServiceAssignment.findMany({ take: 10 })
   * 
   * // Only select the `id`
   * const workerServiceAssignmentWithIdOnly = await prisma.workerServiceAssignment.findMany({ select: { id: true } })
   * 
   */
  findMany<T extends WorkerServiceAssignmentFindManyArgs>(args?: Prisma.SelectSubset<T, WorkerServiceAssignmentFindManyArgs<ExtArgs>>): Prisma.PrismaPromise<runtime.Types.Result.GetResult<Prisma.$WorkerServiceAssignmentPayload<ExtArgs>, T, "findMany", GlobalOmitOptions>>

  /**
   * Create a WorkerServiceAssignment.
   * @param {WorkerServiceAssignmentCreateArgs} args - Arguments to create a WorkerServiceAssignment.
   * @example
   * // Create one WorkerServiceAssignment
   * const WorkerServiceAssignment = await prisma.workerServiceAssignment.create({
   *   data: {
   *     // ... data to create a WorkerServiceAssignment
   *   }
   * })
   * 
   */
  create<T extends WorkerServiceAssignmentCreateArgs>(args: Prisma.SelectSubset<T, WorkerServiceAssignmentCreateArgs<ExtArgs>>): Prisma.Prisma__WorkerServiceAssignmentClient<runtime.Types.Result.GetResult<Prisma.$WorkerServiceAssignmentPayload<ExtArgs>, T, "create", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

  /**
   * Create many WorkerServiceAssignments.
   * @param {WorkerServiceAssignmentCreateManyArgs} args - Arguments to create many WorkerServiceAssignments.
   * @example
   * // Create many WorkerServiceAssignments
   * const workerServiceAssignment = await prisma.workerServiceAssignment.createMany({
   *   data: [
   *     // ... provide data here
   *   ]
   * })
   *     
   */
  createMany<T extends WorkerServiceAssignmentCreateManyArgs>(args?: Prisma.SelectSubset<T, WorkerServiceAssignmentCreateManyArgs<ExtArgs>>): Prisma.PrismaPromise<Prisma.BatchPayload>

  /**
   * Create many WorkerServiceAssignments and returns the data saved in the database.
   * @param {WorkerServiceAssignmentCreateManyAndReturnArgs} args - Arguments to create many WorkerServiceAssignments.
   * @example
   * // Create many WorkerServiceAssignments
   * const workerServiceAssignment = await prisma.workerServiceAssignment.createManyAndReturn({
   *   data: [
   *     // ... provide data here
   *   ]
   * })
   * 
   * // Create many WorkerServiceAssignments and only return the `id`
   * const workerServiceAssignmentWithIdOnly = await prisma.workerServiceAssignment.createManyAndReturn({
   *   select: { id: true },
   *   data: [
   *     // ... provide data here
   *   ]
   * })
   * Note, that providing `undefined` is treated as the value not being there.
   * Read more here: https://pris.ly/d/null-undefined
   * 
   */
  createManyAndReturn<T extends WorkerServiceAssignmentCreateManyAndReturnArgs>(args?: Prisma.SelectSubset<T, WorkerServiceAssignmentCreateManyAndReturnArgs<ExtArgs>>): Prisma.PrismaPromise<runtime.Types.Result.GetResult<Prisma.$WorkerServiceAssignmentPayload<ExtArgs>, T, "createManyAndReturn", GlobalOmitOptions>>

  /**
   * Delete a WorkerServiceAssignment.
   * @param {WorkerServiceAssignmentDeleteArgs} args - Arguments to delete one WorkerServiceAssignment.
   * @example
   * // Delete one WorkerServiceAssignment
   * const WorkerServiceAssignment = await prisma.workerServiceAssignment.delete({
   *   where: {
   *     // ... filter to delete one WorkerServiceAssignment
   *   }
   * })
   * 
   */
  delete<T extends WorkerServiceAssignmentDeleteArgs>(args: Prisma.SelectSubset<T, WorkerServiceAssignmentDeleteArgs<ExtArgs>>): Prisma.Prisma__WorkerServiceAssignmentClient<runtime.Types.Result.GetResult<Prisma.$WorkerServiceAssignmentPayload<ExtArgs>, T, "delete", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

  /**
   * Update one WorkerServiceAssignment.
   * @param {WorkerServiceAssignmentUpdateArgs} args - Arguments to update one WorkerServiceAssignment.
   * @example
   * // Update one WorkerServiceAssignment
   * const workerServiceAssignment = await prisma.workerServiceAssignment.update({
   *   where: {
   *     // ... provide filter here
   *   },
   *   data: {
   *     // ... provide data here
   *   }
   * })
   * 
   */
  update<T extends WorkerServiceAssignmentUpdateArgs>(args: Prisma.SelectSubset<T, WorkerServiceAssignmentUpdateArgs<ExtArgs>>): Prisma.Prisma__WorkerServiceAssignmentClient<runtime.Types.Result.GetResult<Prisma.$WorkerServiceAssignmentPayload<ExtArgs>, T, "update", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

  /**
   * Delete zero or more WorkerServiceAssignments.
   * @param {WorkerServiceAssignmentDeleteManyArgs} args - Arguments to filter WorkerServiceAssignments to delete.
   * @example
   * // Delete a few WorkerServiceAssignments
   * const { count } = await prisma.workerServiceAssignment.deleteMany({
   *   where: {
   *     // ... provide filter here
   *   }
   * })
   * 
   */
  deleteMany<T extends WorkerServiceAssignmentDeleteManyArgs>(args?: Prisma.SelectSubset<T, WorkerServiceAssignmentDeleteManyArgs<ExtArgs>>): Prisma.PrismaPromise<Prisma.BatchPayload>

  /**
   * Update zero or more WorkerServiceAssignments.
   * Note, that providing `undefined` is treated as the value not being there.
   * Read more here: https://pris.ly/d/null-undefined
   * @param {WorkerServiceAssignmentUpdateManyArgs} args - Arguments to update one or more rows.
   * @example
   * // Update many WorkerServiceAssignments
   * const workerServiceAssignment = await prisma.workerServiceAssignment.updateMany({
   *   where: {
   *     // ... provide filter here
   *   },
   *   data: {
   *     // ... provide data here
   *   }
   * })
   * 
   */
  updateMany<T extends WorkerServiceAssignmentUpdateManyArgs>(args: Prisma.SelectSubset<T, WorkerServiceAssignmentUpdateManyArgs<ExtArgs>>): Prisma.PrismaPromise<Prisma.BatchPayload>

  /**
   * Update zero or more WorkerServiceAssignments and returns the data updated in the database.
   * @param {WorkerServiceAssignmentUpdateManyAndReturnArgs} args - Arguments to update many WorkerServiceAssignments.
   * @example
   * // Update many WorkerServiceAssignments
   * const workerServiceAssignment = await prisma.workerServiceAssignment.updateManyAndReturn({
   *   where: {
   *     // ... provide filter here
   *   },
   *   data: [
   *     // ... provide data here
   *   ]
   * })
   * 
   * // Update zero or more WorkerServiceAssignments and only return the `id`
   * const workerServiceAssignmentWithIdOnly = await prisma.workerServiceAssignment.updateManyAndReturn({
   *   select: { id: true },
   *   where: {
   *     // ... provide filter here
   *   },
   *   data: [
   *     // ... provide data here
   *   ]
   * })
   * Note, that providing `undefined` is treated as the value not being there.
   * Read more here: https://pris.ly/d/null-undefined
   * 
   */
  updateManyAndReturn<T extends WorkerServiceAssignmentUpdateManyAndReturnArgs>(args: Prisma.SelectSubset<T, WorkerServiceAssignmentUpdateManyAndReturnArgs<ExtArgs>>): Prisma.PrismaPromise<runtime.Types.Result.GetResult<Prisma.$WorkerServiceAssignmentPayload<ExtArgs>, T, "updateManyAndReturn", GlobalOmitOptions>>

  /**
   * Create or update one WorkerServiceAssignment.
   * @param {WorkerServiceAssignmentUpsertArgs} args - Arguments to update or create a WorkerServiceAssignment.
   * @example
   * // Update or create a WorkerServiceAssignment
   * const workerServiceAssignment = await prisma.workerServiceAssignment.upsert({
   *   create: {
   *     // ... data to create a WorkerServiceAssignment
   *   },
   *   update: {
   *     // ... in case it already exists, update
   *   },
   *   where: {
   *     // ... the filter for the WorkerServiceAssignment we want to update
   *   }
   * })
   */
  upsert<T extends WorkerServiceAssignmentUpsertArgs>(args: Prisma.SelectSubset<T, WorkerServiceAssignmentUpsertArgs<ExtArgs>>): Prisma.Prisma__WorkerServiceAssignmentClient<runtime.Types.Result.GetResult<Prisma.$WorkerServiceAssignmentPayload<ExtArgs>, T, "upsert", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>


  /**
   * Count the number of WorkerServiceAssignments.
   * Note, that providing `undefined` is treated as the value not being there.
   * Read more here: https://pris.ly/d/null-undefined
   * @param {WorkerServiceAssignmentCountArgs} args - Arguments to filter WorkerServiceAssignments to count.
   * @example
   * // Count the number of WorkerServiceAssignments
   * const count = await prisma.workerServiceAssignment.count({
   *   where: {
   *     // ... the filter for the WorkerServiceAssignments we want to count
   *   }
   * })
  **/
  count<T extends WorkerServiceAssignmentCountArgs>(
    args?: Prisma.Subset<T, WorkerServiceAssignmentCountArgs>,
  ): Prisma.PrismaPromise<
    T extends runtime.Types.Utils.Record<'select', any>
      ? T['select'] extends true
        ? number
        : Prisma.GetScalarType<T['select'], WorkerServiceAssignmentCountAggregateOutputType>
      : number
  >

  /**
   * Allows you to perform aggregations operations on a WorkerServiceAssignment.
   * Note, that providing `undefined` is treated as the value not being there.
   * Read more here: https://pris.ly/d/null-undefined
   * @param {WorkerServiceAssignmentAggregateArgs} args - Select which aggregations you would like to apply and on what fields.
   * @example
   * // Ordered by age ascending
   * // Where email contains prisma.io
   * // Limited to the 10 users
   * const aggregations = await prisma.user.aggregate({
   *   _avg: {
   *     age: true,
   *   },
   *   where: {
   *     email: {
   *       contains: "prisma.io",
   *     },
   *   },
   *   orderBy: {
   *     age: "asc",
   *   },
   *   take: 10,
   * })
  **/
  aggregate<T extends WorkerServiceAssignmentAggregateArgs>(args: Prisma.Subset<T, WorkerServiceAssignmentAggregateArgs>): Prisma.PrismaPromise<GetWorkerServiceAssignmentAggregateType<T>>

  /**
   * Group by WorkerServiceAssignment.
   * Note, that providing `undefined` is treated as the value not being there.
   * Read more here: https://pris.ly/d/null-undefined
   * @param {WorkerServiceAssignmentGroupByArgs} args - Group by arguments.
   * @example
   * // Group by city, order by createdAt, get count
   * const result = await prisma.user.groupBy({
   *   by: ['city', 'createdAt'],
   *   orderBy: {
   *     createdAt: true
   *   },
   *   _count: {
   *     _all: true
   *   },
   * })
   * 
  **/
  groupBy<
    T extends WorkerServiceAssignmentGroupByArgs,
    HasSelectOrTake extends Prisma.Or<
      Prisma.Extends<'skip', Prisma.Keys<T>>,
      Prisma.Extends<'take', Prisma.Keys<T>>
    >,
    OrderByArg extends Prisma.True extends HasSelectOrTake
      ? { orderBy: WorkerServiceAssignmentGroupByArgs['orderBy'] }
      : { orderBy?: WorkerServiceAssignmentGroupByArgs['orderBy'] },
    OrderFields extends Prisma.ExcludeUnderscoreKeys<Prisma.Keys<Prisma.MaybeTupleToUnion<T['orderBy']>>>,
    ByFields extends Prisma.MaybeTupleToUnion<T['by']>,
    ByValid extends Prisma.Has<ByFields, OrderFields>,
    HavingFields extends Prisma.GetHavingFields<T['having']>,
    HavingValid extends Prisma.Has<ByFields, HavingFields>,
    ByEmpty extends T['by'] extends never[] ? Prisma.True : Prisma.False,
    InputErrors extends ByEmpty extends Prisma.True
    ? `Error: "by" must not be empty.`
    : HavingValid extends Prisma.False
    ? {
        [P in HavingFields]: P extends ByFields
          ? never
          : P extends string
          ? `Error: Field "${P}" used in "having" needs to be provided in "by".`
          : [
              Error,
              'Field ',
              P,
              ` in "having" needs to be provided in "by"`,
            ]
      }[HavingFields]
    : 'take' extends Prisma.Keys<T>
    ? 'orderBy' extends Prisma.Keys<T>
      ? ByValid extends Prisma.True
        ? {}
        : {
            [P in OrderFields]: P extends ByFields
              ? never
              : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
          }[OrderFields]
      : 'Error: If you provide "take", you also need to provide "orderBy"'
    : 'skip' extends Prisma.Keys<T>
    ? 'orderBy' extends Prisma.Keys<T>
      ? ByValid extends Prisma.True
        ? {}
        : {
            [P in OrderFields]: P extends ByFields
              ? never
              : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
          }[OrderFields]
      : 'Error: If you provide "skip", you also need to provide "orderBy"'
    : ByValid extends Prisma.True
    ? {}
    : {
        [P in OrderFields]: P extends ByFields
          ? never
          : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
      }[OrderFields]
  >(args: Prisma.SubsetIntersection<T, WorkerServiceAssignmentGroupByArgs, OrderByArg> & InputErrors): {} extends InputErrors ? GetWorkerServiceAssignmentGroupByPayload<T> : Prisma.PrismaPromise<InputErrors>
/**
 * Fields of the WorkerServiceAssignment model
 */
readonly fields: WorkerServiceAssignmentFieldRefs;
}

/**
 * The delegate class that acts as a "Promise-like" for WorkerServiceAssignment.
 * Why is this prefixed with `Prisma__`?
 * Because we want to prevent naming conflicts as mentioned in
 * https://github.com/prisma/prisma-client-js/issues/707
 */
export interface Prisma__WorkerServiceAssignmentClient<T, Null = never, ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs, GlobalOmitOptions = {}> extends Prisma.PrismaPromise<T> {
  readonly [Symbol.toStringTag]: "PrismaPromise"
  worker<T extends Prisma.WorkerDefaultArgs<ExtArgs> = {}>(args?: Prisma.Subset<T, Prisma.WorkerDefaultArgs<ExtArgs>>): Prisma.Prisma__WorkerClient<runtime.Types.Result.GetResult<Prisma.$WorkerPayload<ExtArgs>, T, "findUniqueOrThrow", GlobalOmitOptions> | Null, Null, ExtArgs, GlobalOmitOptions>
  freelanceService<T extends Prisma.FreelanceServiceDefaultArgs<ExtArgs> = {}>(args?: Prisma.Subset<T, Prisma.FreelanceServiceDefaultArgs<ExtArgs>>): Prisma.Prisma__FreelanceServiceClient<runtime.Types.Result.GetResult<Prisma.$FreelanceServicePayload<ExtArgs>, T, "findUniqueOrThrow", GlobalOmitOptions> | Null, Null, ExtArgs, GlobalOmitOptions>
  /**
   * Attaches callbacks for the resolution and/or rejection of the Promise.
   * @param onfulfilled The callback to execute when the Promise is resolved.
   * @param onrejected The callback to execute when the Promise is rejected.
   * @returns A Promise for the completion of which ever callback is executed.
   */
  then<TResult1 = T, TResult2 = never>(onfulfilled?: ((value: T) => TResult1 | PromiseLike<TResult1>) | undefined | null, onrejected?: ((reason: any) => TResult2 | PromiseLike<TResult2>) | undefined | null): runtime.Types.Utils.JsPromise<TResult1 | TResult2>
  /**
   * Attaches a callback for only the rejection of the Promise.
   * @param onrejected The callback to execute when the Promise is rejected.
   * @returns A Promise for the completion of the callback.
   */
  catch<TResult = never>(onrejected?: ((reason: any) => TResult | PromiseLike<TResult>) | undefined | null): runtime.Types.Utils.JsPromise<T | TResult>
  /**
   * Attaches a callback that is invoked when the Promise is settled (fulfilled or rejected). The
   * resolved value cannot be modified from the callback.
   * @param onfinally The callback to execute when the Promise is settled (fulfilled or rejected).
   * @returns A Promise for the completion of the callback.
   */
  finally(onfinally?: (() => void) | undefined | null): runtime.Types.Utils.JsPromise<T>
}




/**
 * Fields of the WorkerServiceAssignment model
 */
export interface WorkerServiceAssignmentFieldRefs {
  readonly id: Prisma.FieldRef<"WorkerServiceAssignment", 'String'>
  readonly workerId: Prisma.FieldRef<"WorkerServiceAssignment", 'String'>
  readonly freelanceServiceId: Prisma.FieldRef<"WorkerServiceAssignment", 'String'>
  readonly role: Prisma.FieldRef<"WorkerServiceAssignment", 'String'>
  readonly assignedAt: Prisma.FieldRef<"WorkerServiceAssignment", 'DateTime'>
}
    

// Custom InputTypes
/**
 * WorkerServiceAssignment findUnique
 */
export type WorkerServiceAssignmentFindUniqueArgs<ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs> = {
  /**
   * Select specific fields to fetch from the WorkerServiceAssignment
   */
  select?: Prisma.WorkerServiceAssignmentSelect<ExtArgs> | null
  /**
   * Omit specific fields from the WorkerServiceAssignment
   */
  omit?: Prisma.WorkerServiceAssignmentOmit<ExtArgs> | null
  /**
   * Choose, which related nodes to fetch as well
   */
  include?: Prisma.WorkerServiceAssignmentInclude<ExtArgs> | null
  /**
   * Filter, which WorkerServiceAssignment to fetch.
   */
  where: Prisma.WorkerServiceAssignmentWhereUniqueInput
}

/**
 * WorkerServiceAssignment findUniqueOrThrow
 */
export type WorkerServiceAssignmentFindUniqueOrThrowArgs<ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs> = {
  /**
   * Select specific fields to fetch from the WorkerServiceAssignment
   */
  select?: Prisma.WorkerServiceAssignmentSelect<ExtArgs> | null
  /**
   * Omit specific fields from the WorkerServiceAssignment
   */
  omit?: Prisma.WorkerServiceAssignmentOmit<ExtArgs> | null
  /**
   * Choose, which related nodes to fetch as well
   */
  include?: Prisma.WorkerServiceAssignmentInclude<ExtArgs> | null
  /**
   * Filter, which WorkerServiceAssignment to fetch.
   */
  where: Prisma.WorkerServiceAssignmentWhereUniqueInput
}

/**
 * WorkerServiceAssignment findFirst
 */
export type WorkerServiceAssignmentFindFirstArgs<ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs> = {
  /**
   * Select specific fields to fetch from the WorkerServiceAssignment
   */
  select?: Prisma.WorkerServiceAssignmentSelect<ExtArgs> | null
  /**
   * Omit specific fields from the WorkerServiceAssignment
   */
  omit?: Prisma.WorkerServiceAssignmentOmit<ExtArgs> | null
  /**
   * Choose, which related nodes to fetch as well
   */
  include?: Prisma.WorkerServiceAssignmentInclude<ExtArgs> | null
  /**
   * Filter, which WorkerServiceAssignment to fetch.
   */
  where?: Prisma.WorkerServiceAssignmentWhereInput
  /**
   * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
   * 
   * Determine the order of WorkerServiceAssignments to fetch.
   */
  orderBy?: Prisma.WorkerServiceAssignmentOrderByWithRelationInput | Prisma.WorkerServiceAssignmentOrderByWithRelationInput[]
  /**
   * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
   * 
   * Sets the position for searching for WorkerServiceAssignments.
   */
  cursor?: Prisma.WorkerServiceAssignmentWhereUniqueInput
  /**
   * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
   * 
   * Take `Â±n` WorkerServiceAssignments from the position of the cursor.
   */
  take?: number
  /**
   * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
   * 
   * Skip the first `n` WorkerServiceAssignments.
   */
  skip?: number
  /**
   * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
   * 
   * Filter by unique combinations of WorkerServiceAssignments.
   */
  distinct?: Prisma.WorkerServiceAssignmentScalarFieldEnum | Prisma.WorkerServiceAssignmentScalarFieldEnum[]
}

/**
 * WorkerServiceAssignment findFirstOrThrow
 */
export type WorkerServiceAssignmentFindFirstOrThrowArgs<ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs> = {
  /**
   * Select specific fields to fetch from the WorkerServiceAssignment
   */
  select?: Prisma.WorkerServiceAssignmentSelect<ExtArgs> | null
  /**
   * Omit specific fields from the WorkerServiceAssignment
   */
  omit?: Prisma.WorkerServiceAssignmentOmit<ExtArgs> | null
  /**
   * Choose, which related nodes to fetch as well
   */
  include?: Prisma.WorkerServiceAssignmentInclude<ExtArgs> | null
  /**
   * Filter, which WorkerServiceAssignment to fetch.
   */
  where?: Prisma.WorkerServiceAssignmentWhereInput
  /**
   * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
   * 
   * Determine the order of WorkerServiceAssignments to fetch.
   */
  orderBy?: Prisma.WorkerServiceAssignmentOrderByWithRelationInput | Prisma.WorkerServiceAssignmentOrderByWithRelationInput[]
  /**
   * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
   * 
   * Sets the position for searching for WorkerServiceAssignments.
   */
  cursor?: Prisma.WorkerServiceAssignmentWhereUniqueInput
  /**
   * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
   * 
   * Take `Â±n` WorkerServiceAssignments from the position of the cursor.
   */
  take?: number
  /**
   * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
   * 
   * Skip the first `n` WorkerServiceAssignments.
   */
  skip?: number
  /**
   * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
   * 
   * Filter by unique combinations of WorkerServiceAssignments.
   */
  distinct?: Prisma.WorkerServiceAssignmentScalarFieldEnum | Prisma.WorkerServiceAssignmentScalarFieldEnum[]
}

/**
 * WorkerServiceAssignment findMany
 */
export type WorkerServiceAssignmentFindManyArgs<ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs> = {
  /**
   * Select specific fields to fetch from the WorkerServiceAssignment
   */
  select?: Prisma.WorkerServiceAssignmentSelect<ExtArgs> | null
  /**
   * Omit specific fields from the WorkerServiceAssignment
   */
  omit?: Prisma.WorkerServiceAssignmentOmit<ExtArgs> | null
  /**
   * Choose, which related nodes to fetch as well
   */
  include?: Prisma.WorkerServiceAssignmentInclude<ExtArgs> | null
  /**
   * Filter, which WorkerServiceAssignments to fetch.
   */
  where?: Prisma.WorkerServiceAssignmentWhereInput
  /**
   * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
   * 
   * Determine the order of WorkerServiceAssignments to fetch.
   */
  orderBy?: Prisma.WorkerServiceAssignmentOrderByWithRelationInput | Prisma.WorkerServiceAssignmentOrderByWithRelationInput[]
  /**
   * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
   * 
   * Sets the position for listing WorkerServiceAssignments.
   */
  cursor?: Prisma.WorkerServiceAssignmentWhereUniqueInput
  /**
   * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
   * 
   * Take `Â±n` WorkerServiceAssignments from the position of the cursor.
   */
  take?: number
  /**
   * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
   * 
   * Skip the first `n` WorkerServiceAssignments.
   */
  skip?: number
  distinct?: Prisma.WorkerServiceAssignmentScalarFieldEnum | Prisma.WorkerServiceAssignmentScalarFieldEnum[]
}

/**
 * WorkerServiceAssignment create
 */
export type WorkerServiceAssignmentCreateArgs<ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs> = {
  /**
   * Select specific fields to fetch from the WorkerServiceAssignment
   */
  select?: Prisma.WorkerServiceAssignmentSelect<ExtArgs> | null
  /**
   * Omit specific fields from the WorkerServiceAssignment
   */
  omit?: Prisma.WorkerServiceAssignmentOmit<ExtArgs> | null
  /**
   * Choose, which related nodes to fetch as well
   */
  include?: Prisma.WorkerServiceAssignmentInclude<ExtArgs> | null
  /**
   * The data needed to create a WorkerServiceAssignment.
   */
  data: Prisma.XOR<Prisma.WorkerServiceAssignmentCreateInput, Prisma.WorkerServiceAssignmentUncheckedCreateInput>
}

/**
 * WorkerServiceAssignment createMany
 */
export type WorkerServiceAssignmentCreateManyArgs<ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs> = {
  /**
   * The data used to create many WorkerServiceAssignments.
   */
  data: Prisma.WorkerServiceAssignmentCreateManyInput | Prisma.WorkerServiceAssignmentCreateManyInput[]
  skipDuplicates?: boolean
}

/**
 * WorkerServiceAssignment createManyAndReturn
 */
export type WorkerServiceAssignmentCreateManyAndReturnArgs<ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs> = {
  /**
   * Select specific fields to fetch from the WorkerServiceAssignment
   */
  select?: Prisma.WorkerServiceAssignmentSelectCreateManyAndReturn<ExtArgs> | null
  /**
   * Omit specific fields from the WorkerServiceAssignment
   */
  omit?: Prisma.WorkerServiceAssignmentOmit<ExtArgs> | null
  /**
   * The data used to create many WorkerServiceAssignments.
   */
  data: Prisma.WorkerServiceAssignmentCreateManyInput | Prisma.WorkerServiceAssignmentCreateManyInput[]
  skipDuplicates?: boolean
  /**
   * Choose, which related nodes to fetch as well
   */
  include?: Prisma.WorkerServiceAssignmentIncludeCreateManyAndReturn<ExtArgs> | null
}

/**
 * WorkerServiceAssignment update
 */
export type WorkerServiceAssignmentUpdateArgs<ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs> = {
  /**
   * Select specific fields to fetch from the WorkerServiceAssignment
   */
  select?: Prisma.WorkerServiceAssignmentSelect<ExtArgs> | null
  /**
   * Omit specific fields from the WorkerServiceAssignment
   */
  omit?: Prisma.WorkerServiceAssignmentOmit<ExtArgs> | null
  /**
   * Choose, which related nodes to fetch as well
   */
  include?: Prisma.WorkerServiceAssignmentInclude<ExtArgs> | null
  /**
   * The data needed to update a WorkerServiceAssignment.
   */
  data: Prisma.XOR<Prisma.WorkerServiceAssignmentUpdateInput, Prisma.WorkerServiceAssignmentUncheckedUpdateInput>
  /**
   * Choose, which WorkerServiceAssignment to update.
   */
  where: Prisma.WorkerServiceAssignmentWhereUniqueInput
}

/**
 * WorkerServiceAssignment updateMany
 */
export type WorkerServiceAssignmentUpdateManyArgs<ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs> = {
  /**
   * The data used to update WorkerServiceAssignments.
   */
  data: Prisma.XOR<Prisma.WorkerServiceAssignmentUpdateManyMutationInput, Prisma.WorkerServiceAssignmentUncheckedUpdateManyInput>
  /**
   * Filter which WorkerServiceAssignments to update
   */
  where?: Prisma.WorkerServiceAssignmentWhereInput
  /**
   * Limit how many WorkerServiceAssignments to update.
   */
  limit?: number
}

/**
 * WorkerServiceAssignment updateManyAndReturn
 */
export type WorkerServiceAssignmentUpdateManyAndReturnArgs<ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs> = {
  /**
   * Select specific fields to fetch from the WorkerServiceAssignment
   */
  select?: Prisma.WorkerServiceAssignmentSelectUpdateManyAndReturn<ExtArgs> | null
  /**
   * Omit specific fields from the WorkerServiceAssignment
   */
  omit?: Prisma.WorkerServiceAssignmentOmit<ExtArgs> | null
  /**
   * The data used to update WorkerServiceAssignments.
   */
  data: Prisma.XOR<Prisma.WorkerServiceAssignmentUpdateManyMutationInput, Prisma.WorkerServiceAssignmentUncheckedUpdateManyInput>
  /**
   * Filter which WorkerServiceAssignments to update
   */
  where?: Prisma.WorkerServiceAssignmentWhereInput
  /**
   * Limit how many WorkerServiceAssignments to update.
   */
  limit?: number
  /**
   * Choose, which related nodes to fetch as well
   */
  include?: Prisma.WorkerServiceAssignmentIncludeUpdateManyAndReturn<ExtArgs> | null
}

/**
 * WorkerServiceAssignment upsert
 */
export type WorkerServiceAssignmentUpsertArgs<ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs> = {
  /**
   * Select specific fields to fetch from the WorkerServiceAssignment
   */
  select?: Prisma.WorkerServiceAssignmentSelect<ExtArgs> | null
  /**
   * Omit specific fields from the WorkerServiceAssignment
   */
  omit?: Prisma.WorkerServiceAssignmentOmit<ExtArgs> | null
  /**
   * Choose, which related nodes to fetch as well
   */
  include?: Prisma.WorkerServiceAssignmentInclude<ExtArgs> | null
  /**
   * The filter to search for the WorkerServiceAssignment to update in case it exists.
   */
  where: Prisma.WorkerServiceAssignmentWhereUniqueInput
  /**
   * In case the WorkerServiceAssignment found by the `where` argument doesn't exist, create a new WorkerServiceAssignment with this data.
   */
  create: Prisma.XOR<Prisma.WorkerServiceAssignmentCreateInput, Prisma.WorkerServiceAssignmentUncheckedCreateInput>
  /**
   * In case the WorkerServiceAssignment was found with the provided `where` argument, update it with this data.
   */
  update: Prisma.XOR<Prisma.WorkerServiceAssignmentUpdateInput, Prisma.WorkerServiceAssignmentUncheckedUpdateInput>
}

/**
 * WorkerServiceAssignment delete
 */
export type WorkerServiceAssignmentDeleteArgs<ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs> = {
  /**
   * Select specific fields to fetch from the WorkerServiceAssignment
   */
  select?: Prisma.WorkerServiceAssignmentSelect<ExtArgs> | null
  /**
   * Omit specific fields from the WorkerServiceAssignment
   */
  omit?: Prisma.WorkerServiceAssignmentOmit<ExtArgs> | null
  /**
   * Choose, which related nodes to fetch as well
   */
  include?: Prisma.WorkerServiceAssignmentInclude<ExtArgs> | null
  /**
   * Filter which WorkerServiceAssignment to delete.
   */
  where: Prisma.WorkerServiceAssignmentWhereUniqueInput
}

/**
 * WorkerServiceAssignment deleteMany
 */
export type WorkerServiceAssignmentDeleteManyArgs<ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs> = {
  /**
   * Filter which WorkerServiceAssignments to delete
   */
  where?: Prisma.WorkerServiceAssignmentWhereInput
  /**
   * Limit how many WorkerServiceAssignments to delete.
   */
  limit?: number
}

/**
 * WorkerServiceAssignment without action
 */
export type WorkerServiceAssignmentDefaultArgs<ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs> = {
  /**
   * Select specific fields to fetch from the WorkerServiceAssignment
   */
  select?: Prisma.WorkerServiceAssignmentSelect<ExtArgs> | null
  /**
   * Omit specific fields from the WorkerServiceAssignment
   */
  omit?: Prisma.WorkerServiceAssignmentOmit<ExtArgs> | null
  /**
   * Choose, which related nodes to fetch as well
   */
  include?: Prisma.WorkerServiceAssignmentInclude<ExtArgs> | null
}
