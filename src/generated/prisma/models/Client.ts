
/* !!! This is code generated by Prisma. Do not edit directly. !!! */
/* eslint-disable */
// @ts-nocheck 
/**
 * This file exports the `Client` model and its related types.
 *
 * ðŸŸ¢ You can import this file directly.
 */
import * as runtime from "@prisma/client/runtime/library"
import type * as $Enums from "../enums"
import type * as Prisma from "../internal/prismaNamespace"

/**
 * Model Client
 * 
 */
export type ClientModel = runtime.Types.Result.DefaultSelection<Prisma.$ClientPayload>

export type AggregateClient = {
  _count: ClientCountAggregateOutputType | null
  _min: ClientMinAggregateOutputType | null
  _max: ClientMaxAggregateOutputType | null
}

export type ClientMinAggregateOutputType = {
  id: string | null
  username: string | null
  email: string | null
  fullName: string | null
  avatar: string | null
  address: string | null
  phone: string | null
  password: string | null
  isVerified: boolean | null
  createdAt: Date | null
  updatedAt: Date | null
}

export type ClientMaxAggregateOutputType = {
  id: string | null
  username: string | null
  email: string | null
  fullName: string | null
  avatar: string | null
  address: string | null
  phone: string | null
  password: string | null
  isVerified: boolean | null
  createdAt: Date | null
  updatedAt: Date | null
}

export type ClientCountAggregateOutputType = {
  id: number
  username: number
  email: number
  fullName: number
  avatar: number
  address: number
  phone: number
  password: number
  isVerified: number
  createdAt: number
  updatedAt: number
  _all: number
}


export type ClientMinAggregateInputType = {
  id?: true
  username?: true
  email?: true
  fullName?: true
  avatar?: true
  address?: true
  phone?: true
  password?: true
  isVerified?: true
  createdAt?: true
  updatedAt?: true
}

export type ClientMaxAggregateInputType = {
  id?: true
  username?: true
  email?: true
  fullName?: true
  avatar?: true
  address?: true
  phone?: true
  password?: true
  isVerified?: true
  createdAt?: true
  updatedAt?: true
}

export type ClientCountAggregateInputType = {
  id?: true
  username?: true
  email?: true
  fullName?: true
  avatar?: true
  address?: true
  phone?: true
  password?: true
  isVerified?: true
  createdAt?: true
  updatedAt?: true
  _all?: true
}

export type ClientAggregateArgs<ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs> = {
  /**
   * Filter which Client to aggregate.
   */
  where?: Prisma.ClientWhereInput
  /**
   * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
   * 
   * Determine the order of Clients to fetch.
   */
  orderBy?: Prisma.ClientOrderByWithRelationInput | Prisma.ClientOrderByWithRelationInput[]
  /**
   * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
   * 
   * Sets the start position
   */
  cursor?: Prisma.ClientWhereUniqueInput
  /**
   * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
   * 
   * Take `Â±n` Clients from the position of the cursor.
   */
  take?: number
  /**
   * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
   * 
   * Skip the first `n` Clients.
   */
  skip?: number
  /**
   * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
   * 
   * Count returned Clients
  **/
  _count?: true | ClientCountAggregateInputType
  /**
   * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
   * 
   * Select which fields to find the minimum value
  **/
  _min?: ClientMinAggregateInputType
  /**
   * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
   * 
   * Select which fields to find the maximum value
  **/
  _max?: ClientMaxAggregateInputType
}

export type GetClientAggregateType<T extends ClientAggregateArgs> = {
      [P in keyof T & keyof AggregateClient]: P extends '_count' | 'count'
    ? T[P] extends true
      ? number
      : Prisma.GetScalarType<T[P], AggregateClient[P]>
    : Prisma.GetScalarType<T[P], AggregateClient[P]>
}




export type ClientGroupByArgs<ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs> = {
  where?: Prisma.ClientWhereInput
  orderBy?: Prisma.ClientOrderByWithAggregationInput | Prisma.ClientOrderByWithAggregationInput[]
  by: Prisma.ClientScalarFieldEnum[] | Prisma.ClientScalarFieldEnum
  having?: Prisma.ClientScalarWhereWithAggregatesInput
  take?: number
  skip?: number
  _count?: ClientCountAggregateInputType | true
  _min?: ClientMinAggregateInputType
  _max?: ClientMaxAggregateInputType
}

export type ClientGroupByOutputType = {
  id: string
  username: string
  email: string
  fullName: string | null
  avatar: string | null
  address: string | null
  phone: string | null
  password: string
  isVerified: boolean
  createdAt: Date
  updatedAt: Date
  _count: ClientCountAggregateOutputType | null
  _min: ClientMinAggregateOutputType | null
  _max: ClientMaxAggregateOutputType | null
}

type GetClientGroupByPayload<T extends ClientGroupByArgs> = Prisma.PrismaPromise<
  Array<
    Prisma.PickEnumerable<ClientGroupByOutputType, T['by']> &
      {
        [P in ((keyof T) & (keyof ClientGroupByOutputType))]: P extends '_count'
          ? T[P] extends boolean
            ? number
            : Prisma.GetScalarType<T[P], ClientGroupByOutputType[P]>
          : Prisma.GetScalarType<T[P], ClientGroupByOutputType[P]>
      }
    >
  > 



export type ClientWhereInput = {
  AND?: Prisma.ClientWhereInput | Prisma.ClientWhereInput[]
  OR?: Prisma.ClientWhereInput[]
  NOT?: Prisma.ClientWhereInput | Prisma.ClientWhereInput[]
  id?: Prisma.StringFilter<"Client"> | string
  username?: Prisma.StringFilter<"Client"> | string
  email?: Prisma.StringFilter<"Client"> | string
  fullName?: Prisma.StringNullableFilter<"Client"> | string | null
  avatar?: Prisma.StringNullableFilter<"Client"> | string | null
  address?: Prisma.StringNullableFilter<"Client"> | string | null
  phone?: Prisma.StringNullableFilter<"Client"> | string | null
  password?: Prisma.StringFilter<"Client"> | string
  isVerified?: Prisma.BoolFilter<"Client"> | boolean
  createdAt?: Prisma.DateTimeFilter<"Client"> | Date | string
  updatedAt?: Prisma.DateTimeFilter<"Client"> | Date | string
  kyc?: Prisma.XOR<Prisma.KYCNullableScalarRelationFilter, Prisma.KYCWhereInput> | null
  orders?: Prisma.OrderListRelationFilter
  reviews?: Prisma.ReviewListRelationFilter
  recharges?: Prisma.AccountRechargeListRelationFilter
  freelanceOrders?: Prisma.FreelanceOrderListRelationFilter
  referralsMade?: Prisma.ReferralListRelationFilter
  referralsReceived?: Prisma.ReferralListRelationFilter
  postTransactions?: Prisma.PostTransactionListRelationFilter
  chatParticipants?: Prisma.ChatParticipantListRelationFilter
}

export type ClientOrderByWithRelationInput = {
  id?: Prisma.SortOrder
  username?: Prisma.SortOrder
  email?: Prisma.SortOrder
  fullName?: Prisma.SortOrderInput | Prisma.SortOrder
  avatar?: Prisma.SortOrderInput | Prisma.SortOrder
  address?: Prisma.SortOrderInput | Prisma.SortOrder
  phone?: Prisma.SortOrderInput | Prisma.SortOrder
  password?: Prisma.SortOrder
  isVerified?: Prisma.SortOrder
  createdAt?: Prisma.SortOrder
  updatedAt?: Prisma.SortOrder
  kyc?: Prisma.KYCOrderByWithRelationInput
  orders?: Prisma.OrderOrderByRelationAggregateInput
  reviews?: Prisma.ReviewOrderByRelationAggregateInput
  recharges?: Prisma.AccountRechargeOrderByRelationAggregateInput
  freelanceOrders?: Prisma.FreelanceOrderOrderByRelationAggregateInput
  referralsMade?: Prisma.ReferralOrderByRelationAggregateInput
  referralsReceived?: Prisma.ReferralOrderByRelationAggregateInput
  postTransactions?: Prisma.PostTransactionOrderByRelationAggregateInput
  chatParticipants?: Prisma.ChatParticipantOrderByRelationAggregateInput
}

export type ClientWhereUniqueInput = Prisma.AtLeast<{
  id?: string
  username?: string
  email?: string
  AND?: Prisma.ClientWhereInput | Prisma.ClientWhereInput[]
  OR?: Prisma.ClientWhereInput[]
  NOT?: Prisma.ClientWhereInput | Prisma.ClientWhereInput[]
  fullName?: Prisma.StringNullableFilter<"Client"> | string | null
  avatar?: Prisma.StringNullableFilter<"Client"> | string | null
  address?: Prisma.StringNullableFilter<"Client"> | string | null
  phone?: Prisma.StringNullableFilter<"Client"> | string | null
  password?: Prisma.StringFilter<"Client"> | string
  isVerified?: Prisma.BoolFilter<"Client"> | boolean
  createdAt?: Prisma.DateTimeFilter<"Client"> | Date | string
  updatedAt?: Prisma.DateTimeFilter<"Client"> | Date | string
  kyc?: Prisma.XOR<Prisma.KYCNullableScalarRelationFilter, Prisma.KYCWhereInput> | null
  orders?: Prisma.OrderListRelationFilter
  reviews?: Prisma.ReviewListRelationFilter
  recharges?: Prisma.AccountRechargeListRelationFilter
  freelanceOrders?: Prisma.FreelanceOrderListRelationFilter
  referralsMade?: Prisma.ReferralListRelationFilter
  referralsReceived?: Prisma.ReferralListRelationFilter
  postTransactions?: Prisma.PostTransactionListRelationFilter
  chatParticipants?: Prisma.ChatParticipantListRelationFilter
}, "id" | "username" | "email">

export type ClientOrderByWithAggregationInput = {
  id?: Prisma.SortOrder
  username?: Prisma.SortOrder
  email?: Prisma.SortOrder
  fullName?: Prisma.SortOrderInput | Prisma.SortOrder
  avatar?: Prisma.SortOrderInput | Prisma.SortOrder
  address?: Prisma.SortOrderInput | Prisma.SortOrder
  phone?: Prisma.SortOrderInput | Prisma.SortOrder
  password?: Prisma.SortOrder
  isVerified?: Prisma.SortOrder
  createdAt?: Prisma.SortOrder
  updatedAt?: Prisma.SortOrder
  _count?: Prisma.ClientCountOrderByAggregateInput
  _max?: Prisma.ClientMaxOrderByAggregateInput
  _min?: Prisma.ClientMinOrderByAggregateInput
}

export type ClientScalarWhereWithAggregatesInput = {
  AND?: Prisma.ClientScalarWhereWithAggregatesInput | Prisma.ClientScalarWhereWithAggregatesInput[]
  OR?: Prisma.ClientScalarWhereWithAggregatesInput[]
  NOT?: Prisma.ClientScalarWhereWithAggregatesInput | Prisma.ClientScalarWhereWithAggregatesInput[]
  id?: Prisma.StringWithAggregatesFilter<"Client"> | string
  username?: Prisma.StringWithAggregatesFilter<"Client"> | string
  email?: Prisma.StringWithAggregatesFilter<"Client"> | string
  fullName?: Prisma.StringNullableWithAggregatesFilter<"Client"> | string | null
  avatar?: Prisma.StringNullableWithAggregatesFilter<"Client"> | string | null
  address?: Prisma.StringNullableWithAggregatesFilter<"Client"> | string | null
  phone?: Prisma.StringNullableWithAggregatesFilter<"Client"> | string | null
  password?: Prisma.StringWithAggregatesFilter<"Client"> | string
  isVerified?: Prisma.BoolWithAggregatesFilter<"Client"> | boolean
  createdAt?: Prisma.DateTimeWithAggregatesFilter<"Client"> | Date | string
  updatedAt?: Prisma.DateTimeWithAggregatesFilter<"Client"> | Date | string
}

export type ClientCreateInput = {
  id?: string
  username: string
  email: string
  fullName?: string | null
  avatar?: string | null
  address?: string | null
  phone?: string | null
  password: string
  isVerified?: boolean
  createdAt?: Date | string
  updatedAt?: Date | string
  kyc?: Prisma.KYCCreateNestedOneWithoutClientInput
  orders?: Prisma.OrderCreateNestedManyWithoutClientInput
  reviews?: Prisma.ReviewCreateNestedManyWithoutClientInput
  recharges?: Prisma.AccountRechargeCreateNestedManyWithoutClientInput
  freelanceOrders?: Prisma.FreelanceOrderCreateNestedManyWithoutClientInput
  referralsMade?: Prisma.ReferralCreateNestedManyWithoutAffiliateClientInput
  referralsReceived?: Prisma.ReferralCreateNestedManyWithoutReferredClientInput
  postTransactions?: Prisma.PostTransactionCreateNestedManyWithoutClientInput
  chatParticipants?: Prisma.ChatParticipantCreateNestedManyWithoutClientInput
}

export type ClientUncheckedCreateInput = {
  id?: string
  username: string
  email: string
  fullName?: string | null
  avatar?: string | null
  address?: string | null
  phone?: string | null
  password: string
  isVerified?: boolean
  createdAt?: Date | string
  updatedAt?: Date | string
  kyc?: Prisma.KYCUncheckedCreateNestedOneWithoutClientInput
  orders?: Prisma.OrderUncheckedCreateNestedManyWithoutClientInput
  reviews?: Prisma.ReviewUncheckedCreateNestedManyWithoutClientInput
  recharges?: Prisma.AccountRechargeUncheckedCreateNestedManyWithoutClientInput
  freelanceOrders?: Prisma.FreelanceOrderUncheckedCreateNestedManyWithoutClientInput
  referralsMade?: Prisma.ReferralUncheckedCreateNestedManyWithoutAffiliateClientInput
  referralsReceived?: Prisma.ReferralUncheckedCreateNestedManyWithoutReferredClientInput
  postTransactions?: Prisma.PostTransactionUncheckedCreateNestedManyWithoutClientInput
  chatParticipants?: Prisma.ChatParticipantUncheckedCreateNestedManyWithoutClientInput
}

export type ClientUpdateInput = {
  id?: Prisma.StringFieldUpdateOperationsInput | string
  username?: Prisma.StringFieldUpdateOperationsInput | string
  email?: Prisma.StringFieldUpdateOperationsInput | string
  fullName?: Prisma.NullableStringFieldUpdateOperationsInput | string | null
  avatar?: Prisma.NullableStringFieldUpdateOperationsInput | string | null
  address?: Prisma.NullableStringFieldUpdateOperationsInput | string | null
  phone?: Prisma.NullableStringFieldUpdateOperationsInput | string | null
  password?: Prisma.StringFieldUpdateOperationsInput | string
  isVerified?: Prisma.BoolFieldUpdateOperationsInput | boolean
  createdAt?: Prisma.DateTimeFieldUpdateOperationsInput | Date | string
  updatedAt?: Prisma.DateTimeFieldUpdateOperationsInput | Date | string
  kyc?: Prisma.KYCUpdateOneWithoutClientNestedInput
  orders?: Prisma.OrderUpdateManyWithoutClientNestedInput
  reviews?: Prisma.ReviewUpdateManyWithoutClientNestedInput
  recharges?: Prisma.AccountRechargeUpdateManyWithoutClientNestedInput
  freelanceOrders?: Prisma.FreelanceOrderUpdateManyWithoutClientNestedInput
  referralsMade?: Prisma.ReferralUpdateManyWithoutAffiliateClientNestedInput
  referralsReceived?: Prisma.ReferralUpdateManyWithoutReferredClientNestedInput
  postTransactions?: Prisma.PostTransactionUpdateManyWithoutClientNestedInput
  chatParticipants?: Prisma.ChatParticipantUpdateManyWithoutClientNestedInput
}

export type ClientUncheckedUpdateInput = {
  id?: Prisma.StringFieldUpdateOperationsInput | string
  username?: Prisma.StringFieldUpdateOperationsInput | string
  email?: Prisma.StringFieldUpdateOperationsInput | string
  fullName?: Prisma.NullableStringFieldUpdateOperationsInput | string | null
  avatar?: Prisma.NullableStringFieldUpdateOperationsInput | string | null
  address?: Prisma.NullableStringFieldUpdateOperationsInput | string | null
  phone?: Prisma.NullableStringFieldUpdateOperationsInput | string | null
  password?: Prisma.StringFieldUpdateOperationsInput | string
  isVerified?: Prisma.BoolFieldUpdateOperationsInput | boolean
  createdAt?: Prisma.DateTimeFieldUpdateOperationsInput | Date | string
  updatedAt?: Prisma.DateTimeFieldUpdateOperationsInput | Date | string
  kyc?: Prisma.KYCUncheckedUpdateOneWithoutClientNestedInput
  orders?: Prisma.OrderUncheckedUpdateManyWithoutClientNestedInput
  reviews?: Prisma.ReviewUncheckedUpdateManyWithoutClientNestedInput
  recharges?: Prisma.AccountRechargeUncheckedUpdateManyWithoutClientNestedInput
  freelanceOrders?: Prisma.FreelanceOrderUncheckedUpdateManyWithoutClientNestedInput
  referralsMade?: Prisma.ReferralUncheckedUpdateManyWithoutAffiliateClientNestedInput
  referralsReceived?: Prisma.ReferralUncheckedUpdateManyWithoutReferredClientNestedInput
  postTransactions?: Prisma.PostTransactionUncheckedUpdateManyWithoutClientNestedInput
  chatParticipants?: Prisma.ChatParticipantUncheckedUpdateManyWithoutClientNestedInput
}

export type ClientCreateManyInput = {
  id?: string
  username: string
  email: string
  fullName?: string | null
  avatar?: string | null
  address?: string | null
  phone?: string | null
  password: string
  isVerified?: boolean
  createdAt?: Date | string
  updatedAt?: Date | string
}

export type ClientUpdateManyMutationInput = {
  id?: Prisma.StringFieldUpdateOperationsInput | string
  username?: Prisma.StringFieldUpdateOperationsInput | string
  email?: Prisma.StringFieldUpdateOperationsInput | string
  fullName?: Prisma.NullableStringFieldUpdateOperationsInput | string | null
  avatar?: Prisma.NullableStringFieldUpdateOperationsInput | string | null
  address?: Prisma.NullableStringFieldUpdateOperationsInput | string | null
  phone?: Prisma.NullableStringFieldUpdateOperationsInput | string | null
  password?: Prisma.StringFieldUpdateOperationsInput | string
  isVerified?: Prisma.BoolFieldUpdateOperationsInput | boolean
  createdAt?: Prisma.DateTimeFieldUpdateOperationsInput | Date | string
  updatedAt?: Prisma.DateTimeFieldUpdateOperationsInput | Date | string
}

export type ClientUncheckedUpdateManyInput = {
  id?: Prisma.StringFieldUpdateOperationsInput | string
  username?: Prisma.StringFieldUpdateOperationsInput | string
  email?: Prisma.StringFieldUpdateOperationsInput | string
  fullName?: Prisma.NullableStringFieldUpdateOperationsInput | string | null
  avatar?: Prisma.NullableStringFieldUpdateOperationsInput | string | null
  address?: Prisma.NullableStringFieldUpdateOperationsInput | string | null
  phone?: Prisma.NullableStringFieldUpdateOperationsInput | string | null
  password?: Prisma.StringFieldUpdateOperationsInput | string
  isVerified?: Prisma.BoolFieldUpdateOperationsInput | boolean
  createdAt?: Prisma.DateTimeFieldUpdateOperationsInput | Date | string
  updatedAt?: Prisma.DateTimeFieldUpdateOperationsInput | Date | string
}

export type ClientCountOrderByAggregateInput = {
  id?: Prisma.SortOrder
  username?: Prisma.SortOrder
  email?: Prisma.SortOrder
  fullName?: Prisma.SortOrder
  avatar?: Prisma.SortOrder
  address?: Prisma.SortOrder
  phone?: Prisma.SortOrder
  password?: Prisma.SortOrder
  isVerified?: Prisma.SortOrder
  createdAt?: Prisma.SortOrder
  updatedAt?: Prisma.SortOrder
}

export type ClientMaxOrderByAggregateInput = {
  id?: Prisma.SortOrder
  username?: Prisma.SortOrder
  email?: Prisma.SortOrder
  fullName?: Prisma.SortOrder
  avatar?: Prisma.SortOrder
  address?: Prisma.SortOrder
  phone?: Prisma.SortOrder
  password?: Prisma.SortOrder
  isVerified?: Prisma.SortOrder
  createdAt?: Prisma.SortOrder
  updatedAt?: Prisma.SortOrder
}

export type ClientMinOrderByAggregateInput = {
  id?: Prisma.SortOrder
  username?: Prisma.SortOrder
  email?: Prisma.SortOrder
  fullName?: Prisma.SortOrder
  avatar?: Prisma.SortOrder
  address?: Prisma.SortOrder
  phone?: Prisma.SortOrder
  password?: Prisma.SortOrder
  isVerified?: Prisma.SortOrder
  createdAt?: Prisma.SortOrder
  updatedAt?: Prisma.SortOrder
}

export type ClientScalarRelationFilter = {
  is?: Prisma.ClientWhereInput
  isNot?: Prisma.ClientWhereInput
}

export type ClientNullableScalarRelationFilter = {
  is?: Prisma.ClientWhereInput | null
  isNot?: Prisma.ClientWhereInput | null
}

export type ClientCreateNestedOneWithoutOrdersInput = {
  create?: Prisma.XOR<Prisma.ClientCreateWithoutOrdersInput, Prisma.ClientUncheckedCreateWithoutOrdersInput>
  connectOrCreate?: Prisma.ClientCreateOrConnectWithoutOrdersInput
  connect?: Prisma.ClientWhereUniqueInput
}

export type ClientUpdateOneRequiredWithoutOrdersNestedInput = {
  create?: Prisma.XOR<Prisma.ClientCreateWithoutOrdersInput, Prisma.ClientUncheckedCreateWithoutOrdersInput>
  connectOrCreate?: Prisma.ClientCreateOrConnectWithoutOrdersInput
  upsert?: Prisma.ClientUpsertWithoutOrdersInput
  connect?: Prisma.ClientWhereUniqueInput
  update?: Prisma.XOR<Prisma.XOR<Prisma.ClientUpdateToOneWithWhereWithoutOrdersInput, Prisma.ClientUpdateWithoutOrdersInput>, Prisma.ClientUncheckedUpdateWithoutOrdersInput>
}

export type ClientCreateNestedOneWithoutReviewsInput = {
  create?: Prisma.XOR<Prisma.ClientCreateWithoutReviewsInput, Prisma.ClientUncheckedCreateWithoutReviewsInput>
  connectOrCreate?: Prisma.ClientCreateOrConnectWithoutReviewsInput
  connect?: Prisma.ClientWhereUniqueInput
}

export type ClientUpdateOneRequiredWithoutReviewsNestedInput = {
  create?: Prisma.XOR<Prisma.ClientCreateWithoutReviewsInput, Prisma.ClientUncheckedCreateWithoutReviewsInput>
  connectOrCreate?: Prisma.ClientCreateOrConnectWithoutReviewsInput
  upsert?: Prisma.ClientUpsertWithoutReviewsInput
  connect?: Prisma.ClientWhereUniqueInput
  update?: Prisma.XOR<Prisma.XOR<Prisma.ClientUpdateToOneWithWhereWithoutReviewsInput, Prisma.ClientUpdateWithoutReviewsInput>, Prisma.ClientUncheckedUpdateWithoutReviewsInput>
}

export type ClientCreateNestedOneWithoutChatParticipantsInput = {
  create?: Prisma.XOR<Prisma.ClientCreateWithoutChatParticipantsInput, Prisma.ClientUncheckedCreateWithoutChatParticipantsInput>
  connectOrCreate?: Prisma.ClientCreateOrConnectWithoutChatParticipantsInput
  connect?: Prisma.ClientWhereUniqueInput
}

export type ClientUpdateOneWithoutChatParticipantsNestedInput = {
  create?: Prisma.XOR<Prisma.ClientCreateWithoutChatParticipantsInput, Prisma.ClientUncheckedCreateWithoutChatParticipantsInput>
  connectOrCreate?: Prisma.ClientCreateOrConnectWithoutChatParticipantsInput
  upsert?: Prisma.ClientUpsertWithoutChatParticipantsInput
  disconnect?: Prisma.ClientWhereInput | boolean
  delete?: Prisma.ClientWhereInput | boolean
  connect?: Prisma.ClientWhereUniqueInput
  update?: Prisma.XOR<Prisma.XOR<Prisma.ClientUpdateToOneWithWhereWithoutChatParticipantsInput, Prisma.ClientUpdateWithoutChatParticipantsInput>, Prisma.ClientUncheckedUpdateWithoutChatParticipantsInput>
}

export type ClientCreateNestedOneWithoutKycInput = {
  create?: Prisma.XOR<Prisma.ClientCreateWithoutKycInput, Prisma.ClientUncheckedCreateWithoutKycInput>
  connectOrCreate?: Prisma.ClientCreateOrConnectWithoutKycInput
  connect?: Prisma.ClientWhereUniqueInput
}

export type ClientUpdateOneWithoutKycNestedInput = {
  create?: Prisma.XOR<Prisma.ClientCreateWithoutKycInput, Prisma.ClientUncheckedCreateWithoutKycInput>
  connectOrCreate?: Prisma.ClientCreateOrConnectWithoutKycInput
  upsert?: Prisma.ClientUpsertWithoutKycInput
  disconnect?: Prisma.ClientWhereInput | boolean
  delete?: Prisma.ClientWhereInput | boolean
  connect?: Prisma.ClientWhereUniqueInput
  update?: Prisma.XOR<Prisma.XOR<Prisma.ClientUpdateToOneWithWhereWithoutKycInput, Prisma.ClientUpdateWithoutKycInput>, Prisma.ClientUncheckedUpdateWithoutKycInput>
}

export type ClientCreateNestedOneWithoutRechargesInput = {
  create?: Prisma.XOR<Prisma.ClientCreateWithoutRechargesInput, Prisma.ClientUncheckedCreateWithoutRechargesInput>
  connectOrCreate?: Prisma.ClientCreateOrConnectWithoutRechargesInput
  connect?: Prisma.ClientWhereUniqueInput
}

export type ClientUpdateOneWithoutRechargesNestedInput = {
  create?: Prisma.XOR<Prisma.ClientCreateWithoutRechargesInput, Prisma.ClientUncheckedCreateWithoutRechargesInput>
  connectOrCreate?: Prisma.ClientCreateOrConnectWithoutRechargesInput
  upsert?: Prisma.ClientUpsertWithoutRechargesInput
  disconnect?: Prisma.ClientWhereInput | boolean
  delete?: Prisma.ClientWhereInput | boolean
  connect?: Prisma.ClientWhereUniqueInput
  update?: Prisma.XOR<Prisma.XOR<Prisma.ClientUpdateToOneWithWhereWithoutRechargesInput, Prisma.ClientUpdateWithoutRechargesInput>, Prisma.ClientUncheckedUpdateWithoutRechargesInput>
}

export type ClientCreateNestedOneWithoutFreelanceOrdersInput = {
  create?: Prisma.XOR<Prisma.ClientCreateWithoutFreelanceOrdersInput, Prisma.ClientUncheckedCreateWithoutFreelanceOrdersInput>
  connectOrCreate?: Prisma.ClientCreateOrConnectWithoutFreelanceOrdersInput
  connect?: Prisma.ClientWhereUniqueInput
}

export type ClientUpdateOneRequiredWithoutFreelanceOrdersNestedInput = {
  create?: Prisma.XOR<Prisma.ClientCreateWithoutFreelanceOrdersInput, Prisma.ClientUncheckedCreateWithoutFreelanceOrdersInput>
  connectOrCreate?: Prisma.ClientCreateOrConnectWithoutFreelanceOrdersInput
  upsert?: Prisma.ClientUpsertWithoutFreelanceOrdersInput
  connect?: Prisma.ClientWhereUniqueInput
  update?: Prisma.XOR<Prisma.XOR<Prisma.ClientUpdateToOneWithWhereWithoutFreelanceOrdersInput, Prisma.ClientUpdateWithoutFreelanceOrdersInput>, Prisma.ClientUncheckedUpdateWithoutFreelanceOrdersInput>
}

export type ClientCreateNestedOneWithoutReferralsMadeInput = {
  create?: Prisma.XOR<Prisma.ClientCreateWithoutReferralsMadeInput, Prisma.ClientUncheckedCreateWithoutReferralsMadeInput>
  connectOrCreate?: Prisma.ClientCreateOrConnectWithoutReferralsMadeInput
  connect?: Prisma.ClientWhereUniqueInput
}

export type ClientCreateNestedOneWithoutReferralsReceivedInput = {
  create?: Prisma.XOR<Prisma.ClientCreateWithoutReferralsReceivedInput, Prisma.ClientUncheckedCreateWithoutReferralsReceivedInput>
  connectOrCreate?: Prisma.ClientCreateOrConnectWithoutReferralsReceivedInput
  connect?: Prisma.ClientWhereUniqueInput
}

export type ClientUpdateOneWithoutReferralsMadeNestedInput = {
  create?: Prisma.XOR<Prisma.ClientCreateWithoutReferralsMadeInput, Prisma.ClientUncheckedCreateWithoutReferralsMadeInput>
  connectOrCreate?: Prisma.ClientCreateOrConnectWithoutReferralsMadeInput
  upsert?: Prisma.ClientUpsertWithoutReferralsMadeInput
  disconnect?: Prisma.ClientWhereInput | boolean
  delete?: Prisma.ClientWhereInput | boolean
  connect?: Prisma.ClientWhereUniqueInput
  update?: Prisma.XOR<Prisma.XOR<Prisma.ClientUpdateToOneWithWhereWithoutReferralsMadeInput, Prisma.ClientUpdateWithoutReferralsMadeInput>, Prisma.ClientUncheckedUpdateWithoutReferralsMadeInput>
}

export type ClientUpdateOneWithoutReferralsReceivedNestedInput = {
  create?: Prisma.XOR<Prisma.ClientCreateWithoutReferralsReceivedInput, Prisma.ClientUncheckedCreateWithoutReferralsReceivedInput>
  connectOrCreate?: Prisma.ClientCreateOrConnectWithoutReferralsReceivedInput
  upsert?: Prisma.ClientUpsertWithoutReferralsReceivedInput
  disconnect?: Prisma.ClientWhereInput | boolean
  delete?: Prisma.ClientWhereInput | boolean
  connect?: Prisma.ClientWhereUniqueInput
  update?: Prisma.XOR<Prisma.XOR<Prisma.ClientUpdateToOneWithWhereWithoutReferralsReceivedInput, Prisma.ClientUpdateWithoutReferralsReceivedInput>, Prisma.ClientUncheckedUpdateWithoutReferralsReceivedInput>
}

export type ClientCreateNestedOneWithoutPostTransactionsInput = {
  create?: Prisma.XOR<Prisma.ClientCreateWithoutPostTransactionsInput, Prisma.ClientUncheckedCreateWithoutPostTransactionsInput>
  connectOrCreate?: Prisma.ClientCreateOrConnectWithoutPostTransactionsInput
  connect?: Prisma.ClientWhereUniqueInput
}

export type ClientUpdateOneRequiredWithoutPostTransactionsNestedInput = {
  create?: Prisma.XOR<Prisma.ClientCreateWithoutPostTransactionsInput, Prisma.ClientUncheckedCreateWithoutPostTransactionsInput>
  connectOrCreate?: Prisma.ClientCreateOrConnectWithoutPostTransactionsInput
  upsert?: Prisma.ClientUpsertWithoutPostTransactionsInput
  connect?: Prisma.ClientWhereUniqueInput
  update?: Prisma.XOR<Prisma.XOR<Prisma.ClientUpdateToOneWithWhereWithoutPostTransactionsInput, Prisma.ClientUpdateWithoutPostTransactionsInput>, Prisma.ClientUncheckedUpdateWithoutPostTransactionsInput>
}

export type ClientCreateWithoutOrdersInput = {
  id?: string
  username: string
  email: string
  fullName?: string | null
  avatar?: string | null
  address?: string | null
  phone?: string | null
  password: string
  isVerified?: boolean
  createdAt?: Date | string
  updatedAt?: Date | string
  kyc?: Prisma.KYCCreateNestedOneWithoutClientInput
  reviews?: Prisma.ReviewCreateNestedManyWithoutClientInput
  recharges?: Prisma.AccountRechargeCreateNestedManyWithoutClientInput
  freelanceOrders?: Prisma.FreelanceOrderCreateNestedManyWithoutClientInput
  referralsMade?: Prisma.ReferralCreateNestedManyWithoutAffiliateClientInput
  referralsReceived?: Prisma.ReferralCreateNestedManyWithoutReferredClientInput
  postTransactions?: Prisma.PostTransactionCreateNestedManyWithoutClientInput
  chatParticipants?: Prisma.ChatParticipantCreateNestedManyWithoutClientInput
}

export type ClientUncheckedCreateWithoutOrdersInput = {
  id?: string
  username: string
  email: string
  fullName?: string | null
  avatar?: string | null
  address?: string | null
  phone?: string | null
  password: string
  isVerified?: boolean
  createdAt?: Date | string
  updatedAt?: Date | string
  kyc?: Prisma.KYCUncheckedCreateNestedOneWithoutClientInput
  reviews?: Prisma.ReviewUncheckedCreateNestedManyWithoutClientInput
  recharges?: Prisma.AccountRechargeUncheckedCreateNestedManyWithoutClientInput
  freelanceOrders?: Prisma.FreelanceOrderUncheckedCreateNestedManyWithoutClientInput
  referralsMade?: Prisma.ReferralUncheckedCreateNestedManyWithoutAffiliateClientInput
  referralsReceived?: Prisma.ReferralUncheckedCreateNestedManyWithoutReferredClientInput
  postTransactions?: Prisma.PostTransactionUncheckedCreateNestedManyWithoutClientInput
  chatParticipants?: Prisma.ChatParticipantUncheckedCreateNestedManyWithoutClientInput
}

export type ClientCreateOrConnectWithoutOrdersInput = {
  where: Prisma.ClientWhereUniqueInput
  create: Prisma.XOR<Prisma.ClientCreateWithoutOrdersInput, Prisma.ClientUncheckedCreateWithoutOrdersInput>
}

export type ClientUpsertWithoutOrdersInput = {
  update: Prisma.XOR<Prisma.ClientUpdateWithoutOrdersInput, Prisma.ClientUncheckedUpdateWithoutOrdersInput>
  create: Prisma.XOR<Prisma.ClientCreateWithoutOrdersInput, Prisma.ClientUncheckedCreateWithoutOrdersInput>
  where?: Prisma.ClientWhereInput
}

export type ClientUpdateToOneWithWhereWithoutOrdersInput = {
  where?: Prisma.ClientWhereInput
  data: Prisma.XOR<Prisma.ClientUpdateWithoutOrdersInput, Prisma.ClientUncheckedUpdateWithoutOrdersInput>
}

export type ClientUpdateWithoutOrdersInput = {
  id?: Prisma.StringFieldUpdateOperationsInput | string
  username?: Prisma.StringFieldUpdateOperationsInput | string
  email?: Prisma.StringFieldUpdateOperationsInput | string
  fullName?: Prisma.NullableStringFieldUpdateOperationsInput | string | null
  avatar?: Prisma.NullableStringFieldUpdateOperationsInput | string | null
  address?: Prisma.NullableStringFieldUpdateOperationsInput | string | null
  phone?: Prisma.NullableStringFieldUpdateOperationsInput | string | null
  password?: Prisma.StringFieldUpdateOperationsInput | string
  isVerified?: Prisma.BoolFieldUpdateOperationsInput | boolean
  createdAt?: Prisma.DateTimeFieldUpdateOperationsInput | Date | string
  updatedAt?: Prisma.DateTimeFieldUpdateOperationsInput | Date | string
  kyc?: Prisma.KYCUpdateOneWithoutClientNestedInput
  reviews?: Prisma.ReviewUpdateManyWithoutClientNestedInput
  recharges?: Prisma.AccountRechargeUpdateManyWithoutClientNestedInput
  freelanceOrders?: Prisma.FreelanceOrderUpdateManyWithoutClientNestedInput
  referralsMade?: Prisma.ReferralUpdateManyWithoutAffiliateClientNestedInput
  referralsReceived?: Prisma.ReferralUpdateManyWithoutReferredClientNestedInput
  postTransactions?: Prisma.PostTransactionUpdateManyWithoutClientNestedInput
  chatParticipants?: Prisma.ChatParticipantUpdateManyWithoutClientNestedInput
}

export type ClientUncheckedUpdateWithoutOrdersInput = {
  id?: Prisma.StringFieldUpdateOperationsInput | string
  username?: Prisma.StringFieldUpdateOperationsInput | string
  email?: Prisma.StringFieldUpdateOperationsInput | string
  fullName?: Prisma.NullableStringFieldUpdateOperationsInput | string | null
  avatar?: Prisma.NullableStringFieldUpdateOperationsInput | string | null
  address?: Prisma.NullableStringFieldUpdateOperationsInput | string | null
  phone?: Prisma.NullableStringFieldUpdateOperationsInput | string | null
  password?: Prisma.StringFieldUpdateOperationsInput | string
  isVerified?: Prisma.BoolFieldUpdateOperationsInput | boolean
  createdAt?: Prisma.DateTimeFieldUpdateOperationsInput | Date | string
  updatedAt?: Prisma.DateTimeFieldUpdateOperationsInput | Date | string
  kyc?: Prisma.KYCUncheckedUpdateOneWithoutClientNestedInput
  reviews?: Prisma.ReviewUncheckedUpdateManyWithoutClientNestedInput
  recharges?: Prisma.AccountRechargeUncheckedUpdateManyWithoutClientNestedInput
  freelanceOrders?: Prisma.FreelanceOrderUncheckedUpdateManyWithoutClientNestedInput
  referralsMade?: Prisma.ReferralUncheckedUpdateManyWithoutAffiliateClientNestedInput
  referralsReceived?: Prisma.ReferralUncheckedUpdateManyWithoutReferredClientNestedInput
  postTransactions?: Prisma.PostTransactionUncheckedUpdateManyWithoutClientNestedInput
  chatParticipants?: Prisma.ChatParticipantUncheckedUpdateManyWithoutClientNestedInput
}

export type ClientCreateWithoutReviewsInput = {
  id?: string
  username: string
  email: string
  fullName?: string | null
  avatar?: string | null
  address?: string | null
  phone?: string | null
  password: string
  isVerified?: boolean
  createdAt?: Date | string
  updatedAt?: Date | string
  kyc?: Prisma.KYCCreateNestedOneWithoutClientInput
  orders?: Prisma.OrderCreateNestedManyWithoutClientInput
  recharges?: Prisma.AccountRechargeCreateNestedManyWithoutClientInput
  freelanceOrders?: Prisma.FreelanceOrderCreateNestedManyWithoutClientInput
  referralsMade?: Prisma.ReferralCreateNestedManyWithoutAffiliateClientInput
  referralsReceived?: Prisma.ReferralCreateNestedManyWithoutReferredClientInput
  postTransactions?: Prisma.PostTransactionCreateNestedManyWithoutClientInput
  chatParticipants?: Prisma.ChatParticipantCreateNestedManyWithoutClientInput
}

export type ClientUncheckedCreateWithoutReviewsInput = {
  id?: string
  username: string
  email: string
  fullName?: string | null
  avatar?: string | null
  address?: string | null
  phone?: string | null
  password: string
  isVerified?: boolean
  createdAt?: Date | string
  updatedAt?: Date | string
  kyc?: Prisma.KYCUncheckedCreateNestedOneWithoutClientInput
  orders?: Prisma.OrderUncheckedCreateNestedManyWithoutClientInput
  recharges?: Prisma.AccountRechargeUncheckedCreateNestedManyWithoutClientInput
  freelanceOrders?: Prisma.FreelanceOrderUncheckedCreateNestedManyWithoutClientInput
  referralsMade?: Prisma.ReferralUncheckedCreateNestedManyWithoutAffiliateClientInput
  referralsReceived?: Prisma.ReferralUncheckedCreateNestedManyWithoutReferredClientInput
  postTransactions?: Prisma.PostTransactionUncheckedCreateNestedManyWithoutClientInput
  chatParticipants?: Prisma.ChatParticipantUncheckedCreateNestedManyWithoutClientInput
}

export type ClientCreateOrConnectWithoutReviewsInput = {
  where: Prisma.ClientWhereUniqueInput
  create: Prisma.XOR<Prisma.ClientCreateWithoutReviewsInput, Prisma.ClientUncheckedCreateWithoutReviewsInput>
}

export type ClientUpsertWithoutReviewsInput = {
  update: Prisma.XOR<Prisma.ClientUpdateWithoutReviewsInput, Prisma.ClientUncheckedUpdateWithoutReviewsInput>
  create: Prisma.XOR<Prisma.ClientCreateWithoutReviewsInput, Prisma.ClientUncheckedCreateWithoutReviewsInput>
  where?: Prisma.ClientWhereInput
}

export type ClientUpdateToOneWithWhereWithoutReviewsInput = {
  where?: Prisma.ClientWhereInput
  data: Prisma.XOR<Prisma.ClientUpdateWithoutReviewsInput, Prisma.ClientUncheckedUpdateWithoutReviewsInput>
}

export type ClientUpdateWithoutReviewsInput = {
  id?: Prisma.StringFieldUpdateOperationsInput | string
  username?: Prisma.StringFieldUpdateOperationsInput | string
  email?: Prisma.StringFieldUpdateOperationsInput | string
  fullName?: Prisma.NullableStringFieldUpdateOperationsInput | string | null
  avatar?: Prisma.NullableStringFieldUpdateOperationsInput | string | null
  address?: Prisma.NullableStringFieldUpdateOperationsInput | string | null
  phone?: Prisma.NullableStringFieldUpdateOperationsInput | string | null
  password?: Prisma.StringFieldUpdateOperationsInput | string
  isVerified?: Prisma.BoolFieldUpdateOperationsInput | boolean
  createdAt?: Prisma.DateTimeFieldUpdateOperationsInput | Date | string
  updatedAt?: Prisma.DateTimeFieldUpdateOperationsInput | Date | string
  kyc?: Prisma.KYCUpdateOneWithoutClientNestedInput
  orders?: Prisma.OrderUpdateManyWithoutClientNestedInput
  recharges?: Prisma.AccountRechargeUpdateManyWithoutClientNestedInput
  freelanceOrders?: Prisma.FreelanceOrderUpdateManyWithoutClientNestedInput
  referralsMade?: Prisma.ReferralUpdateManyWithoutAffiliateClientNestedInput
  referralsReceived?: Prisma.ReferralUpdateManyWithoutReferredClientNestedInput
  postTransactions?: Prisma.PostTransactionUpdateManyWithoutClientNestedInput
  chatParticipants?: Prisma.ChatParticipantUpdateManyWithoutClientNestedInput
}

export type ClientUncheckedUpdateWithoutReviewsInput = {
  id?: Prisma.StringFieldUpdateOperationsInput | string
  username?: Prisma.StringFieldUpdateOperationsInput | string
  email?: Prisma.StringFieldUpdateOperationsInput | string
  fullName?: Prisma.NullableStringFieldUpdateOperationsInput | string | null
  avatar?: Prisma.NullableStringFieldUpdateOperationsInput | string | null
  address?: Prisma.NullableStringFieldUpdateOperationsInput | string | null
  phone?: Prisma.NullableStringFieldUpdateOperationsInput | string | null
  password?: Prisma.StringFieldUpdateOperationsInput | string
  isVerified?: Prisma.BoolFieldUpdateOperationsInput | boolean
  createdAt?: Prisma.DateTimeFieldUpdateOperationsInput | Date | string
  updatedAt?: Prisma.DateTimeFieldUpdateOperationsInput | Date | string
  kyc?: Prisma.KYCUncheckedUpdateOneWithoutClientNestedInput
  orders?: Prisma.OrderUncheckedUpdateManyWithoutClientNestedInput
  recharges?: Prisma.AccountRechargeUncheckedUpdateManyWithoutClientNestedInput
  freelanceOrders?: Prisma.FreelanceOrderUncheckedUpdateManyWithoutClientNestedInput
  referralsMade?: Prisma.ReferralUncheckedUpdateManyWithoutAffiliateClientNestedInput
  referralsReceived?: Prisma.ReferralUncheckedUpdateManyWithoutReferredClientNestedInput
  postTransactions?: Prisma.PostTransactionUncheckedUpdateManyWithoutClientNestedInput
  chatParticipants?: Prisma.ChatParticipantUncheckedUpdateManyWithoutClientNestedInput
}

export type ClientCreateWithoutChatParticipantsInput = {
  id?: string
  username: string
  email: string
  fullName?: string | null
  avatar?: string | null
  address?: string | null
  phone?: string | null
  password: string
  isVerified?: boolean
  createdAt?: Date | string
  updatedAt?: Date | string
  kyc?: Prisma.KYCCreateNestedOneWithoutClientInput
  orders?: Prisma.OrderCreateNestedManyWithoutClientInput
  reviews?: Prisma.ReviewCreateNestedManyWithoutClientInput
  recharges?: Prisma.AccountRechargeCreateNestedManyWithoutClientInput
  freelanceOrders?: Prisma.FreelanceOrderCreateNestedManyWithoutClientInput
  referralsMade?: Prisma.ReferralCreateNestedManyWithoutAffiliateClientInput
  referralsReceived?: Prisma.ReferralCreateNestedManyWithoutReferredClientInput
  postTransactions?: Prisma.PostTransactionCreateNestedManyWithoutClientInput
}

export type ClientUncheckedCreateWithoutChatParticipantsInput = {
  id?: string
  username: string
  email: string
  fullName?: string | null
  avatar?: string | null
  address?: string | null
  phone?: string | null
  password: string
  isVerified?: boolean
  createdAt?: Date | string
  updatedAt?: Date | string
  kyc?: Prisma.KYCUncheckedCreateNestedOneWithoutClientInput
  orders?: Prisma.OrderUncheckedCreateNestedManyWithoutClientInput
  reviews?: Prisma.ReviewUncheckedCreateNestedManyWithoutClientInput
  recharges?: Prisma.AccountRechargeUncheckedCreateNestedManyWithoutClientInput
  freelanceOrders?: Prisma.FreelanceOrderUncheckedCreateNestedManyWithoutClientInput
  referralsMade?: Prisma.ReferralUncheckedCreateNestedManyWithoutAffiliateClientInput
  referralsReceived?: Prisma.ReferralUncheckedCreateNestedManyWithoutReferredClientInput
  postTransactions?: Prisma.PostTransactionUncheckedCreateNestedManyWithoutClientInput
}

export type ClientCreateOrConnectWithoutChatParticipantsInput = {
  where: Prisma.ClientWhereUniqueInput
  create: Prisma.XOR<Prisma.ClientCreateWithoutChatParticipantsInput, Prisma.ClientUncheckedCreateWithoutChatParticipantsInput>
}

export type ClientUpsertWithoutChatParticipantsInput = {
  update: Prisma.XOR<Prisma.ClientUpdateWithoutChatParticipantsInput, Prisma.ClientUncheckedUpdateWithoutChatParticipantsInput>
  create: Prisma.XOR<Prisma.ClientCreateWithoutChatParticipantsInput, Prisma.ClientUncheckedCreateWithoutChatParticipantsInput>
  where?: Prisma.ClientWhereInput
}

export type ClientUpdateToOneWithWhereWithoutChatParticipantsInput = {
  where?: Prisma.ClientWhereInput
  data: Prisma.XOR<Prisma.ClientUpdateWithoutChatParticipantsInput, Prisma.ClientUncheckedUpdateWithoutChatParticipantsInput>
}

export type ClientUpdateWithoutChatParticipantsInput = {
  id?: Prisma.StringFieldUpdateOperationsInput | string
  username?: Prisma.StringFieldUpdateOperationsInput | string
  email?: Prisma.StringFieldUpdateOperationsInput | string
  fullName?: Prisma.NullableStringFieldUpdateOperationsInput | string | null
  avatar?: Prisma.NullableStringFieldUpdateOperationsInput | string | null
  address?: Prisma.NullableStringFieldUpdateOperationsInput | string | null
  phone?: Prisma.NullableStringFieldUpdateOperationsInput | string | null
  password?: Prisma.StringFieldUpdateOperationsInput | string
  isVerified?: Prisma.BoolFieldUpdateOperationsInput | boolean
  createdAt?: Prisma.DateTimeFieldUpdateOperationsInput | Date | string
  updatedAt?: Prisma.DateTimeFieldUpdateOperationsInput | Date | string
  kyc?: Prisma.KYCUpdateOneWithoutClientNestedInput
  orders?: Prisma.OrderUpdateManyWithoutClientNestedInput
  reviews?: Prisma.ReviewUpdateManyWithoutClientNestedInput
  recharges?: Prisma.AccountRechargeUpdateManyWithoutClientNestedInput
  freelanceOrders?: Prisma.FreelanceOrderUpdateManyWithoutClientNestedInput
  referralsMade?: Prisma.ReferralUpdateManyWithoutAffiliateClientNestedInput
  referralsReceived?: Prisma.ReferralUpdateManyWithoutReferredClientNestedInput
  postTransactions?: Prisma.PostTransactionUpdateManyWithoutClientNestedInput
}

export type ClientUncheckedUpdateWithoutChatParticipantsInput = {
  id?: Prisma.StringFieldUpdateOperationsInput | string
  username?: Prisma.StringFieldUpdateOperationsInput | string
  email?: Prisma.StringFieldUpdateOperationsInput | string
  fullName?: Prisma.NullableStringFieldUpdateOperationsInput | string | null
  avatar?: Prisma.NullableStringFieldUpdateOperationsInput | string | null
  address?: Prisma.NullableStringFieldUpdateOperationsInput | string | null
  phone?: Prisma.NullableStringFieldUpdateOperationsInput | string | null
  password?: Prisma.StringFieldUpdateOperationsInput | string
  isVerified?: Prisma.BoolFieldUpdateOperationsInput | boolean
  createdAt?: Prisma.DateTimeFieldUpdateOperationsInput | Date | string
  updatedAt?: Prisma.DateTimeFieldUpdateOperationsInput | Date | string
  kyc?: Prisma.KYCUncheckedUpdateOneWithoutClientNestedInput
  orders?: Prisma.OrderUncheckedUpdateManyWithoutClientNestedInput
  reviews?: Prisma.ReviewUncheckedUpdateManyWithoutClientNestedInput
  recharges?: Prisma.AccountRechargeUncheckedUpdateManyWithoutClientNestedInput
  freelanceOrders?: Prisma.FreelanceOrderUncheckedUpdateManyWithoutClientNestedInput
  referralsMade?: Prisma.ReferralUncheckedUpdateManyWithoutAffiliateClientNestedInput
  referralsReceived?: Prisma.ReferralUncheckedUpdateManyWithoutReferredClientNestedInput
  postTransactions?: Prisma.PostTransactionUncheckedUpdateManyWithoutClientNestedInput
}

export type ClientCreateWithoutKycInput = {
  id?: string
  username: string
  email: string
  fullName?: string | null
  avatar?: string | null
  address?: string | null
  phone?: string | null
  password: string
  isVerified?: boolean
  createdAt?: Date | string
  updatedAt?: Date | string
  orders?: Prisma.OrderCreateNestedManyWithoutClientInput
  reviews?: Prisma.ReviewCreateNestedManyWithoutClientInput
  recharges?: Prisma.AccountRechargeCreateNestedManyWithoutClientInput
  freelanceOrders?: Prisma.FreelanceOrderCreateNestedManyWithoutClientInput
  referralsMade?: Prisma.ReferralCreateNestedManyWithoutAffiliateClientInput
  referralsReceived?: Prisma.ReferralCreateNestedManyWithoutReferredClientInput
  postTransactions?: Prisma.PostTransactionCreateNestedManyWithoutClientInput
  chatParticipants?: Prisma.ChatParticipantCreateNestedManyWithoutClientInput
}

export type ClientUncheckedCreateWithoutKycInput = {
  id?: string
  username: string
  email: string
  fullName?: string | null
  avatar?: string | null
  address?: string | null
  phone?: string | null
  password: string
  isVerified?: boolean
  createdAt?: Date | string
  updatedAt?: Date | string
  orders?: Prisma.OrderUncheckedCreateNestedManyWithoutClientInput
  reviews?: Prisma.ReviewUncheckedCreateNestedManyWithoutClientInput
  recharges?: Prisma.AccountRechargeUncheckedCreateNestedManyWithoutClientInput
  freelanceOrders?: Prisma.FreelanceOrderUncheckedCreateNestedManyWithoutClientInput
  referralsMade?: Prisma.ReferralUncheckedCreateNestedManyWithoutAffiliateClientInput
  referralsReceived?: Prisma.ReferralUncheckedCreateNestedManyWithoutReferredClientInput
  postTransactions?: Prisma.PostTransactionUncheckedCreateNestedManyWithoutClientInput
  chatParticipants?: Prisma.ChatParticipantUncheckedCreateNestedManyWithoutClientInput
}

export type ClientCreateOrConnectWithoutKycInput = {
  where: Prisma.ClientWhereUniqueInput
  create: Prisma.XOR<Prisma.ClientCreateWithoutKycInput, Prisma.ClientUncheckedCreateWithoutKycInput>
}

export type ClientUpsertWithoutKycInput = {
  update: Prisma.XOR<Prisma.ClientUpdateWithoutKycInput, Prisma.ClientUncheckedUpdateWithoutKycInput>
  create: Prisma.XOR<Prisma.ClientCreateWithoutKycInput, Prisma.ClientUncheckedCreateWithoutKycInput>
  where?: Prisma.ClientWhereInput
}

export type ClientUpdateToOneWithWhereWithoutKycInput = {
  where?: Prisma.ClientWhereInput
  data: Prisma.XOR<Prisma.ClientUpdateWithoutKycInput, Prisma.ClientUncheckedUpdateWithoutKycInput>
}

export type ClientUpdateWithoutKycInput = {
  id?: Prisma.StringFieldUpdateOperationsInput | string
  username?: Prisma.StringFieldUpdateOperationsInput | string
  email?: Prisma.StringFieldUpdateOperationsInput | string
  fullName?: Prisma.NullableStringFieldUpdateOperationsInput | string | null
  avatar?: Prisma.NullableStringFieldUpdateOperationsInput | string | null
  address?: Prisma.NullableStringFieldUpdateOperationsInput | string | null
  phone?: Prisma.NullableStringFieldUpdateOperationsInput | string | null
  password?: Prisma.StringFieldUpdateOperationsInput | string
  isVerified?: Prisma.BoolFieldUpdateOperationsInput | boolean
  createdAt?: Prisma.DateTimeFieldUpdateOperationsInput | Date | string
  updatedAt?: Prisma.DateTimeFieldUpdateOperationsInput | Date | string
  orders?: Prisma.OrderUpdateManyWithoutClientNestedInput
  reviews?: Prisma.ReviewUpdateManyWithoutClientNestedInput
  recharges?: Prisma.AccountRechargeUpdateManyWithoutClientNestedInput
  freelanceOrders?: Prisma.FreelanceOrderUpdateManyWithoutClientNestedInput
  referralsMade?: Prisma.ReferralUpdateManyWithoutAffiliateClientNestedInput
  referralsReceived?: Prisma.ReferralUpdateManyWithoutReferredClientNestedInput
  postTransactions?: Prisma.PostTransactionUpdateManyWithoutClientNestedInput
  chatParticipants?: Prisma.ChatParticipantUpdateManyWithoutClientNestedInput
}

export type ClientUncheckedUpdateWithoutKycInput = {
  id?: Prisma.StringFieldUpdateOperationsInput | string
  username?: Prisma.StringFieldUpdateOperationsInput | string
  email?: Prisma.StringFieldUpdateOperationsInput | string
  fullName?: Prisma.NullableStringFieldUpdateOperationsInput | string | null
  avatar?: Prisma.NullableStringFieldUpdateOperationsInput | string | null
  address?: Prisma.NullableStringFieldUpdateOperationsInput | string | null
  phone?: Prisma.NullableStringFieldUpdateOperationsInput | string | null
  password?: Prisma.StringFieldUpdateOperationsInput | string
  isVerified?: Prisma.BoolFieldUpdateOperationsInput | boolean
  createdAt?: Prisma.DateTimeFieldUpdateOperationsInput | Date | string
  updatedAt?: Prisma.DateTimeFieldUpdateOperationsInput | Date | string
  orders?: Prisma.OrderUncheckedUpdateManyWithoutClientNestedInput
  reviews?: Prisma.ReviewUncheckedUpdateManyWithoutClientNestedInput
  recharges?: Prisma.AccountRechargeUncheckedUpdateManyWithoutClientNestedInput
  freelanceOrders?: Prisma.FreelanceOrderUncheckedUpdateManyWithoutClientNestedInput
  referralsMade?: Prisma.ReferralUncheckedUpdateManyWithoutAffiliateClientNestedInput
  referralsReceived?: Prisma.ReferralUncheckedUpdateManyWithoutReferredClientNestedInput
  postTransactions?: Prisma.PostTransactionUncheckedUpdateManyWithoutClientNestedInput
  chatParticipants?: Prisma.ChatParticipantUncheckedUpdateManyWithoutClientNestedInput
}

export type ClientCreateWithoutRechargesInput = {
  id?: string
  username: string
  email: string
  fullName?: string | null
  avatar?: string | null
  address?: string | null
  phone?: string | null
  password: string
  isVerified?: boolean
  createdAt?: Date | string
  updatedAt?: Date | string
  kyc?: Prisma.KYCCreateNestedOneWithoutClientInput
  orders?: Prisma.OrderCreateNestedManyWithoutClientInput
  reviews?: Prisma.ReviewCreateNestedManyWithoutClientInput
  freelanceOrders?: Prisma.FreelanceOrderCreateNestedManyWithoutClientInput
  referralsMade?: Prisma.ReferralCreateNestedManyWithoutAffiliateClientInput
  referralsReceived?: Prisma.ReferralCreateNestedManyWithoutReferredClientInput
  postTransactions?: Prisma.PostTransactionCreateNestedManyWithoutClientInput
  chatParticipants?: Prisma.ChatParticipantCreateNestedManyWithoutClientInput
}

export type ClientUncheckedCreateWithoutRechargesInput = {
  id?: string
  username: string
  email: string
  fullName?: string | null
  avatar?: string | null
  address?: string | null
  phone?: string | null
  password: string
  isVerified?: boolean
  createdAt?: Date | string
  updatedAt?: Date | string
  kyc?: Prisma.KYCUncheckedCreateNestedOneWithoutClientInput
  orders?: Prisma.OrderUncheckedCreateNestedManyWithoutClientInput
  reviews?: Prisma.ReviewUncheckedCreateNestedManyWithoutClientInput
  freelanceOrders?: Prisma.FreelanceOrderUncheckedCreateNestedManyWithoutClientInput
  referralsMade?: Prisma.ReferralUncheckedCreateNestedManyWithoutAffiliateClientInput
  referralsReceived?: Prisma.ReferralUncheckedCreateNestedManyWithoutReferredClientInput
  postTransactions?: Prisma.PostTransactionUncheckedCreateNestedManyWithoutClientInput
  chatParticipants?: Prisma.ChatParticipantUncheckedCreateNestedManyWithoutClientInput
}

export type ClientCreateOrConnectWithoutRechargesInput = {
  where: Prisma.ClientWhereUniqueInput
  create: Prisma.XOR<Prisma.ClientCreateWithoutRechargesInput, Prisma.ClientUncheckedCreateWithoutRechargesInput>
}

export type ClientUpsertWithoutRechargesInput = {
  update: Prisma.XOR<Prisma.ClientUpdateWithoutRechargesInput, Prisma.ClientUncheckedUpdateWithoutRechargesInput>
  create: Prisma.XOR<Prisma.ClientCreateWithoutRechargesInput, Prisma.ClientUncheckedCreateWithoutRechargesInput>
  where?: Prisma.ClientWhereInput
}

export type ClientUpdateToOneWithWhereWithoutRechargesInput = {
  where?: Prisma.ClientWhereInput
  data: Prisma.XOR<Prisma.ClientUpdateWithoutRechargesInput, Prisma.ClientUncheckedUpdateWithoutRechargesInput>
}

export type ClientUpdateWithoutRechargesInput = {
  id?: Prisma.StringFieldUpdateOperationsInput | string
  username?: Prisma.StringFieldUpdateOperationsInput | string
  email?: Prisma.StringFieldUpdateOperationsInput | string
  fullName?: Prisma.NullableStringFieldUpdateOperationsInput | string | null
  avatar?: Prisma.NullableStringFieldUpdateOperationsInput | string | null
  address?: Prisma.NullableStringFieldUpdateOperationsInput | string | null
  phone?: Prisma.NullableStringFieldUpdateOperationsInput | string | null
  password?: Prisma.StringFieldUpdateOperationsInput | string
  isVerified?: Prisma.BoolFieldUpdateOperationsInput | boolean
  createdAt?: Prisma.DateTimeFieldUpdateOperationsInput | Date | string
  updatedAt?: Prisma.DateTimeFieldUpdateOperationsInput | Date | string
  kyc?: Prisma.KYCUpdateOneWithoutClientNestedInput
  orders?: Prisma.OrderUpdateManyWithoutClientNestedInput
  reviews?: Prisma.ReviewUpdateManyWithoutClientNestedInput
  freelanceOrders?: Prisma.FreelanceOrderUpdateManyWithoutClientNestedInput
  referralsMade?: Prisma.ReferralUpdateManyWithoutAffiliateClientNestedInput
  referralsReceived?: Prisma.ReferralUpdateManyWithoutReferredClientNestedInput
  postTransactions?: Prisma.PostTransactionUpdateManyWithoutClientNestedInput
  chatParticipants?: Prisma.ChatParticipantUpdateManyWithoutClientNestedInput
}

export type ClientUncheckedUpdateWithoutRechargesInput = {
  id?: Prisma.StringFieldUpdateOperationsInput | string
  username?: Prisma.StringFieldUpdateOperationsInput | string
  email?: Prisma.StringFieldUpdateOperationsInput | string
  fullName?: Prisma.NullableStringFieldUpdateOperationsInput | string | null
  avatar?: Prisma.NullableStringFieldUpdateOperationsInput | string | null
  address?: Prisma.NullableStringFieldUpdateOperationsInput | string | null
  phone?: Prisma.NullableStringFieldUpdateOperationsInput | string | null
  password?: Prisma.StringFieldUpdateOperationsInput | string
  isVerified?: Prisma.BoolFieldUpdateOperationsInput | boolean
  createdAt?: Prisma.DateTimeFieldUpdateOperationsInput | Date | string
  updatedAt?: Prisma.DateTimeFieldUpdateOperationsInput | Date | string
  kyc?: Prisma.KYCUncheckedUpdateOneWithoutClientNestedInput
  orders?: Prisma.OrderUncheckedUpdateManyWithoutClientNestedInput
  reviews?: Prisma.ReviewUncheckedUpdateManyWithoutClientNestedInput
  freelanceOrders?: Prisma.FreelanceOrderUncheckedUpdateManyWithoutClientNestedInput
  referralsMade?: Prisma.ReferralUncheckedUpdateManyWithoutAffiliateClientNestedInput
  referralsReceived?: Prisma.ReferralUncheckedUpdateManyWithoutReferredClientNestedInput
  postTransactions?: Prisma.PostTransactionUncheckedUpdateManyWithoutClientNestedInput
  chatParticipants?: Prisma.ChatParticipantUncheckedUpdateManyWithoutClientNestedInput
}

export type ClientCreateWithoutFreelanceOrdersInput = {
  id?: string
  username: string
  email: string
  fullName?: string | null
  avatar?: string | null
  address?: string | null
  phone?: string | null
  password: string
  isVerified?: boolean
  createdAt?: Date | string
  updatedAt?: Date | string
  kyc?: Prisma.KYCCreateNestedOneWithoutClientInput
  orders?: Prisma.OrderCreateNestedManyWithoutClientInput
  reviews?: Prisma.ReviewCreateNestedManyWithoutClientInput
  recharges?: Prisma.AccountRechargeCreateNestedManyWithoutClientInput
  referralsMade?: Prisma.ReferralCreateNestedManyWithoutAffiliateClientInput
  referralsReceived?: Prisma.ReferralCreateNestedManyWithoutReferredClientInput
  postTransactions?: Prisma.PostTransactionCreateNestedManyWithoutClientInput
  chatParticipants?: Prisma.ChatParticipantCreateNestedManyWithoutClientInput
}

export type ClientUncheckedCreateWithoutFreelanceOrdersInput = {
  id?: string
  username: string
  email: string
  fullName?: string | null
  avatar?: string | null
  address?: string | null
  phone?: string | null
  password: string
  isVerified?: boolean
  createdAt?: Date | string
  updatedAt?: Date | string
  kyc?: Prisma.KYCUncheckedCreateNestedOneWithoutClientInput
  orders?: Prisma.OrderUncheckedCreateNestedManyWithoutClientInput
  reviews?: Prisma.ReviewUncheckedCreateNestedManyWithoutClientInput
  recharges?: Prisma.AccountRechargeUncheckedCreateNestedManyWithoutClientInput
  referralsMade?: Prisma.ReferralUncheckedCreateNestedManyWithoutAffiliateClientInput
  referralsReceived?: Prisma.ReferralUncheckedCreateNestedManyWithoutReferredClientInput
  postTransactions?: Prisma.PostTransactionUncheckedCreateNestedManyWithoutClientInput
  chatParticipants?: Prisma.ChatParticipantUncheckedCreateNestedManyWithoutClientInput
}

export type ClientCreateOrConnectWithoutFreelanceOrdersInput = {
  where: Prisma.ClientWhereUniqueInput
  create: Prisma.XOR<Prisma.ClientCreateWithoutFreelanceOrdersInput, Prisma.ClientUncheckedCreateWithoutFreelanceOrdersInput>
}

export type ClientUpsertWithoutFreelanceOrdersInput = {
  update: Prisma.XOR<Prisma.ClientUpdateWithoutFreelanceOrdersInput, Prisma.ClientUncheckedUpdateWithoutFreelanceOrdersInput>
  create: Prisma.XOR<Prisma.ClientCreateWithoutFreelanceOrdersInput, Prisma.ClientUncheckedCreateWithoutFreelanceOrdersInput>
  where?: Prisma.ClientWhereInput
}

export type ClientUpdateToOneWithWhereWithoutFreelanceOrdersInput = {
  where?: Prisma.ClientWhereInput
  data: Prisma.XOR<Prisma.ClientUpdateWithoutFreelanceOrdersInput, Prisma.ClientUncheckedUpdateWithoutFreelanceOrdersInput>
}

export type ClientUpdateWithoutFreelanceOrdersInput = {
  id?: Prisma.StringFieldUpdateOperationsInput | string
  username?: Prisma.StringFieldUpdateOperationsInput | string
  email?: Prisma.StringFieldUpdateOperationsInput | string
  fullName?: Prisma.NullableStringFieldUpdateOperationsInput | string | null
  avatar?: Prisma.NullableStringFieldUpdateOperationsInput | string | null
  address?: Prisma.NullableStringFieldUpdateOperationsInput | string | null
  phone?: Prisma.NullableStringFieldUpdateOperationsInput | string | null
  password?: Prisma.StringFieldUpdateOperationsInput | string
  isVerified?: Prisma.BoolFieldUpdateOperationsInput | boolean
  createdAt?: Prisma.DateTimeFieldUpdateOperationsInput | Date | string
  updatedAt?: Prisma.DateTimeFieldUpdateOperationsInput | Date | string
  kyc?: Prisma.KYCUpdateOneWithoutClientNestedInput
  orders?: Prisma.OrderUpdateManyWithoutClientNestedInput
  reviews?: Prisma.ReviewUpdateManyWithoutClientNestedInput
  recharges?: Prisma.AccountRechargeUpdateManyWithoutClientNestedInput
  referralsMade?: Prisma.ReferralUpdateManyWithoutAffiliateClientNestedInput
  referralsReceived?: Prisma.ReferralUpdateManyWithoutReferredClientNestedInput
  postTransactions?: Prisma.PostTransactionUpdateManyWithoutClientNestedInput
  chatParticipants?: Prisma.ChatParticipantUpdateManyWithoutClientNestedInput
}

export type ClientUncheckedUpdateWithoutFreelanceOrdersInput = {
  id?: Prisma.StringFieldUpdateOperationsInput | string
  username?: Prisma.StringFieldUpdateOperationsInput | string
  email?: Prisma.StringFieldUpdateOperationsInput | string
  fullName?: Prisma.NullableStringFieldUpdateOperationsInput | string | null
  avatar?: Prisma.NullableStringFieldUpdateOperationsInput | string | null
  address?: Prisma.NullableStringFieldUpdateOperationsInput | string | null
  phone?: Prisma.NullableStringFieldUpdateOperationsInput | string | null
  password?: Prisma.StringFieldUpdateOperationsInput | string
  isVerified?: Prisma.BoolFieldUpdateOperationsInput | boolean
  createdAt?: Prisma.DateTimeFieldUpdateOperationsInput | Date | string
  updatedAt?: Prisma.DateTimeFieldUpdateOperationsInput | Date | string
  kyc?: Prisma.KYCUncheckedUpdateOneWithoutClientNestedInput
  orders?: Prisma.OrderUncheckedUpdateManyWithoutClientNestedInput
  reviews?: Prisma.ReviewUncheckedUpdateManyWithoutClientNestedInput
  recharges?: Prisma.AccountRechargeUncheckedUpdateManyWithoutClientNestedInput
  referralsMade?: Prisma.ReferralUncheckedUpdateManyWithoutAffiliateClientNestedInput
  referralsReceived?: Prisma.ReferralUncheckedUpdateManyWithoutReferredClientNestedInput
  postTransactions?: Prisma.PostTransactionUncheckedUpdateManyWithoutClientNestedInput
  chatParticipants?: Prisma.ChatParticipantUncheckedUpdateManyWithoutClientNestedInput
}

export type ClientCreateWithoutReferralsMadeInput = {
  id?: string
  username: string
  email: string
  fullName?: string | null
  avatar?: string | null
  address?: string | null
  phone?: string | null
  password: string
  isVerified?: boolean
  createdAt?: Date | string
  updatedAt?: Date | string
  kyc?: Prisma.KYCCreateNestedOneWithoutClientInput
  orders?: Prisma.OrderCreateNestedManyWithoutClientInput
  reviews?: Prisma.ReviewCreateNestedManyWithoutClientInput
  recharges?: Prisma.AccountRechargeCreateNestedManyWithoutClientInput
  freelanceOrders?: Prisma.FreelanceOrderCreateNestedManyWithoutClientInput
  referralsReceived?: Prisma.ReferralCreateNestedManyWithoutReferredClientInput
  postTransactions?: Prisma.PostTransactionCreateNestedManyWithoutClientInput
  chatParticipants?: Prisma.ChatParticipantCreateNestedManyWithoutClientInput
}

export type ClientUncheckedCreateWithoutReferralsMadeInput = {
  id?: string
  username: string
  email: string
  fullName?: string | null
  avatar?: string | null
  address?: string | null
  phone?: string | null
  password: string
  isVerified?: boolean
  createdAt?: Date | string
  updatedAt?: Date | string
  kyc?: Prisma.KYCUncheckedCreateNestedOneWithoutClientInput
  orders?: Prisma.OrderUncheckedCreateNestedManyWithoutClientInput
  reviews?: Prisma.ReviewUncheckedCreateNestedManyWithoutClientInput
  recharges?: Prisma.AccountRechargeUncheckedCreateNestedManyWithoutClientInput
  freelanceOrders?: Prisma.FreelanceOrderUncheckedCreateNestedManyWithoutClientInput
  referralsReceived?: Prisma.ReferralUncheckedCreateNestedManyWithoutReferredClientInput
  postTransactions?: Prisma.PostTransactionUncheckedCreateNestedManyWithoutClientInput
  chatParticipants?: Prisma.ChatParticipantUncheckedCreateNestedManyWithoutClientInput
}

export type ClientCreateOrConnectWithoutReferralsMadeInput = {
  where: Prisma.ClientWhereUniqueInput
  create: Prisma.XOR<Prisma.ClientCreateWithoutReferralsMadeInput, Prisma.ClientUncheckedCreateWithoutReferralsMadeInput>
}

export type ClientCreateWithoutReferralsReceivedInput = {
  id?: string
  username: string
  email: string
  fullName?: string | null
  avatar?: string | null
  address?: string | null
  phone?: string | null
  password: string
  isVerified?: boolean
  createdAt?: Date | string
  updatedAt?: Date | string
  kyc?: Prisma.KYCCreateNestedOneWithoutClientInput
  orders?: Prisma.OrderCreateNestedManyWithoutClientInput
  reviews?: Prisma.ReviewCreateNestedManyWithoutClientInput
  recharges?: Prisma.AccountRechargeCreateNestedManyWithoutClientInput
  freelanceOrders?: Prisma.FreelanceOrderCreateNestedManyWithoutClientInput
  referralsMade?: Prisma.ReferralCreateNestedManyWithoutAffiliateClientInput
  postTransactions?: Prisma.PostTransactionCreateNestedManyWithoutClientInput
  chatParticipants?: Prisma.ChatParticipantCreateNestedManyWithoutClientInput
}

export type ClientUncheckedCreateWithoutReferralsReceivedInput = {
  id?: string
  username: string
  email: string
  fullName?: string | null
  avatar?: string | null
  address?: string | null
  phone?: string | null
  password: string
  isVerified?: boolean
  createdAt?: Date | string
  updatedAt?: Date | string
  kyc?: Prisma.KYCUncheckedCreateNestedOneWithoutClientInput
  orders?: Prisma.OrderUncheckedCreateNestedManyWithoutClientInput
  reviews?: Prisma.ReviewUncheckedCreateNestedManyWithoutClientInput
  recharges?: Prisma.AccountRechargeUncheckedCreateNestedManyWithoutClientInput
  freelanceOrders?: Prisma.FreelanceOrderUncheckedCreateNestedManyWithoutClientInput
  referralsMade?: Prisma.ReferralUncheckedCreateNestedManyWithoutAffiliateClientInput
  postTransactions?: Prisma.PostTransactionUncheckedCreateNestedManyWithoutClientInput
  chatParticipants?: Prisma.ChatParticipantUncheckedCreateNestedManyWithoutClientInput
}

export type ClientCreateOrConnectWithoutReferralsReceivedInput = {
  where: Prisma.ClientWhereUniqueInput
  create: Prisma.XOR<Prisma.ClientCreateWithoutReferralsReceivedInput, Prisma.ClientUncheckedCreateWithoutReferralsReceivedInput>
}

export type ClientUpsertWithoutReferralsMadeInput = {
  update: Prisma.XOR<Prisma.ClientUpdateWithoutReferralsMadeInput, Prisma.ClientUncheckedUpdateWithoutReferralsMadeInput>
  create: Prisma.XOR<Prisma.ClientCreateWithoutReferralsMadeInput, Prisma.ClientUncheckedCreateWithoutReferralsMadeInput>
  where?: Prisma.ClientWhereInput
}

export type ClientUpdateToOneWithWhereWithoutReferralsMadeInput = {
  where?: Prisma.ClientWhereInput
  data: Prisma.XOR<Prisma.ClientUpdateWithoutReferralsMadeInput, Prisma.ClientUncheckedUpdateWithoutReferralsMadeInput>
}

export type ClientUpdateWithoutReferralsMadeInput = {
  id?: Prisma.StringFieldUpdateOperationsInput | string
  username?: Prisma.StringFieldUpdateOperationsInput | string
  email?: Prisma.StringFieldUpdateOperationsInput | string
  fullName?: Prisma.NullableStringFieldUpdateOperationsInput | string | null
  avatar?: Prisma.NullableStringFieldUpdateOperationsInput | string | null
  address?: Prisma.NullableStringFieldUpdateOperationsInput | string | null
  phone?: Prisma.NullableStringFieldUpdateOperationsInput | string | null
  password?: Prisma.StringFieldUpdateOperationsInput | string
  isVerified?: Prisma.BoolFieldUpdateOperationsInput | boolean
  createdAt?: Prisma.DateTimeFieldUpdateOperationsInput | Date | string
  updatedAt?: Prisma.DateTimeFieldUpdateOperationsInput | Date | string
  kyc?: Prisma.KYCUpdateOneWithoutClientNestedInput
  orders?: Prisma.OrderUpdateManyWithoutClientNestedInput
  reviews?: Prisma.ReviewUpdateManyWithoutClientNestedInput
  recharges?: Prisma.AccountRechargeUpdateManyWithoutClientNestedInput
  freelanceOrders?: Prisma.FreelanceOrderUpdateManyWithoutClientNestedInput
  referralsReceived?: Prisma.ReferralUpdateManyWithoutReferredClientNestedInput
  postTransactions?: Prisma.PostTransactionUpdateManyWithoutClientNestedInput
  chatParticipants?: Prisma.ChatParticipantUpdateManyWithoutClientNestedInput
}

export type ClientUncheckedUpdateWithoutReferralsMadeInput = {
  id?: Prisma.StringFieldUpdateOperationsInput | string
  username?: Prisma.StringFieldUpdateOperationsInput | string
  email?: Prisma.StringFieldUpdateOperationsInput | string
  fullName?: Prisma.NullableStringFieldUpdateOperationsInput | string | null
  avatar?: Prisma.NullableStringFieldUpdateOperationsInput | string | null
  address?: Prisma.NullableStringFieldUpdateOperationsInput | string | null
  phone?: Prisma.NullableStringFieldUpdateOperationsInput | string | null
  password?: Prisma.StringFieldUpdateOperationsInput | string
  isVerified?: Prisma.BoolFieldUpdateOperationsInput | boolean
  createdAt?: Prisma.DateTimeFieldUpdateOperationsInput | Date | string
  updatedAt?: Prisma.DateTimeFieldUpdateOperationsInput | Date | string
  kyc?: Prisma.KYCUncheckedUpdateOneWithoutClientNestedInput
  orders?: Prisma.OrderUncheckedUpdateManyWithoutClientNestedInput
  reviews?: Prisma.ReviewUncheckedUpdateManyWithoutClientNestedInput
  recharges?: Prisma.AccountRechargeUncheckedUpdateManyWithoutClientNestedInput
  freelanceOrders?: Prisma.FreelanceOrderUncheckedUpdateManyWithoutClientNestedInput
  referralsReceived?: Prisma.ReferralUncheckedUpdateManyWithoutReferredClientNestedInput
  postTransactions?: Prisma.PostTransactionUncheckedUpdateManyWithoutClientNestedInput
  chatParticipants?: Prisma.ChatParticipantUncheckedUpdateManyWithoutClientNestedInput
}

export type ClientUpsertWithoutReferralsReceivedInput = {
  update: Prisma.XOR<Prisma.ClientUpdateWithoutReferralsReceivedInput, Prisma.ClientUncheckedUpdateWithoutReferralsReceivedInput>
  create: Prisma.XOR<Prisma.ClientCreateWithoutReferralsReceivedInput, Prisma.ClientUncheckedCreateWithoutReferralsReceivedInput>
  where?: Prisma.ClientWhereInput
}

export type ClientUpdateToOneWithWhereWithoutReferralsReceivedInput = {
  where?: Prisma.ClientWhereInput
  data: Prisma.XOR<Prisma.ClientUpdateWithoutReferralsReceivedInput, Prisma.ClientUncheckedUpdateWithoutReferralsReceivedInput>
}

export type ClientUpdateWithoutReferralsReceivedInput = {
  id?: Prisma.StringFieldUpdateOperationsInput | string
  username?: Prisma.StringFieldUpdateOperationsInput | string
  email?: Prisma.StringFieldUpdateOperationsInput | string
  fullName?: Prisma.NullableStringFieldUpdateOperationsInput | string | null
  avatar?: Prisma.NullableStringFieldUpdateOperationsInput | string | null
  address?: Prisma.NullableStringFieldUpdateOperationsInput | string | null
  phone?: Prisma.NullableStringFieldUpdateOperationsInput | string | null
  password?: Prisma.StringFieldUpdateOperationsInput | string
  isVerified?: Prisma.BoolFieldUpdateOperationsInput | boolean
  createdAt?: Prisma.DateTimeFieldUpdateOperationsInput | Date | string
  updatedAt?: Prisma.DateTimeFieldUpdateOperationsInput | Date | string
  kyc?: Prisma.KYCUpdateOneWithoutClientNestedInput
  orders?: Prisma.OrderUpdateManyWithoutClientNestedInput
  reviews?: Prisma.ReviewUpdateManyWithoutClientNestedInput
  recharges?: Prisma.AccountRechargeUpdateManyWithoutClientNestedInput
  freelanceOrders?: Prisma.FreelanceOrderUpdateManyWithoutClientNestedInput
  referralsMade?: Prisma.ReferralUpdateManyWithoutAffiliateClientNestedInput
  postTransactions?: Prisma.PostTransactionUpdateManyWithoutClientNestedInput
  chatParticipants?: Prisma.ChatParticipantUpdateManyWithoutClientNestedInput
}

export type ClientUncheckedUpdateWithoutReferralsReceivedInput = {
  id?: Prisma.StringFieldUpdateOperationsInput | string
  username?: Prisma.StringFieldUpdateOperationsInput | string
  email?: Prisma.StringFieldUpdateOperationsInput | string
  fullName?: Prisma.NullableStringFieldUpdateOperationsInput | string | null
  avatar?: Prisma.NullableStringFieldUpdateOperationsInput | string | null
  address?: Prisma.NullableStringFieldUpdateOperationsInput | string | null
  phone?: Prisma.NullableStringFieldUpdateOperationsInput | string | null
  password?: Prisma.StringFieldUpdateOperationsInput | string
  isVerified?: Prisma.BoolFieldUpdateOperationsInput | boolean
  createdAt?: Prisma.DateTimeFieldUpdateOperationsInput | Date | string
  updatedAt?: Prisma.DateTimeFieldUpdateOperationsInput | Date | string
  kyc?: Prisma.KYCUncheckedUpdateOneWithoutClientNestedInput
  orders?: Prisma.OrderUncheckedUpdateManyWithoutClientNestedInput
  reviews?: Prisma.ReviewUncheckedUpdateManyWithoutClientNestedInput
  recharges?: Prisma.AccountRechargeUncheckedUpdateManyWithoutClientNestedInput
  freelanceOrders?: Prisma.FreelanceOrderUncheckedUpdateManyWithoutClientNestedInput
  referralsMade?: Prisma.ReferralUncheckedUpdateManyWithoutAffiliateClientNestedInput
  postTransactions?: Prisma.PostTransactionUncheckedUpdateManyWithoutClientNestedInput
  chatParticipants?: Prisma.ChatParticipantUncheckedUpdateManyWithoutClientNestedInput
}

export type ClientCreateWithoutPostTransactionsInput = {
  id?: string
  username: string
  email: string
  fullName?: string | null
  avatar?: string | null
  address?: string | null
  phone?: string | null
  password: string
  isVerified?: boolean
  createdAt?: Date | string
  updatedAt?: Date | string
  kyc?: Prisma.KYCCreateNestedOneWithoutClientInput
  orders?: Prisma.OrderCreateNestedManyWithoutClientInput
  reviews?: Prisma.ReviewCreateNestedManyWithoutClientInput
  recharges?: Prisma.AccountRechargeCreateNestedManyWithoutClientInput
  freelanceOrders?: Prisma.FreelanceOrderCreateNestedManyWithoutClientInput
  referralsMade?: Prisma.ReferralCreateNestedManyWithoutAffiliateClientInput
  referralsReceived?: Prisma.ReferralCreateNestedManyWithoutReferredClientInput
  chatParticipants?: Prisma.ChatParticipantCreateNestedManyWithoutClientInput
}

export type ClientUncheckedCreateWithoutPostTransactionsInput = {
  id?: string
  username: string
  email: string
  fullName?: string | null
  avatar?: string | null
  address?: string | null
  phone?: string | null
  password: string
  isVerified?: boolean
  createdAt?: Date | string
  updatedAt?: Date | string
  kyc?: Prisma.KYCUncheckedCreateNestedOneWithoutClientInput
  orders?: Prisma.OrderUncheckedCreateNestedManyWithoutClientInput
  reviews?: Prisma.ReviewUncheckedCreateNestedManyWithoutClientInput
  recharges?: Prisma.AccountRechargeUncheckedCreateNestedManyWithoutClientInput
  freelanceOrders?: Prisma.FreelanceOrderUncheckedCreateNestedManyWithoutClientInput
  referralsMade?: Prisma.ReferralUncheckedCreateNestedManyWithoutAffiliateClientInput
  referralsReceived?: Prisma.ReferralUncheckedCreateNestedManyWithoutReferredClientInput
  chatParticipants?: Prisma.ChatParticipantUncheckedCreateNestedManyWithoutClientInput
}

export type ClientCreateOrConnectWithoutPostTransactionsInput = {
  where: Prisma.ClientWhereUniqueInput
  create: Prisma.XOR<Prisma.ClientCreateWithoutPostTransactionsInput, Prisma.ClientUncheckedCreateWithoutPostTransactionsInput>
}

export type ClientUpsertWithoutPostTransactionsInput = {
  update: Prisma.XOR<Prisma.ClientUpdateWithoutPostTransactionsInput, Prisma.ClientUncheckedUpdateWithoutPostTransactionsInput>
  create: Prisma.XOR<Prisma.ClientCreateWithoutPostTransactionsInput, Prisma.ClientUncheckedCreateWithoutPostTransactionsInput>
  where?: Prisma.ClientWhereInput
}

export type ClientUpdateToOneWithWhereWithoutPostTransactionsInput = {
  where?: Prisma.ClientWhereInput
  data: Prisma.XOR<Prisma.ClientUpdateWithoutPostTransactionsInput, Prisma.ClientUncheckedUpdateWithoutPostTransactionsInput>
}

export type ClientUpdateWithoutPostTransactionsInput = {
  id?: Prisma.StringFieldUpdateOperationsInput | string
  username?: Prisma.StringFieldUpdateOperationsInput | string
  email?: Prisma.StringFieldUpdateOperationsInput | string
  fullName?: Prisma.NullableStringFieldUpdateOperationsInput | string | null
  avatar?: Prisma.NullableStringFieldUpdateOperationsInput | string | null
  address?: Prisma.NullableStringFieldUpdateOperationsInput | string | null
  phone?: Prisma.NullableStringFieldUpdateOperationsInput | string | null
  password?: Prisma.StringFieldUpdateOperationsInput | string
  isVerified?: Prisma.BoolFieldUpdateOperationsInput | boolean
  createdAt?: Prisma.DateTimeFieldUpdateOperationsInput | Date | string
  updatedAt?: Prisma.DateTimeFieldUpdateOperationsInput | Date | string
  kyc?: Prisma.KYCUpdateOneWithoutClientNestedInput
  orders?: Prisma.OrderUpdateManyWithoutClientNestedInput
  reviews?: Prisma.ReviewUpdateManyWithoutClientNestedInput
  recharges?: Prisma.AccountRechargeUpdateManyWithoutClientNestedInput
  freelanceOrders?: Prisma.FreelanceOrderUpdateManyWithoutClientNestedInput
  referralsMade?: Prisma.ReferralUpdateManyWithoutAffiliateClientNestedInput
  referralsReceived?: Prisma.ReferralUpdateManyWithoutReferredClientNestedInput
  chatParticipants?: Prisma.ChatParticipantUpdateManyWithoutClientNestedInput
}

export type ClientUncheckedUpdateWithoutPostTransactionsInput = {
  id?: Prisma.StringFieldUpdateOperationsInput | string
  username?: Prisma.StringFieldUpdateOperationsInput | string
  email?: Prisma.StringFieldUpdateOperationsInput | string
  fullName?: Prisma.NullableStringFieldUpdateOperationsInput | string | null
  avatar?: Prisma.NullableStringFieldUpdateOperationsInput | string | null
  address?: Prisma.NullableStringFieldUpdateOperationsInput | string | null
  phone?: Prisma.NullableStringFieldUpdateOperationsInput | string | null
  password?: Prisma.StringFieldUpdateOperationsInput | string
  isVerified?: Prisma.BoolFieldUpdateOperationsInput | boolean
  createdAt?: Prisma.DateTimeFieldUpdateOperationsInput | Date | string
  updatedAt?: Prisma.DateTimeFieldUpdateOperationsInput | Date | string
  kyc?: Prisma.KYCUncheckedUpdateOneWithoutClientNestedInput
  orders?: Prisma.OrderUncheckedUpdateManyWithoutClientNestedInput
  reviews?: Prisma.ReviewUncheckedUpdateManyWithoutClientNestedInput
  recharges?: Prisma.AccountRechargeUncheckedUpdateManyWithoutClientNestedInput
  freelanceOrders?: Prisma.FreelanceOrderUncheckedUpdateManyWithoutClientNestedInput
  referralsMade?: Prisma.ReferralUncheckedUpdateManyWithoutAffiliateClientNestedInput
  referralsReceived?: Prisma.ReferralUncheckedUpdateManyWithoutReferredClientNestedInput
  chatParticipants?: Prisma.ChatParticipantUncheckedUpdateManyWithoutClientNestedInput
}


/**
 * Count Type ClientCountOutputType
 */

export type ClientCountOutputType = {
  orders: number
  reviews: number
  recharges: number
  freelanceOrders: number
  referralsMade: number
  referralsReceived: number
  postTransactions: number
  chatParticipants: number
}

export type ClientCountOutputTypeSelect<ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs> = {
  orders?: boolean | ClientCountOutputTypeCountOrdersArgs
  reviews?: boolean | ClientCountOutputTypeCountReviewsArgs
  recharges?: boolean | ClientCountOutputTypeCountRechargesArgs
  freelanceOrders?: boolean | ClientCountOutputTypeCountFreelanceOrdersArgs
  referralsMade?: boolean | ClientCountOutputTypeCountReferralsMadeArgs
  referralsReceived?: boolean | ClientCountOutputTypeCountReferralsReceivedArgs
  postTransactions?: boolean | ClientCountOutputTypeCountPostTransactionsArgs
  chatParticipants?: boolean | ClientCountOutputTypeCountChatParticipantsArgs
}

/**
 * ClientCountOutputType without action
 */
export type ClientCountOutputTypeDefaultArgs<ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs> = {
  /**
   * Select specific fields to fetch from the ClientCountOutputType
   */
  select?: Prisma.ClientCountOutputTypeSelect<ExtArgs> | null
}

/**
 * ClientCountOutputType without action
 */
export type ClientCountOutputTypeCountOrdersArgs<ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs> = {
  where?: Prisma.OrderWhereInput
}

/**
 * ClientCountOutputType without action
 */
export type ClientCountOutputTypeCountReviewsArgs<ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs> = {
  where?: Prisma.ReviewWhereInput
}

/**
 * ClientCountOutputType without action
 */
export type ClientCountOutputTypeCountRechargesArgs<ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs> = {
  where?: Prisma.AccountRechargeWhereInput
}

/**
 * ClientCountOutputType without action
 */
export type ClientCountOutputTypeCountFreelanceOrdersArgs<ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs> = {
  where?: Prisma.FreelanceOrderWhereInput
}

/**
 * ClientCountOutputType without action
 */
export type ClientCountOutputTypeCountReferralsMadeArgs<ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs> = {
  where?: Prisma.ReferralWhereInput
}

/**
 * ClientCountOutputType without action
 */
export type ClientCountOutputTypeCountReferralsReceivedArgs<ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs> = {
  where?: Prisma.ReferralWhereInput
}

/**
 * ClientCountOutputType without action
 */
export type ClientCountOutputTypeCountPostTransactionsArgs<ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs> = {
  where?: Prisma.PostTransactionWhereInput
}

/**
 * ClientCountOutputType without action
 */
export type ClientCountOutputTypeCountChatParticipantsArgs<ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs> = {
  where?: Prisma.ChatParticipantWhereInput
}


export type ClientSelect<ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs> = runtime.Types.Extensions.GetSelect<{
  id?: boolean
  username?: boolean
  email?: boolean
  fullName?: boolean
  avatar?: boolean
  address?: boolean
  phone?: boolean
  password?: boolean
  isVerified?: boolean
  createdAt?: boolean
  updatedAt?: boolean
  kyc?: boolean | Prisma.Client$kycArgs<ExtArgs>
  orders?: boolean | Prisma.Client$ordersArgs<ExtArgs>
  reviews?: boolean | Prisma.Client$reviewsArgs<ExtArgs>
  recharges?: boolean | Prisma.Client$rechargesArgs<ExtArgs>
  freelanceOrders?: boolean | Prisma.Client$freelanceOrdersArgs<ExtArgs>
  referralsMade?: boolean | Prisma.Client$referralsMadeArgs<ExtArgs>
  referralsReceived?: boolean | Prisma.Client$referralsReceivedArgs<ExtArgs>
  postTransactions?: boolean | Prisma.Client$postTransactionsArgs<ExtArgs>
  chatParticipants?: boolean | Prisma.Client$chatParticipantsArgs<ExtArgs>
  _count?: boolean | Prisma.ClientCountOutputTypeDefaultArgs<ExtArgs>
}, ExtArgs["result"]["client"]>

export type ClientSelectCreateManyAndReturn<ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs> = runtime.Types.Extensions.GetSelect<{
  id?: boolean
  username?: boolean
  email?: boolean
  fullName?: boolean
  avatar?: boolean
  address?: boolean
  phone?: boolean
  password?: boolean
  isVerified?: boolean
  createdAt?: boolean
  updatedAt?: boolean
}, ExtArgs["result"]["client"]>

export type ClientSelectUpdateManyAndReturn<ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs> = runtime.Types.Extensions.GetSelect<{
  id?: boolean
  username?: boolean
  email?: boolean
  fullName?: boolean
  avatar?: boolean
  address?: boolean
  phone?: boolean
  password?: boolean
  isVerified?: boolean
  createdAt?: boolean
  updatedAt?: boolean
}, ExtArgs["result"]["client"]>

export type ClientSelectScalar = {
  id?: boolean
  username?: boolean
  email?: boolean
  fullName?: boolean
  avatar?: boolean
  address?: boolean
  phone?: boolean
  password?: boolean
  isVerified?: boolean
  createdAt?: boolean
  updatedAt?: boolean
}

export type ClientOmit<ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs> = runtime.Types.Extensions.GetOmit<"id" | "username" | "email" | "fullName" | "avatar" | "address" | "phone" | "password" | "isVerified" | "createdAt" | "updatedAt", ExtArgs["result"]["client"]>
export type ClientInclude<ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs> = {
  kyc?: boolean | Prisma.Client$kycArgs<ExtArgs>
  orders?: boolean | Prisma.Client$ordersArgs<ExtArgs>
  reviews?: boolean | Prisma.Client$reviewsArgs<ExtArgs>
  recharges?: boolean | Prisma.Client$rechargesArgs<ExtArgs>
  freelanceOrders?: boolean | Prisma.Client$freelanceOrdersArgs<ExtArgs>
  referralsMade?: boolean | Prisma.Client$referralsMadeArgs<ExtArgs>
  referralsReceived?: boolean | Prisma.Client$referralsReceivedArgs<ExtArgs>
  postTransactions?: boolean | Prisma.Client$postTransactionsArgs<ExtArgs>
  chatParticipants?: boolean | Prisma.Client$chatParticipantsArgs<ExtArgs>
  _count?: boolean | Prisma.ClientCountOutputTypeDefaultArgs<ExtArgs>
}
export type ClientIncludeCreateManyAndReturn<ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs> = {}
export type ClientIncludeUpdateManyAndReturn<ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs> = {}

export type $ClientPayload<ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs> = {
  name: "Client"
  objects: {
    kyc: Prisma.$KYCPayload<ExtArgs> | null
    orders: Prisma.$OrderPayload<ExtArgs>[]
    reviews: Prisma.$ReviewPayload<ExtArgs>[]
    recharges: Prisma.$AccountRechargePayload<ExtArgs>[]
    freelanceOrders: Prisma.$FreelanceOrderPayload<ExtArgs>[]
    referralsMade: Prisma.$ReferralPayload<ExtArgs>[]
    referralsReceived: Prisma.$ReferralPayload<ExtArgs>[]
    postTransactions: Prisma.$PostTransactionPayload<ExtArgs>[]
    chatParticipants: Prisma.$ChatParticipantPayload<ExtArgs>[]
  }
  scalars: runtime.Types.Extensions.GetPayloadResult<{
    id: string
    username: string
    email: string
    fullName: string | null
    avatar: string | null
    address: string | null
    phone: string | null
    password: string
    isVerified: boolean
    createdAt: Date
    updatedAt: Date
  }, ExtArgs["result"]["client"]>
  composites: {}
}

export type ClientGetPayload<S extends boolean | null | undefined | ClientDefaultArgs> = runtime.Types.Result.GetResult<Prisma.$ClientPayload, S>

export type ClientCountArgs<ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs> =
  Omit<ClientFindManyArgs, 'select' | 'include' | 'distinct' | 'omit'> & {
    select?: ClientCountAggregateInputType | true
  }

export interface ClientDelegate<ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs, GlobalOmitOptions = {}> {
  [K: symbol]: { types: Prisma.TypeMap<ExtArgs>['model']['Client'], meta: { name: 'Client' } }
  /**
   * Find zero or one Client that matches the filter.
   * @param {ClientFindUniqueArgs} args - Arguments to find a Client
   * @example
   * // Get one Client
   * const client = await prisma.client.findUnique({
   *   where: {
   *     // ... provide filter here
   *   }
   * })
   */
  findUnique<T extends ClientFindUniqueArgs>(args: Prisma.SelectSubset<T, ClientFindUniqueArgs<ExtArgs>>): Prisma.Prisma__ClientClient<runtime.Types.Result.GetResult<Prisma.$ClientPayload<ExtArgs>, T, "findUnique", GlobalOmitOptions> | null, null, ExtArgs, GlobalOmitOptions>

  /**
   * Find one Client that matches the filter or throw an error with `error.code='P2025'`
   * if no matches were found.
   * @param {ClientFindUniqueOrThrowArgs} args - Arguments to find a Client
   * @example
   * // Get one Client
   * const client = await prisma.client.findUniqueOrThrow({
   *   where: {
   *     // ... provide filter here
   *   }
   * })
   */
  findUniqueOrThrow<T extends ClientFindUniqueOrThrowArgs>(args: Prisma.SelectSubset<T, ClientFindUniqueOrThrowArgs<ExtArgs>>): Prisma.Prisma__ClientClient<runtime.Types.Result.GetResult<Prisma.$ClientPayload<ExtArgs>, T, "findUniqueOrThrow", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

  /**
   * Find the first Client that matches the filter.
   * Note, that providing `undefined` is treated as the value not being there.
   * Read more here: https://pris.ly/d/null-undefined
   * @param {ClientFindFirstArgs} args - Arguments to find a Client
   * @example
   * // Get one Client
   * const client = await prisma.client.findFirst({
   *   where: {
   *     // ... provide filter here
   *   }
   * })
   */
  findFirst<T extends ClientFindFirstArgs>(args?: Prisma.SelectSubset<T, ClientFindFirstArgs<ExtArgs>>): Prisma.Prisma__ClientClient<runtime.Types.Result.GetResult<Prisma.$ClientPayload<ExtArgs>, T, "findFirst", GlobalOmitOptions> | null, null, ExtArgs, GlobalOmitOptions>

  /**
   * Find the first Client that matches the filter or
   * throw `PrismaKnownClientError` with `P2025` code if no matches were found.
   * Note, that providing `undefined` is treated as the value not being there.
   * Read more here: https://pris.ly/d/null-undefined
   * @param {ClientFindFirstOrThrowArgs} args - Arguments to find a Client
   * @example
   * // Get one Client
   * const client = await prisma.client.findFirstOrThrow({
   *   where: {
   *     // ... provide filter here
   *   }
   * })
   */
  findFirstOrThrow<T extends ClientFindFirstOrThrowArgs>(args?: Prisma.SelectSubset<T, ClientFindFirstOrThrowArgs<ExtArgs>>): Prisma.Prisma__ClientClient<runtime.Types.Result.GetResult<Prisma.$ClientPayload<ExtArgs>, T, "findFirstOrThrow", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

  /**
   * Find zero or more Clients that matches the filter.
   * Note, that providing `undefined` is treated as the value not being there.
   * Read more here: https://pris.ly/d/null-undefined
   * @param {ClientFindManyArgs} args - Arguments to filter and select certain fields only.
   * @example
   * // Get all Clients
   * const clients = await prisma.client.findMany()
   * 
   * // Get first 10 Clients
   * const clients = await prisma.client.findMany({ take: 10 })
   * 
   * // Only select the `id`
   * const clientWithIdOnly = await prisma.client.findMany({ select: { id: true } })
   * 
   */
  findMany<T extends ClientFindManyArgs>(args?: Prisma.SelectSubset<T, ClientFindManyArgs<ExtArgs>>): Prisma.PrismaPromise<runtime.Types.Result.GetResult<Prisma.$ClientPayload<ExtArgs>, T, "findMany", GlobalOmitOptions>>

  /**
   * Create a Client.
   * @param {ClientCreateArgs} args - Arguments to create a Client.
   * @example
   * // Create one Client
   * const Client = await prisma.client.create({
   *   data: {
   *     // ... data to create a Client
   *   }
   * })
   * 
   */
  create<T extends ClientCreateArgs>(args: Prisma.SelectSubset<T, ClientCreateArgs<ExtArgs>>): Prisma.Prisma__ClientClient<runtime.Types.Result.GetResult<Prisma.$ClientPayload<ExtArgs>, T, "create", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

  /**
   * Create many Clients.
   * @param {ClientCreateManyArgs} args - Arguments to create many Clients.
   * @example
   * // Create many Clients
   * const client = await prisma.client.createMany({
   *   data: [
   *     // ... provide data here
   *   ]
   * })
   *     
   */
  createMany<T extends ClientCreateManyArgs>(args?: Prisma.SelectSubset<T, ClientCreateManyArgs<ExtArgs>>): Prisma.PrismaPromise<Prisma.BatchPayload>

  /**
   * Create many Clients and returns the data saved in the database.
   * @param {ClientCreateManyAndReturnArgs} args - Arguments to create many Clients.
   * @example
   * // Create many Clients
   * const client = await prisma.client.createManyAndReturn({
   *   data: [
   *     // ... provide data here
   *   ]
   * })
   * 
   * // Create many Clients and only return the `id`
   * const clientWithIdOnly = await prisma.client.createManyAndReturn({
   *   select: { id: true },
   *   data: [
   *     // ... provide data here
   *   ]
   * })
   * Note, that providing `undefined` is treated as the value not being there.
   * Read more here: https://pris.ly/d/null-undefined
   * 
   */
  createManyAndReturn<T extends ClientCreateManyAndReturnArgs>(args?: Prisma.SelectSubset<T, ClientCreateManyAndReturnArgs<ExtArgs>>): Prisma.PrismaPromise<runtime.Types.Result.GetResult<Prisma.$ClientPayload<ExtArgs>, T, "createManyAndReturn", GlobalOmitOptions>>

  /**
   * Delete a Client.
   * @param {ClientDeleteArgs} args - Arguments to delete one Client.
   * @example
   * // Delete one Client
   * const Client = await prisma.client.delete({
   *   where: {
   *     // ... filter to delete one Client
   *   }
   * })
   * 
   */
  delete<T extends ClientDeleteArgs>(args: Prisma.SelectSubset<T, ClientDeleteArgs<ExtArgs>>): Prisma.Prisma__ClientClient<runtime.Types.Result.GetResult<Prisma.$ClientPayload<ExtArgs>, T, "delete", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

  /**
   * Update one Client.
   * @param {ClientUpdateArgs} args - Arguments to update one Client.
   * @example
   * // Update one Client
   * const client = await prisma.client.update({
   *   where: {
   *     // ... provide filter here
   *   },
   *   data: {
   *     // ... provide data here
   *   }
   * })
   * 
   */
  update<T extends ClientUpdateArgs>(args: Prisma.SelectSubset<T, ClientUpdateArgs<ExtArgs>>): Prisma.Prisma__ClientClient<runtime.Types.Result.GetResult<Prisma.$ClientPayload<ExtArgs>, T, "update", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

  /**
   * Delete zero or more Clients.
   * @param {ClientDeleteManyArgs} args - Arguments to filter Clients to delete.
   * @example
   * // Delete a few Clients
   * const { count } = await prisma.client.deleteMany({
   *   where: {
   *     // ... provide filter here
   *   }
   * })
   * 
   */
  deleteMany<T extends ClientDeleteManyArgs>(args?: Prisma.SelectSubset<T, ClientDeleteManyArgs<ExtArgs>>): Prisma.PrismaPromise<Prisma.BatchPayload>

  /**
   * Update zero or more Clients.
   * Note, that providing `undefined` is treated as the value not being there.
   * Read more here: https://pris.ly/d/null-undefined
   * @param {ClientUpdateManyArgs} args - Arguments to update one or more rows.
   * @example
   * // Update many Clients
   * const client = await prisma.client.updateMany({
   *   where: {
   *     // ... provide filter here
   *   },
   *   data: {
   *     // ... provide data here
   *   }
   * })
   * 
   */
  updateMany<T extends ClientUpdateManyArgs>(args: Prisma.SelectSubset<T, ClientUpdateManyArgs<ExtArgs>>): Prisma.PrismaPromise<Prisma.BatchPayload>

  /**
   * Update zero or more Clients and returns the data updated in the database.
   * @param {ClientUpdateManyAndReturnArgs} args - Arguments to update many Clients.
   * @example
   * // Update many Clients
   * const client = await prisma.client.updateManyAndReturn({
   *   where: {
   *     // ... provide filter here
   *   },
   *   data: [
   *     // ... provide data here
   *   ]
   * })
   * 
   * // Update zero or more Clients and only return the `id`
   * const clientWithIdOnly = await prisma.client.updateManyAndReturn({
   *   select: { id: true },
   *   where: {
   *     // ... provide filter here
   *   },
   *   data: [
   *     // ... provide data here
   *   ]
   * })
   * Note, that providing `undefined` is treated as the value not being there.
   * Read more here: https://pris.ly/d/null-undefined
   * 
   */
  updateManyAndReturn<T extends ClientUpdateManyAndReturnArgs>(args: Prisma.SelectSubset<T, ClientUpdateManyAndReturnArgs<ExtArgs>>): Prisma.PrismaPromise<runtime.Types.Result.GetResult<Prisma.$ClientPayload<ExtArgs>, T, "updateManyAndReturn", GlobalOmitOptions>>

  /**
   * Create or update one Client.
   * @param {ClientUpsertArgs} args - Arguments to update or create a Client.
   * @example
   * // Update or create a Client
   * const client = await prisma.client.upsert({
   *   create: {
   *     // ... data to create a Client
   *   },
   *   update: {
   *     // ... in case it already exists, update
   *   },
   *   where: {
   *     // ... the filter for the Client we want to update
   *   }
   * })
   */
  upsert<T extends ClientUpsertArgs>(args: Prisma.SelectSubset<T, ClientUpsertArgs<ExtArgs>>): Prisma.Prisma__ClientClient<runtime.Types.Result.GetResult<Prisma.$ClientPayload<ExtArgs>, T, "upsert", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>


  /**
   * Count the number of Clients.
   * Note, that providing `undefined` is treated as the value not being there.
   * Read more here: https://pris.ly/d/null-undefined
   * @param {ClientCountArgs} args - Arguments to filter Clients to count.
   * @example
   * // Count the number of Clients
   * const count = await prisma.client.count({
   *   where: {
   *     // ... the filter for the Clients we want to count
   *   }
   * })
  **/
  count<T extends ClientCountArgs>(
    args?: Prisma.Subset<T, ClientCountArgs>,
  ): Prisma.PrismaPromise<
    T extends runtime.Types.Utils.Record<'select', any>
      ? T['select'] extends true
        ? number
        : Prisma.GetScalarType<T['select'], ClientCountAggregateOutputType>
      : number
  >

  /**
   * Allows you to perform aggregations operations on a Client.
   * Note, that providing `undefined` is treated as the value not being there.
   * Read more here: https://pris.ly/d/null-undefined
   * @param {ClientAggregateArgs} args - Select which aggregations you would like to apply and on what fields.
   * @example
   * // Ordered by age ascending
   * // Where email contains prisma.io
   * // Limited to the 10 users
   * const aggregations = await prisma.user.aggregate({
   *   _avg: {
   *     age: true,
   *   },
   *   where: {
   *     email: {
   *       contains: "prisma.io",
   *     },
   *   },
   *   orderBy: {
   *     age: "asc",
   *   },
   *   take: 10,
   * })
  **/
  aggregate<T extends ClientAggregateArgs>(args: Prisma.Subset<T, ClientAggregateArgs>): Prisma.PrismaPromise<GetClientAggregateType<T>>

  /**
   * Group by Client.
   * Note, that providing `undefined` is treated as the value not being there.
   * Read more here: https://pris.ly/d/null-undefined
   * @param {ClientGroupByArgs} args - Group by arguments.
   * @example
   * // Group by city, order by createdAt, get count
   * const result = await prisma.user.groupBy({
   *   by: ['city', 'createdAt'],
   *   orderBy: {
   *     createdAt: true
   *   },
   *   _count: {
   *     _all: true
   *   },
   * })
   * 
  **/
  groupBy<
    T extends ClientGroupByArgs,
    HasSelectOrTake extends Prisma.Or<
      Prisma.Extends<'skip', Prisma.Keys<T>>,
      Prisma.Extends<'take', Prisma.Keys<T>>
    >,
    OrderByArg extends Prisma.True extends HasSelectOrTake
      ? { orderBy: ClientGroupByArgs['orderBy'] }
      : { orderBy?: ClientGroupByArgs['orderBy'] },
    OrderFields extends Prisma.ExcludeUnderscoreKeys<Prisma.Keys<Prisma.MaybeTupleToUnion<T['orderBy']>>>,
    ByFields extends Prisma.MaybeTupleToUnion<T['by']>,
    ByValid extends Prisma.Has<ByFields, OrderFields>,
    HavingFields extends Prisma.GetHavingFields<T['having']>,
    HavingValid extends Prisma.Has<ByFields, HavingFields>,
    ByEmpty extends T['by'] extends never[] ? Prisma.True : Prisma.False,
    InputErrors extends ByEmpty extends Prisma.True
    ? `Error: "by" must not be empty.`
    : HavingValid extends Prisma.False
    ? {
        [P in HavingFields]: P extends ByFields
          ? never
          : P extends string
          ? `Error: Field "${P}" used in "having" needs to be provided in "by".`
          : [
              Error,
              'Field ',
              P,
              ` in "having" needs to be provided in "by"`,
            ]
      }[HavingFields]
    : 'take' extends Prisma.Keys<T>
    ? 'orderBy' extends Prisma.Keys<T>
      ? ByValid extends Prisma.True
        ? {}
        : {
            [P in OrderFields]: P extends ByFields
              ? never
              : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
          }[OrderFields]
      : 'Error: If you provide "take", you also need to provide "orderBy"'
    : 'skip' extends Prisma.Keys<T>
    ? 'orderBy' extends Prisma.Keys<T>
      ? ByValid extends Prisma.True
        ? {}
        : {
            [P in OrderFields]: P extends ByFields
              ? never
              : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
          }[OrderFields]
      : 'Error: If you provide "skip", you also need to provide "orderBy"'
    : ByValid extends Prisma.True
    ? {}
    : {
        [P in OrderFields]: P extends ByFields
          ? never
          : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
      }[OrderFields]
  >(args: Prisma.SubsetIntersection<T, ClientGroupByArgs, OrderByArg> & InputErrors): {} extends InputErrors ? GetClientGroupByPayload<T> : Prisma.PrismaPromise<InputErrors>
/**
 * Fields of the Client model
 */
readonly fields: ClientFieldRefs;
}

/**
 * The delegate class that acts as a "Promise-like" for Client.
 * Why is this prefixed with `Prisma__`?
 * Because we want to prevent naming conflicts as mentioned in
 * https://github.com/prisma/prisma-client-js/issues/707
 */
export interface Prisma__ClientClient<T, Null = never, ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs, GlobalOmitOptions = {}> extends Prisma.PrismaPromise<T> {
  readonly [Symbol.toStringTag]: "PrismaPromise"
  kyc<T extends Prisma.Client$kycArgs<ExtArgs> = {}>(args?: Prisma.Subset<T, Prisma.Client$kycArgs<ExtArgs>>): Prisma.Prisma__KYCClient<runtime.Types.Result.GetResult<Prisma.$KYCPayload<ExtArgs>, T, "findUniqueOrThrow", GlobalOmitOptions> | null, null, ExtArgs, GlobalOmitOptions>
  orders<T extends Prisma.Client$ordersArgs<ExtArgs> = {}>(args?: Prisma.Subset<T, Prisma.Client$ordersArgs<ExtArgs>>): Prisma.PrismaPromise<runtime.Types.Result.GetResult<Prisma.$OrderPayload<ExtArgs>, T, "findMany", GlobalOmitOptions> | Null>
  reviews<T extends Prisma.Client$reviewsArgs<ExtArgs> = {}>(args?: Prisma.Subset<T, Prisma.Client$reviewsArgs<ExtArgs>>): Prisma.PrismaPromise<runtime.Types.Result.GetResult<Prisma.$ReviewPayload<ExtArgs>, T, "findMany", GlobalOmitOptions> | Null>
  recharges<T extends Prisma.Client$rechargesArgs<ExtArgs> = {}>(args?: Prisma.Subset<T, Prisma.Client$rechargesArgs<ExtArgs>>): Prisma.PrismaPromise<runtime.Types.Result.GetResult<Prisma.$AccountRechargePayload<ExtArgs>, T, "findMany", GlobalOmitOptions> | Null>
  freelanceOrders<T extends Prisma.Client$freelanceOrdersArgs<ExtArgs> = {}>(args?: Prisma.Subset<T, Prisma.Client$freelanceOrdersArgs<ExtArgs>>): Prisma.PrismaPromise<runtime.Types.Result.GetResult<Prisma.$FreelanceOrderPayload<ExtArgs>, T, "findMany", GlobalOmitOptions> | Null>
  referralsMade<T extends Prisma.Client$referralsMadeArgs<ExtArgs> = {}>(args?: Prisma.Subset<T, Prisma.Client$referralsMadeArgs<ExtArgs>>): Prisma.PrismaPromise<runtime.Types.Result.GetResult<Prisma.$ReferralPayload<ExtArgs>, T, "findMany", GlobalOmitOptions> | Null>
  referralsReceived<T extends Prisma.Client$referralsReceivedArgs<ExtArgs> = {}>(args?: Prisma.Subset<T, Prisma.Client$referralsReceivedArgs<ExtArgs>>): Prisma.PrismaPromise<runtime.Types.Result.GetResult<Prisma.$ReferralPayload<ExtArgs>, T, "findMany", GlobalOmitOptions> | Null>
  postTransactions<T extends Prisma.Client$postTransactionsArgs<ExtArgs> = {}>(args?: Prisma.Subset<T, Prisma.Client$postTransactionsArgs<ExtArgs>>): Prisma.PrismaPromise<runtime.Types.Result.GetResult<Prisma.$PostTransactionPayload<ExtArgs>, T, "findMany", GlobalOmitOptions> | Null>
  chatParticipants<T extends Prisma.Client$chatParticipantsArgs<ExtArgs> = {}>(args?: Prisma.Subset<T, Prisma.Client$chatParticipantsArgs<ExtArgs>>): Prisma.PrismaPromise<runtime.Types.Result.GetResult<Prisma.$ChatParticipantPayload<ExtArgs>, T, "findMany", GlobalOmitOptions> | Null>
  /**
   * Attaches callbacks for the resolution and/or rejection of the Promise.
   * @param onfulfilled The callback to execute when the Promise is resolved.
   * @param onrejected The callback to execute when the Promise is rejected.
   * @returns A Promise for the completion of which ever callback is executed.
   */
  then<TResult1 = T, TResult2 = never>(onfulfilled?: ((value: T) => TResult1 | PromiseLike<TResult1>) | undefined | null, onrejected?: ((reason: any) => TResult2 | PromiseLike<TResult2>) | undefined | null): runtime.Types.Utils.JsPromise<TResult1 | TResult2>
  /**
   * Attaches a callback for only the rejection of the Promise.
   * @param onrejected The callback to execute when the Promise is rejected.
   * @returns A Promise for the completion of the callback.
   */
  catch<TResult = never>(onrejected?: ((reason: any) => TResult | PromiseLike<TResult>) | undefined | null): runtime.Types.Utils.JsPromise<T | TResult>
  /**
   * Attaches a callback that is invoked when the Promise is settled (fulfilled or rejected). The
   * resolved value cannot be modified from the callback.
   * @param onfinally The callback to execute when the Promise is settled (fulfilled or rejected).
   * @returns A Promise for the completion of the callback.
   */
  finally(onfinally?: (() => void) | undefined | null): runtime.Types.Utils.JsPromise<T>
}




/**
 * Fields of the Client model
 */
export interface ClientFieldRefs {
  readonly id: Prisma.FieldRef<"Client", 'String'>
  readonly username: Prisma.FieldRef<"Client", 'String'>
  readonly email: Prisma.FieldRef<"Client", 'String'>
  readonly fullName: Prisma.FieldRef<"Client", 'String'>
  readonly avatar: Prisma.FieldRef<"Client", 'String'>
  readonly address: Prisma.FieldRef<"Client", 'String'>
  readonly phone: Prisma.FieldRef<"Client", 'String'>
  readonly password: Prisma.FieldRef<"Client", 'String'>
  readonly isVerified: Prisma.FieldRef<"Client", 'Boolean'>
  readonly createdAt: Prisma.FieldRef<"Client", 'DateTime'>
  readonly updatedAt: Prisma.FieldRef<"Client", 'DateTime'>
}
    

// Custom InputTypes
/**
 * Client findUnique
 */
export type ClientFindUniqueArgs<ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs> = {
  /**
   * Select specific fields to fetch from the Client
   */
  select?: Prisma.ClientSelect<ExtArgs> | null
  /**
   * Omit specific fields from the Client
   */
  omit?: Prisma.ClientOmit<ExtArgs> | null
  /**
   * Choose, which related nodes to fetch as well
   */
  include?: Prisma.ClientInclude<ExtArgs> | null
  /**
   * Filter, which Client to fetch.
   */
  where: Prisma.ClientWhereUniqueInput
}

/**
 * Client findUniqueOrThrow
 */
export type ClientFindUniqueOrThrowArgs<ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs> = {
  /**
   * Select specific fields to fetch from the Client
   */
  select?: Prisma.ClientSelect<ExtArgs> | null
  /**
   * Omit specific fields from the Client
   */
  omit?: Prisma.ClientOmit<ExtArgs> | null
  /**
   * Choose, which related nodes to fetch as well
   */
  include?: Prisma.ClientInclude<ExtArgs> | null
  /**
   * Filter, which Client to fetch.
   */
  where: Prisma.ClientWhereUniqueInput
}

/**
 * Client findFirst
 */
export type ClientFindFirstArgs<ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs> = {
  /**
   * Select specific fields to fetch from the Client
   */
  select?: Prisma.ClientSelect<ExtArgs> | null
  /**
   * Omit specific fields from the Client
   */
  omit?: Prisma.ClientOmit<ExtArgs> | null
  /**
   * Choose, which related nodes to fetch as well
   */
  include?: Prisma.ClientInclude<ExtArgs> | null
  /**
   * Filter, which Client to fetch.
   */
  where?: Prisma.ClientWhereInput
  /**
   * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
   * 
   * Determine the order of Clients to fetch.
   */
  orderBy?: Prisma.ClientOrderByWithRelationInput | Prisma.ClientOrderByWithRelationInput[]
  /**
   * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
   * 
   * Sets the position for searching for Clients.
   */
  cursor?: Prisma.ClientWhereUniqueInput
  /**
   * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
   * 
   * Take `Â±n` Clients from the position of the cursor.
   */
  take?: number
  /**
   * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
   * 
   * Skip the first `n` Clients.
   */
  skip?: number
  /**
   * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
   * 
   * Filter by unique combinations of Clients.
   */
  distinct?: Prisma.ClientScalarFieldEnum | Prisma.ClientScalarFieldEnum[]
}

/**
 * Client findFirstOrThrow
 */
export type ClientFindFirstOrThrowArgs<ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs> = {
  /**
   * Select specific fields to fetch from the Client
   */
  select?: Prisma.ClientSelect<ExtArgs> | null
  /**
   * Omit specific fields from the Client
   */
  omit?: Prisma.ClientOmit<ExtArgs> | null
  /**
   * Choose, which related nodes to fetch as well
   */
  include?: Prisma.ClientInclude<ExtArgs> | null
  /**
   * Filter, which Client to fetch.
   */
  where?: Prisma.ClientWhereInput
  /**
   * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
   * 
   * Determine the order of Clients to fetch.
   */
  orderBy?: Prisma.ClientOrderByWithRelationInput | Prisma.ClientOrderByWithRelationInput[]
  /**
   * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
   * 
   * Sets the position for searching for Clients.
   */
  cursor?: Prisma.ClientWhereUniqueInput
  /**
   * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
   * 
   * Take `Â±n` Clients from the position of the cursor.
   */
  take?: number
  /**
   * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
   * 
   * Skip the first `n` Clients.
   */
  skip?: number
  /**
   * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
   * 
   * Filter by unique combinations of Clients.
   */
  distinct?: Prisma.ClientScalarFieldEnum | Prisma.ClientScalarFieldEnum[]
}

/**
 * Client findMany
 */
export type ClientFindManyArgs<ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs> = {
  /**
   * Select specific fields to fetch from the Client
   */
  select?: Prisma.ClientSelect<ExtArgs> | null
  /**
   * Omit specific fields from the Client
   */
  omit?: Prisma.ClientOmit<ExtArgs> | null
  /**
   * Choose, which related nodes to fetch as well
   */
  include?: Prisma.ClientInclude<ExtArgs> | null
  /**
   * Filter, which Clients to fetch.
   */
  where?: Prisma.ClientWhereInput
  /**
   * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
   * 
   * Determine the order of Clients to fetch.
   */
  orderBy?: Prisma.ClientOrderByWithRelationInput | Prisma.ClientOrderByWithRelationInput[]
  /**
   * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
   * 
   * Sets the position for listing Clients.
   */
  cursor?: Prisma.ClientWhereUniqueInput
  /**
   * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
   * 
   * Take `Â±n` Clients from the position of the cursor.
   */
  take?: number
  /**
   * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
   * 
   * Skip the first `n` Clients.
   */
  skip?: number
  distinct?: Prisma.ClientScalarFieldEnum | Prisma.ClientScalarFieldEnum[]
}

/**
 * Client create
 */
export type ClientCreateArgs<ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs> = {
  /**
   * Select specific fields to fetch from the Client
   */
  select?: Prisma.ClientSelect<ExtArgs> | null
  /**
   * Omit specific fields from the Client
   */
  omit?: Prisma.ClientOmit<ExtArgs> | null
  /**
   * Choose, which related nodes to fetch as well
   */
  include?: Prisma.ClientInclude<ExtArgs> | null
  /**
   * The data needed to create a Client.
   */
  data: Prisma.XOR<Prisma.ClientCreateInput, Prisma.ClientUncheckedCreateInput>
}

/**
 * Client createMany
 */
export type ClientCreateManyArgs<ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs> = {
  /**
   * The data used to create many Clients.
   */
  data: Prisma.ClientCreateManyInput | Prisma.ClientCreateManyInput[]
  skipDuplicates?: boolean
}

/**
 * Client createManyAndReturn
 */
export type ClientCreateManyAndReturnArgs<ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs> = {
  /**
   * Select specific fields to fetch from the Client
   */
  select?: Prisma.ClientSelectCreateManyAndReturn<ExtArgs> | null
  /**
   * Omit specific fields from the Client
   */
  omit?: Prisma.ClientOmit<ExtArgs> | null
  /**
   * The data used to create many Clients.
   */
  data: Prisma.ClientCreateManyInput | Prisma.ClientCreateManyInput[]
  skipDuplicates?: boolean
}

/**
 * Client update
 */
export type ClientUpdateArgs<ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs> = {
  /**
   * Select specific fields to fetch from the Client
   */
  select?: Prisma.ClientSelect<ExtArgs> | null
  /**
   * Omit specific fields from the Client
   */
  omit?: Prisma.ClientOmit<ExtArgs> | null
  /**
   * Choose, which related nodes to fetch as well
   */
  include?: Prisma.ClientInclude<ExtArgs> | null
  /**
   * The data needed to update a Client.
   */
  data: Prisma.XOR<Prisma.ClientUpdateInput, Prisma.ClientUncheckedUpdateInput>
  /**
   * Choose, which Client to update.
   */
  where: Prisma.ClientWhereUniqueInput
}

/**
 * Client updateMany
 */
export type ClientUpdateManyArgs<ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs> = {
  /**
   * The data used to update Clients.
   */
  data: Prisma.XOR<Prisma.ClientUpdateManyMutationInput, Prisma.ClientUncheckedUpdateManyInput>
  /**
   * Filter which Clients to update
   */
  where?: Prisma.ClientWhereInput
  /**
   * Limit how many Clients to update.
   */
  limit?: number
}

/**
 * Client updateManyAndReturn
 */
export type ClientUpdateManyAndReturnArgs<ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs> = {
  /**
   * Select specific fields to fetch from the Client
   */
  select?: Prisma.ClientSelectUpdateManyAndReturn<ExtArgs> | null
  /**
   * Omit specific fields from the Client
   */
  omit?: Prisma.ClientOmit<ExtArgs> | null
  /**
   * The data used to update Clients.
   */
  data: Prisma.XOR<Prisma.ClientUpdateManyMutationInput, Prisma.ClientUncheckedUpdateManyInput>
  /**
   * Filter which Clients to update
   */
  where?: Prisma.ClientWhereInput
  /**
   * Limit how many Clients to update.
   */
  limit?: number
}

/**
 * Client upsert
 */
export type ClientUpsertArgs<ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs> = {
  /**
   * Select specific fields to fetch from the Client
   */
  select?: Prisma.ClientSelect<ExtArgs> | null
  /**
   * Omit specific fields from the Client
   */
  omit?: Prisma.ClientOmit<ExtArgs> | null
  /**
   * Choose, which related nodes to fetch as well
   */
  include?: Prisma.ClientInclude<ExtArgs> | null
  /**
   * The filter to search for the Client to update in case it exists.
   */
  where: Prisma.ClientWhereUniqueInput
  /**
   * In case the Client found by the `where` argument doesn't exist, create a new Client with this data.
   */
  create: Prisma.XOR<Prisma.ClientCreateInput, Prisma.ClientUncheckedCreateInput>
  /**
   * In case the Client was found with the provided `where` argument, update it with this data.
   */
  update: Prisma.XOR<Prisma.ClientUpdateInput, Prisma.ClientUncheckedUpdateInput>
}

/**
 * Client delete
 */
export type ClientDeleteArgs<ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs> = {
  /**
   * Select specific fields to fetch from the Client
   */
  select?: Prisma.ClientSelect<ExtArgs> | null
  /**
   * Omit specific fields from the Client
   */
  omit?: Prisma.ClientOmit<ExtArgs> | null
  /**
   * Choose, which related nodes to fetch as well
   */
  include?: Prisma.ClientInclude<ExtArgs> | null
  /**
   * Filter which Client to delete.
   */
  where: Prisma.ClientWhereUniqueInput
}

/**
 * Client deleteMany
 */
export type ClientDeleteManyArgs<ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs> = {
  /**
   * Filter which Clients to delete
   */
  where?: Prisma.ClientWhereInput
  /**
   * Limit how many Clients to delete.
   */
  limit?: number
}

/**
 * Client.kyc
 */
export type Client$kycArgs<ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs> = {
  /**
   * Select specific fields to fetch from the KYC
   */
  select?: Prisma.KYCSelect<ExtArgs> | null
  /**
   * Omit specific fields from the KYC
   */
  omit?: Prisma.KYCOmit<ExtArgs> | null
  /**
   * Choose, which related nodes to fetch as well
   */
  include?: Prisma.KYCInclude<ExtArgs> | null
  where?: Prisma.KYCWhereInput
}

/**
 * Client.orders
 */
export type Client$ordersArgs<ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs> = {
  /**
   * Select specific fields to fetch from the Order
   */
  select?: Prisma.OrderSelect<ExtArgs> | null
  /**
   * Omit specific fields from the Order
   */
  omit?: Prisma.OrderOmit<ExtArgs> | null
  /**
   * Choose, which related nodes to fetch as well
   */
  include?: Prisma.OrderInclude<ExtArgs> | null
  where?: Prisma.OrderWhereInput
  orderBy?: Prisma.OrderOrderByWithRelationInput | Prisma.OrderOrderByWithRelationInput[]
  cursor?: Prisma.OrderWhereUniqueInput
  take?: number
  skip?: number
  distinct?: Prisma.OrderScalarFieldEnum | Prisma.OrderScalarFieldEnum[]
}

/**
 * Client.reviews
 */
export type Client$reviewsArgs<ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs> = {
  /**
   * Select specific fields to fetch from the Review
   */
  select?: Prisma.ReviewSelect<ExtArgs> | null
  /**
   * Omit specific fields from the Review
   */
  omit?: Prisma.ReviewOmit<ExtArgs> | null
  /**
   * Choose, which related nodes to fetch as well
   */
  include?: Prisma.ReviewInclude<ExtArgs> | null
  where?: Prisma.ReviewWhereInput
  orderBy?: Prisma.ReviewOrderByWithRelationInput | Prisma.ReviewOrderByWithRelationInput[]
  cursor?: Prisma.ReviewWhereUniqueInput
  take?: number
  skip?: number
  distinct?: Prisma.ReviewScalarFieldEnum | Prisma.ReviewScalarFieldEnum[]
}

/**
 * Client.recharges
 */
export type Client$rechargesArgs<ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs> = {
  /**
   * Select specific fields to fetch from the AccountRecharge
   */
  select?: Prisma.AccountRechargeSelect<ExtArgs> | null
  /**
   * Omit specific fields from the AccountRecharge
   */
  omit?: Prisma.AccountRechargeOmit<ExtArgs> | null
  /**
   * Choose, which related nodes to fetch as well
   */
  include?: Prisma.AccountRechargeInclude<ExtArgs> | null
  where?: Prisma.AccountRechargeWhereInput
  orderBy?: Prisma.AccountRechargeOrderByWithRelationInput | Prisma.AccountRechargeOrderByWithRelationInput[]
  cursor?: Prisma.AccountRechargeWhereUniqueInput
  take?: number
  skip?: number
  distinct?: Prisma.AccountRechargeScalarFieldEnum | Prisma.AccountRechargeScalarFieldEnum[]
}

/**
 * Client.freelanceOrders
 */
export type Client$freelanceOrdersArgs<ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs> = {
  /**
   * Select specific fields to fetch from the FreelanceOrder
   */
  select?: Prisma.FreelanceOrderSelect<ExtArgs> | null
  /**
   * Omit specific fields from the FreelanceOrder
   */
  omit?: Prisma.FreelanceOrderOmit<ExtArgs> | null
  /**
   * Choose, which related nodes to fetch as well
   */
  include?: Prisma.FreelanceOrderInclude<ExtArgs> | null
  where?: Prisma.FreelanceOrderWhereInput
  orderBy?: Prisma.FreelanceOrderOrderByWithRelationInput | Prisma.FreelanceOrderOrderByWithRelationInput[]
  cursor?: Prisma.FreelanceOrderWhereUniqueInput
  take?: number
  skip?: number
  distinct?: Prisma.FreelanceOrderScalarFieldEnum | Prisma.FreelanceOrderScalarFieldEnum[]
}

/**
 * Client.referralsMade
 */
export type Client$referralsMadeArgs<ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs> = {
  /**
   * Select specific fields to fetch from the Referral
   */
  select?: Prisma.ReferralSelect<ExtArgs> | null
  /**
   * Omit specific fields from the Referral
   */
  omit?: Prisma.ReferralOmit<ExtArgs> | null
  /**
   * Choose, which related nodes to fetch as well
   */
  include?: Prisma.ReferralInclude<ExtArgs> | null
  where?: Prisma.ReferralWhereInput
  orderBy?: Prisma.ReferralOrderByWithRelationInput | Prisma.ReferralOrderByWithRelationInput[]
  cursor?: Prisma.ReferralWhereUniqueInput
  take?: number
  skip?: number
  distinct?: Prisma.ReferralScalarFieldEnum | Prisma.ReferralScalarFieldEnum[]
}

/**
 * Client.referralsReceived
 */
export type Client$referralsReceivedArgs<ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs> = {
  /**
   * Select specific fields to fetch from the Referral
   */
  select?: Prisma.ReferralSelect<ExtArgs> | null
  /**
   * Omit specific fields from the Referral
   */
  omit?: Prisma.ReferralOmit<ExtArgs> | null
  /**
   * Choose, which related nodes to fetch as well
   */
  include?: Prisma.ReferralInclude<ExtArgs> | null
  where?: Prisma.ReferralWhereInput
  orderBy?: Prisma.ReferralOrderByWithRelationInput | Prisma.ReferralOrderByWithRelationInput[]
  cursor?: Prisma.ReferralWhereUniqueInput
  take?: number
  skip?: number
  distinct?: Prisma.ReferralScalarFieldEnum | Prisma.ReferralScalarFieldEnum[]
}

/**
 * Client.postTransactions
 */
export type Client$postTransactionsArgs<ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs> = {
  /**
   * Select specific fields to fetch from the PostTransaction
   */
  select?: Prisma.PostTransactionSelect<ExtArgs> | null
  /**
   * Omit specific fields from the PostTransaction
   */
  omit?: Prisma.PostTransactionOmit<ExtArgs> | null
  /**
   * Choose, which related nodes to fetch as well
   */
  include?: Prisma.PostTransactionInclude<ExtArgs> | null
  where?: Prisma.PostTransactionWhereInput
  orderBy?: Prisma.PostTransactionOrderByWithRelationInput | Prisma.PostTransactionOrderByWithRelationInput[]
  cursor?: Prisma.PostTransactionWhereUniqueInput
  take?: number
  skip?: number
  distinct?: Prisma.PostTransactionScalarFieldEnum | Prisma.PostTransactionScalarFieldEnum[]
}

/**
 * Client.chatParticipants
 */
export type Client$chatParticipantsArgs<ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs> = {
  /**
   * Select specific fields to fetch from the ChatParticipant
   */
  select?: Prisma.ChatParticipantSelect<ExtArgs> | null
  /**
   * Omit specific fields from the ChatParticipant
   */
  omit?: Prisma.ChatParticipantOmit<ExtArgs> | null
  /**
   * Choose, which related nodes to fetch as well
   */
  include?: Prisma.ChatParticipantInclude<ExtArgs> | null
  where?: Prisma.ChatParticipantWhereInput
  orderBy?: Prisma.ChatParticipantOrderByWithRelationInput | Prisma.ChatParticipantOrderByWithRelationInput[]
  cursor?: Prisma.ChatParticipantWhereUniqueInput
  take?: number
  skip?: number
  distinct?: Prisma.ChatParticipantScalarFieldEnum | Prisma.ChatParticipantScalarFieldEnum[]
}

/**
 * Client without action
 */
export type ClientDefaultArgs<ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs> = {
  /**
   * Select specific fields to fetch from the Client
   */
  select?: Prisma.ClientSelect<ExtArgs> | null
  /**
   * Omit specific fields from the Client
   */
  omit?: Prisma.ClientOmit<ExtArgs> | null
  /**
   * Choose, which related nodes to fetch as well
   */
  include?: Prisma.ClientInclude<ExtArgs> | null
}
